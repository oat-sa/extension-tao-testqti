{"version":3,"sources":["css!taoQtiTestCss/plugins/key-navigation","../../../taoQtiTest/views/js/runner/plugins/content/accessibility/keyNavigation.js","../../../taoQtiTest/views/js/runner/plugins/content/dialog/dialog.js","../../../taoQtiTest/views/js/runner/plugins/content/dialog/exitMessages.js","../../../taoQtiTest/views/js/runner/plugins/content/dialog/itemAlertMessage.js","../../../taoQtiTest/views/js/runner/plugins/templates/button!tpl","../../../taoQtiTest/views/js/runner/plugins/content/dialog/itemInlineMessage.js","../../../taoQtiTest/views/js/runner/plugins/content/feedback/feedback.js","../../../taoQtiTest/views/js/runner/plugins/content/loading/loading.js","../../../taoQtiTest/views/js/runner/plugins/content/modalFeedback/modalFeedback.js","../../../taoQtiTest/views/js/runner/plugins/content/overlay/overlay.js","../../../taoQtiTest/views/js/runner/plugins/content/responsiveness/collapser.js","../../../taoQtiTest/views/js/runner/plugins/content/rubricBlock/rubricBlock!tpl","../../../taoQtiTest/views/js/runner/plugins/content/rubricBlock/rubricBlock.js","../../../taoQtiTest/views/js/runner/plugins/controls/connectivity/connectivity!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/connectivity/connectivity.js","../../../taoQtiTest/views/js/runner/plugins/controls/duration/duration.js","../../../taoQtiTest/views/js/runner/plugins/controls/progressbar/progressbar!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/progressbar/progressbar.js","../../../taoQtiTest/views/js/runner/plugins/controls/testState/testState.js","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timer!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timerComponent.js","../../../taoQtiTest/views/js/runner/helpers/map.js","../../../taoQtiTest/views/js/runner/helpers/currentItem.js","../../../taoQtiTest/views/js/runner/helpers/stats.js","../../../taoQtiTest/views/js/runner/helpers/messages.js","../../../taoQtiTest/views/js/runner/helpers/navigation.js","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timers!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timer.js","../../../taoQtiTest/views/js/runner/plugins/controls/title/title!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/title/title.js","../../../taoQtiTest/views/js/runner/plugins/controls/trace/itemTraceVariables.js","../../../taoQtiTest/views/js/runner/plugins/navigation/allowSkipping.js","../../../taoQtiTest/views/js/runner/plugins/navigation/next/nextWarningHelper.js","../../../taoQtiTest/views/js/runner/plugins/navigation/next.js","../../../taoQtiTest/views/js/runner/plugins/navigation/nextSection.js","../../../taoQtiTest/views/js/runner/plugins/navigation/previous.js","../../../taoQtiTest/views/js/runner/plugins/navigation/review/navigator!tpl","../../../taoQtiTest/views/js/runner/plugins/navigation/review/navigatorTree!tpl","../../../taoQtiTest/views/js/runner/plugins/navigation/review/navigator.js","../../../taoQtiTest/views/js/runner/plugins/navigation/review/review.js","../../../taoQtiTest/views/js/runner/plugins/navigation/skip.js","../../../taoQtiTest/views/js/runner/plugins/navigation/validateResponses.js","../../../taoQtiTest/views/js/runner/plugins/navigation/warnBeforeLeaving.js","../../../taoQtiTest/views/js/runner/plugins/security/disableRightClick.js","../../../taoQtiTest/views/js/runner/plugins/tools/answerElimination/eliminator.js","../../../taoQtiTest/views/js/runner/plugins/tools/answerMasking/tpl/mask!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/answerMasking/answerMasking.js","../../../taoQtiTest/views/js/runner/plugins/tools/answerMasking/plugin.js","../../../taoQtiTest/views/js/runner/plugins/tools/areaMasking/mask!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/areaMasking/mask.js","../../../taoQtiTest/views/js/runner/plugins/tools/areaMasking/areaMasking.js","../../../taoQtiTest/views/js/runner/plugins/tools/calculator.js","../../../taoQtiTest/views/js/runner/plugins/tools/comment/comment!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/comment/comment.js","../../../taoQtiTest/views/js/runner/plugins/tools/documentViewer/panel!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/documentViewer/documentViewer.js","../../../taoQtiTest/views/js/runner/plugins/tools/highlighter/highlighter.js","../../../taoQtiTest/views/js/runner/plugins/tools/highlighter/plugin.js","../../../taoQtiTest/views/js/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher.js","../../../taoQtiTest/views/js/runner/plugins/tools/lineReader/compoundMask.js","../../../taoQtiTest/views/js/runner/plugins/tools/lineReader/plugin.js","../../../taoQtiTest/views/js/runner/plugins/tools/magnifier/magnifierPanel!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/magnifier/magnifierPanel.js","../../../taoQtiTest/views/js/runner/plugins/tools/magnifier/magnifier.js","../../../taoQtiTest/views/js/runner/plugins/tools/textToSpeech/textToSpeech!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/textToSpeech/textToSpeech!css","../../../taoQtiTest/views/js/runner/plugins/tools/textToSpeech/textToSpeech.js","../../../taoQtiTest/views/js/runner/plugins/tools/textToSpeech/plugin.js","../../../taoQtiTest/views/js/runner/plugins/tools/zoom.js","../../../../../../../../../../onLayerEnd0.js"],"names":["define","$","_","keyNavigator","navigableDomElement","navigableGroupElement","shortcut","namespaceHelper","pluginFactory","initToolbarNavigation","$navigationBar","$focusables","find","navigables","createFromDoms","length","id","replace","group","elements","defaultPosition","on","this","next","previous","cursor","navigable","getElement","click","mousedown","initHeaderNavigation","$headerElements","closest","loop","initNavigatorNavigation","testRunner","filtersNavigator","itemsNavigator","$filters","$trees","navigableFilters","navigableTrees","filterCursor","$panel","getAreaBroker","getPanelArea","$navigator","navigators","itemListingVisited","hasClass","keepState","defer","focus","first","last","origin","position","push","pos","data","forIn","i","$parent","parent","is","addClass","removeClass","initContentNavigation","itemNavigators","$content","getContentArea","filter","parents","each","$itemElement","union","initInteractionNavigation","propagateTab","$interaction","$inputs","interactionNavigables","interactionNavigators","$nav","off","initRubricNavigation","$itemElements","rubricNavigators","initTestRunnerNavigation","document","activeElement","blur","createFromNavigators","name","init","self","getTestRunner","add","groupNavigator","isFocused","disable","after","enable","destroy","remove","getName","__","dialogAlert","dialogConfirm","shortcutRegistry","globalShortcut","closeAccept","dialog","trigger","hide","closeReject","closeLast","accept","handle","opened","addHandle","namespace","stack","message","reject","options","doAccept","e","reason","isFunction","doReject","context","dialogShortcut","removeHandle","closeDialogs","forEach","alerts","confirms","testData","getTestData","testConfig","config","pluginShortcuts","shortcuts","propagate","prevent","set","allowShortcuts","command","key","namespaceAll","before","msg","actionPrefix","clear","Promise","install","isObject","resolve","getTestContext","itemIdentifier","disableItem","hider","$element","getContent","dom","modal","render","itemRunner","$modalsContainer","$container","_item","container","append","hb","template","Handlebars","depth0","helpers","partials","program1","stack1","helper","buffer","className","call","hash","functionType","escapeExpression","program3","icon","unless","text","inverse","noop","fn","program","program4","program6","compilerInfo","merge","control","title","buttonTpl","buttonData","end","$button","dataType","isLast","$btn","preventDefault","$navigationContainer","getNavigationArea","$inlineContainer","removeProp","prop","feedback","currentFeedback","closeCurrent","close","err","type","error","danger","warning","info","loadingBar","start","stop","module","inlineMessage","alertMessage","autoscroll","destroyFeedback","removed","renderedFeedbacks","storedFeedback","found","nextStep","defineMode","inline","inlineMode","messagePlugin","isDestroyed","inlineModalFeedback","createMessages","renderingQueue","bInlineMode","isBoolean","renderingToken","done","tFeedbacks","slice","stopImmediatePropagation","stopPropagation","shield","unshield","itemRef","pluginsConfig","plugins","overlayConfig","overlay","full","show","ns","defaults","collapseTools","collapseNavigation","collapseInOrder","hover","collaspeOrder","$window","window","buildCollapsiblesList","shouldCollapseInOrder","allCollapsibles","collapseOrder","map","selector","$elements","not","extraWidth","getExtraWidth","compact","$toolbox","$navigation","totalExtraWidth","reduce","total","collapsible","expandedWidth","collapsedWidth","collapseCls","outerWidth","toggleCollapsibles","availableWidth","getAvailableWidth","previousAvailableWidth","collapseAll","collapseNeeded","expandInOrder","expandAll","isArray","yes","toggleClass","toCollapse","collapsiblesCopy","clone","shift","getToolbarWidth","expandPossible","forEachRight","toExpand","$actionsBar","width","collapser","areaBroker","getArea","getToolboxArea","throttle","Infinity","containerTpl","blankifyLinks","attr","mathify","require","MathJax","Hub","Queue","rubrics","html","then","empty","helperMissing","state","waitingDialog","connectivityTpl","waiting","proxy","getProxy","isOnline","source","getState","setState","isConnectivityError","isOffline","waitContent","proceedContent","testContext","loadItem","finish","endWait","getControlArea","pollingFactory","timerFactory","store","shouldClearStorage","getConfig","serviceCallId","durationStore","getItemDuration","attemptId","test","getItem","Error","stopwatch","autoStart","polling","action","itemAttemptId","attempt","duration","elapsed","tick","isNumber","setItem","interval","params","itemDuration","addCallActionParams","getDuration","removeStore","catch","resume","pause","progressTpl","progressUpdater","testMap","progressConfig","percentage","Math","max","numberItems","ratio","floor","numberCompleted","label","getTestPart","parts","testPartId","getTestSection","testPart","sections","sectionId","progressScopeCounter","itemPosition","acc","section","size","items","testSection","positionInPart","positionInSection","counter","scope","currentPosition","showTotal","indicator","$progressLabel","$progressControl","progressIndicator","update","progressData","getTestMap","progressbar","use","req","res","isEmpty","messages","channel","isLeaving","running","moment","timeEncoder","timerTpl","hasAnimationFrame","timerTypes","item","isPlainObject","TypeError","contains","remaining","warnings","$display","refresh","encode","requestAnimationFrame","warn","findLast","showed","isFinite","point","humanize","val","value","getEmptyStats","questions","answered","flagged","viewed","getJumps","jumps","getParts","getSections","result","part","getJump","getPart","partName","getSection","sectionName","itemName","jump","identifier","getItemAt","getTestStats","stats","getPartStats","getSectionStats","getScopeStats","getScopeMap","scopeMap","cloneDeep","computeItemStats","computeStats","getScopeMapFromContext","getItemPart","getItemSection","getItemIdentifier","callback","updateItemStats","informational","collection","patch","currentMap","partialMap","targetMap","partialPart","targetPartId","partialSection","targetSectionId","reindex","lastPartId","lastSectionId","offset","offsetPart","offsetSection","sortBy","index","createJumpTable","responseCardinalities","single","multiple","ordered","record","currentItemHelper","getDeclarations","runner","responses","getResponseDeclaration","declaration","attributes","toResponse","baseType","cardinality","mappedCardinality","response","isString","v","base","isQtiValueNull","isQuestionAnswered","defaultValue","isEqual","isAnswered","partially","getResponses","count","mapHelper","getInstantStats","isItemCurrentlyAnswered","itemAnswered","statsHelper","getExitMessage","itemsCountMessage","enableUnansweredItemsWarning","getUnansweredItemsWarning","trim","belowSections","unansweredCount","flaggedCount","toString","getNextSections","sectionStats","statsKey","currentSectionId","below","navigationHelper","isLeavingSection","direction","nbItems","isLeavingTestPart","testPartStats","isLastOf","isFirst","isFirstOf","getSiblingItems","directions","itemId","siblings","itemChain","ref","parseInt","link","times","getNextItem","getPreviousItem","isMovingToNextItem","isMovingToPreviousItem","isJumpingToItem","timerComponentFactory","timerBoxTpl","exitMessage","isTimedSection","timeConstraints","some","constraint","qtiClassName","doEnable","doDisable","toggleZenMode","$toggler","storage","removeItem","toggleToggler","timers","itemStates","timerWarning","displayedTimers","extraTime","consumedExtraTime","lastConsumedExtraTime","getRemainingExtraTime","extra","setRemainingTime","timerConfig","regular","getTimerConfig","timeConstraint","timer","closestPreviousWarning","isTimeout","itemSessionState","interacting","seconds","leaveTimedSection","closed","removeTimer","omit","addTimer","updateTimers","checkStorage","timerUpdatePromises","consumed","timerExists","addAndResolve","savedTime","all","timeStore","zenMode","timeoutScope","timeoutRef","elapsedExtraTime","timeout","regularVal","displayedVal","runTimeout","abs","testDataBeforeMove","movePromise","endTestWarning","noExitTimedSectionWarning","keepUpToTimeout","buttons","labels","ok","cancel","program2","titles","titleTpl","createElement","isDeepestSectionVisible","sectionTitle","replaceWith","storeFactory","timestamp","Date","now","precision","onError","variables","tracesStore","ITEM_START_TIME_CLIENT","ITEM_END_TIME_CLIENT","ITEM_TIMEZONE","utcOffset","format","callItemAction","traceData","JSON","stringify","getItemState","enableAllowSkipping","allowSkipping","toBoolean","itemCanBeTriedAtWill","isLinear","remainingAttempts","isNextItemInLinearPart","nextPart","isLastOfPart","shouldWarnOnTestEnd","warnBeforeNext","shouldWarnForUnansweredItems","hasUnanswered","hasFlagged","unansweredOnly","shouldWarnOnPartChange","nextPartWarning","nextItemWarning","warnBeforeEnd","shouldWarnBeforeEnd","shouldWarnBeforeNext","nextWarningHelper","updateElement","doNext","testOptions","nextItemPosition","unansweredWarning","warningScope","warningHelper","partial","triggerNextAction","avoidInput","toggle","nextSection","nextSectionWarning","bind","doPrevious","previousItemWarning","canDoPrevious","previousSection","previousPart","isCatAdaptive","canMoveBackward","program5","program7","program9","program11","program13","hidden","showLegend","active","program8","apply","program10","cls","component","navigatorTpl","navigatorTreeTpl","navigatorFactory","flagItem","$item","_cssCls","navigator","setItemFlag","navigatorApi","_defaults","setTemplate","controls","autoScroll","$component","$filterBar","_selectors","filterBar","$tree","tree","$infoAnswered","infoAnswered","$infoViewed","infoViewed","$infoAll","tabInfoAll","$infoUnanswered","infoUnanswered","tabInfoUnanswered","$infoFlagged","infoFlagged","tabInfoFlagged","$linearState","linearState","updateConfig","collapseHandle","collapsed","openSelected","infoPanelLabels","togglePanel","infoPanel","partLabels","openOnly","sectionLabels","itemLabels","event","$target","disabled","target","canFlag","icons","unseen","select","linearStart","mode","currentFilter","canCollapse","preventsUnseen","_iconCls","itemIcons","activeItem","counters","actives","collapsiblePanels","notFlagged","notAnswered","notInformational","_filterMap","unanswered","join","filtered","updateStats","flag","getProgressionTotal","progression","jquery","writeCount","criteria","$items","filterCb","$section","$itemsFound","$filtered","scopeClass","scopedMap","getScopedMap","totalQuestions","itm","$place","display","min","open","selected","hierarchy","parentsUntil","previousPosition","$previous","root","panel","collapseSelector","getFlagItemButtonData","itemFlagged","getToggleButtonData","updateButton","button","turnOff","turnOn","markReview","setFlag","unsetFlag","showReview","hideReview","isPluginAllowed","navigatorConfig","enabled","reviewScreen","callTestAction","flagItemButton","flagCurrentItem","forcedState","isUndefined","explicitlyHidden","toggleButton","previousItemPosition","review","getToolbox","createEntry","defaultOpen","skip","doSkip","enableValidateResponses","validateResponses","warnMessage","warnListener","returnValue","addEventListener","removeEventListener","eventName","defaultConfig","removeEliminationsOnClose","restoreEliminationsOnOpen","isPluginEnabled","eliminator","togglePluginButton","togglePlugin","$choiceInteractions","isEliminable","enableEliminator","disableEliminator","$choices","input","querySelector","dataset","wasEliminated","classList","setAttribute","checked","removeAttribute","statifier","componentFactory","maskTpl","$contentArea","createMask","maskApi","mask","answerMasking","allMasks","reveal","getContainer","removeAttr","$qtiChoices","$choice","getMasksState","setMasksState","masked","answerMaskingFactory","restoreStateOnToggle","restoreStateOnMove","itemContainsChoiceInteraction","disableMasking","enableMasking","pluginConfig","movableComponent","areaMaskingTpl","maskingComponentFactory","maskComponent","preview","delay","previewDelay","stackingScope","foo","addMask","masks","without","x","y","isEnabled","areaMasking","invoke","calculatorFactory","_default","height","top","left","calculator","buildCalculator","calcTpl","renderTo","$calculatorContainer","draggableContainer","alternativeTemplate","toggleCalculator","allowIn","stackerFactory","commentTpl","allowComment","toggleComment","$form","isHidden","$input","stacker","bringToFront","appendTo","$cancel","$submit","autoBringToFront","comment","content","viewerFactory","pdfViewer","panelTpl","showPanel","plugin","debounce","resizeViewer","hidePanel","hideIfVisible","isVisible","initPanelEvents","stopEvents","hideViewer","$overlay","viewer","setSize","registerProvider","displayViewer","$title","load","fitToWidth","allowSearch","originalEvent","detail","highlighterFactory","getAllRanges","allRanges","selection","rangeCount","getRangeAt","getSelection","isHighlighting","itemsHighlights","highlightHelper","containerSelector","isCollapsed","highlightRanges","removeAllRanges","toggleHighlighting","bool","saveHighlight","getHighlightIndex","restoreHighlight","highlightFromIndex","clearHighlights","highlighter","buttonMain","buttonRemove","themeHandler","changeTheme","themeId","$qtiItem","selectedTheme","themesConfig","get","availableThemes","defaultTheme","allMenuEntries","default","available","theme","menuButton","createMenu","themeEntry","setMenuId","turnOffAll","toggleMenu","itemThemesStore","itemThemeId","menuEntry","getId","eventifier","makePlaceable","makeDraggable","makeResizable","makeStackable","constrains","defaultDimensions","outerHeight","innerWidth","innerHeight","outerX","outerY","innerX","innerY","defaultOptions","dragMinWidth","dragMinHeight","resizeHandleSize","innerDragHeight","stackingOptions","dimensions","maskConfig","maskAPI","place","placeOverlay","styleResizableEdges","forOwn","edges","isResizable","edgeId","bringAllToFront","innerDrag","closer","invokeOnOverlays","invokeOnMasks","beforeResize","onResize","applyTransformsToOverlays","applyTransformsToInnerDrag","applyTransformsToCloser","createOverlay","transformOverlay","_sizeBackup","getSize","_posBackup","getPosition","moveTo","restoreOverlay","appendVisualGuides","visualGuides","$maskBg","$innerWindow","css","borderWidth","border-top-width","topHeight","border-right-width","rightWidth","border-bottom-width","bottomHeight","border-left-width","leftWidth","removeVisualGuides","pointerEventsPrefix","PointerEvent","xOffsetRelative","yOffsetRelative","invokeOnAll","applyTransforms","createInnerDragHandle","dragRestriction","fixedXY","allParts","nw","minWidth","minHeight","minBottomHeight","$dragIcon","class","applyTransformsToMasks","createCloser","$closeIcon","args","invokeOn","correctTransforms","setTopHeight","newHeight","newY","fromTop","setRightWidth","newWidth","newX","fromLeft","setBottomHeight","setLeftWidth","createCompoundMask","createPart","right","bottom","maxHeight","maxWidth","partConfig","assign","createVisualGuides","compoundMask","setTransforms","dim","getDimensions","compoundMaskFactory","$qtiContent","lineHeight","ceil","parseFloat","maskOptions","paddingLeft","paddingTop","containerWidthHasChanged","lineReader","toggleMask","transformMask","openMask","closeMask","$maskContainer","level","magnifierPanelTpl","magnifierPanelFactory","scrollInClone","scrollData","$clonedTarget","$clone","scrollTop","scrollLeft","setScrollingListener","scrollingListenerCallback","removeScrollingListener","applyScrolling","scrolling","adjustZoomLevel","zoomLevelMin","zoomLevelMax","applyZoomLevel","$inner","transform","zoomLevel","showZoomLevel","$newZoomLevel","$zoomLevel","updateMaxSize","magnifierPanel","maxRatio","applySize","targetWidth","targetHeight","updateZoom","dx","dy","zoomAt","createObserver","observer","MutationObserver","updateMagnifier","startObserver","observe","childList","characterData","subtree","stopObserver","disconnect","translateMagnifier","coordinate","actualSize","magnifierSize","delta","getElementFromPoint","el","elementFromPoint","findSourceNode","node","$node","$root","indexes","$this","pop","children","eq","initConfig","levelMin","levelMax","zoomLevelStep","levelStep","baseSize","zoomSize","$initTarget","getZoomLevel","getTarget","setTarget","$newTarget","$viewTarget","zoomTo","zoomBy","step","zoomIn","zoomOut","translate","debounceDelay","scrollId","scrollingTop","uniqueId","scrollingDelay","screenRatio","pageX","pageY","screen","defaultBaseSize","pluginName","zoomMin","zoomMax","zoomStep","getMagnifierPanel","hideMagnifier","magnifier","toggleMagnifier","showMagnifier","tpl","speed","volume","texthelpMapping","properties","pageCompleteCallback","texthelpSpeechStream","volumeValue","functions","barDynamicStart","barCacheInit","barInit","cachePage","disableSpeech","enableClickToSpeak","enableContinuousReading","enableSpeech","event_pause","event_play","getSpeed","getVoice","hasReachedEnd","isPaused","isSpeaking","isTextSelectedForPlay","isUsingMathjax","setSpeedValue","setUsingMath","setUsingMathjax","setUsingMaths","setVolumeValue","stopSpeech","tagSentences","userParameters","contentArea","ignoreEls","toolbarUrl","_exec","arguments","_get","property","_set","_init","updateTexthelpCache","deliveryId","tss","g_strBookId","g_strPageId","play","setSpeed","setVolume","clickToSpeak","g_strServer","g_strBuild","$action","noUiSlider","animate","connected","range","$el","ttsFactory","ttsButton","tts","ttsEl","textToSpeech","transformer","standard","threshold","lower","upper","setZoomLevel","setTransformOrigin","scale","resetZoom","reset","forceRepaint","sel","style","offsetHeight","isConfigured","zoom","zoomAction","dir","sx","sy","inc","$zoomTarget","getBoundingClientRect","buttonZoomOut","buttonZoomIn","in","out","c","d","a","s","getElementsByTagName","cssText","createTextNode"],"mappings":"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","file":"testPlugins.min.js","sourcesContent":["\ndefine('css!taoQtiTestCss/plugins/key-navigation',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Test Runner Content Plugin : Navigate through the item focusable elements using the keyboard\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/content/accessibility/keyNavigation',[\n    'jquery',\n    'lodash',\n    'ui/keyNavigation/navigator',\n    'ui/keyNavigation/navigableDomElement',\n    'ui/keyNavigation/navigableGroupElement',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'css!taoQtiTestCss/plugins/key-navigation'\n], function ($, _, keyNavigator, navigableDomElement, navigableGroupElement, shortcut, namespaceHelper, pluginFactory) {\n    'use strict';\n\n    /**\n     * Init the navigation in the toolbar\n     *\n     * @param {Object} testRunner\n     * @returns {Array}\n     */\n    function initToolbarNavigation(){\n        var $navigationBar = $('.bottom-action-bar');\n        var $focusables = $navigationBar.find('.action:not(.btn-group):visible, .action.btn-group .li-inner:visible');\n        var navigables = navigableDomElement.createFromDoms($focusables);\n        if (navigables.length) {\n            return [keyNavigator({\n                id : 'bottom-toolbar',\n                replace : true,\n                group : $navigationBar,\n                elements : navigables,\n                //start from the last button \"goto next\"\n                defaultPosition : navigables.length - 1\n            }).on('right down', function(){\n                this.next();\n            }).on('left up', function(){\n                this.previous();\n            }).on('activate', function(cursor){\n                cursor.navigable.getElement().click().mousedown();\n            })];\n        }\n        return [];\n    }\n\n    /**\n     * Init the navigation in the header block\n     *\n     * @param {Object} testRunner\n     * @returns {Array}\n     */\n    function initHeaderNavigation(){\n        //need global selector as currently no way to access delivery frame from test runner\n        var $headerElements = $('[data-control=\"exit\"]:visible a');\n        var navigables = navigableDomElement.createFromDoms($headerElements);\n        if (navigables.length) {\n            return [keyNavigator({\n                id : 'header-toolbar',\n                group : $headerElements.closest('.infoControl'),\n                elements : navigables,\n                loop : true,\n                replace : true\n            }).on('activate', function(cursor){\n                cursor.navigable.getElement().click();\n            })];\n        }\n        return [];\n    }\n\n    /**\n     * Init the navigation in the review panel\n     *\n     * @param {Object} testRunner\n     * @returns {Array} the keyNavigator of the main navigation group\n     */\n    function initNavigatorNavigation(testRunner){\n\n        var $panel = testRunner.getAreaBroker().getPanelArea();\n        var $navigator = $panel.find('.qti-navigator');\n        var navigators = [];\n        var filtersNavigator;\n        var itemsNavigator;\n        var $filters, $trees, navigableFilters, navigableTrees;\n\n        //the tag to identify if the item listing has been browsed, to only \"smart jump\" to active item only on the first visit\n        var itemListingVisited = false;\n        //the position of the filter in memory, to only \"smart jump\" to active item only on the first visit\n        var filterCursor;\n\n        if($navigator.length && !$navigator.hasClass('disabled')){\n            $filters = $navigator.find('.qti-navigator-filters .qti-navigator-filter');\n            navigableFilters = navigableDomElement.createFromDoms($filters);\n            if (navigableFilters.length) {\n                filtersNavigator = keyNavigator({\n                    keepState : true,\n                    id : 'navigator-filters',\n                    replace : true,\n                    elements : navigableFilters,\n                    group : $navigator\n                }).on('right', function(){\n                    this.next();\n                }).on('left', function(){\n                    this.previous();\n                }).on('down', function(){\n                    if(itemsNavigator){\n                        _.defer(function(){\n                            if(itemListingVisited){\n                                itemsNavigator.focus().first();\n                            }else{\n                                itemsNavigator.focus();\n                            }\n                        });\n                    }\n                }).on('up', function(){\n                    if(itemsNavigator){\n                        _.defer(function(){\n                            itemsNavigator.last();\n                        });\n                    }\n                }).on('focus', function(cursor, origin){\n                    //activate the tab in the navigators\n                    cursor.navigable.getElement().click();\n\n                    //reset the item listing browsed tag whenever the focus on the filter happens after a focus on another element\n                    if((filterCursor && filterCursor.position !== cursor.position) || origin){\n                        itemListingVisited = false;\n                    }\n                    //set the filter cursor in memory\n                    filterCursor = cursor;\n                });\n                navigators.push(filtersNavigator);\n            }\n\n            $trees = $navigator.find('.qti-navigator-tree .qti-navigator-item:not(.unseen) .qti-navigator-label');\n            navigableTrees = navigableDomElement.createFromDoms($trees);\n            if (navigableTrees.length) {\n                //instantiate a key navigator but do not add it to the returned list of navigators as this is not supposed to be reached with tab key\n                itemsNavigator = keyNavigator({\n                    id : 'navigator-items',\n                    replace : true,\n                    elements : navigableTrees,\n                    defaultPosition : function defaultPosition(navigables){\n                        var pos = 0;\n                        if(filterCursor && filterCursor.navigable.getElement().data('mode') !== 'flagged'){\n                            _.forIn(navigables, function(navigable, i){\n                                var $parent = navigable.getElement().parent('.qti-navigator-item');\n                                //find the first active and visible item\n                                if($parent.hasClass('active') && $parent.is(':visible')){\n                                    pos = i;\n                                    return false;\n                                }\n                            });\n                        }\n                        return pos;\n                    }\n                }).on('down', function(){\n                    this.next();\n                }).on('up', function(){\n                    this.previous();\n                }).on('right', function(){\n                    if(filtersNavigator){\n                        filtersNavigator.focus().next();\n                    }\n                }).on('left', function(){\n                    if(filtersNavigator){\n                        filtersNavigator.focus().previous();\n                    }\n                }).on('activate', function(cursor){\n                    cursor.navigable.getElement().click();\n                }).on('lowerbound upperbound', function(){\n                    if(filtersNavigator){\n                        filtersNavigator.focus();\n                    }\n                }).on('focus', function(cursor){\n                    itemListingVisited = true;\n                    cursor.navigable.getElement().parent().addClass('key-navigation-highlight');\n                }).on('blur', function(cursor){\n                    cursor.navigable.getElement().parent().removeClass('key-navigation-highlight');\n                });\n            }\n\n        }\n        return navigators;\n    }\n\n    /**\n     * Init the navigation in the item content\n     * Navigable item content are interaction choices and body element with the special class \"key-navigation-focusable\"\n     * It returns an array of keyNavigators as the content is dynamically determined\n     *\n     * @param {Object} testRunner\n     * @returns {Array} of keyNavigator ids\n     */\n    function initContentNavigation(testRunner){\n\n        var itemNavigators = [];\n        var $content = testRunner.getAreaBroker().getContentArea();\n\n        //the item focusable body elements are considered scrollable\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable');\n        $content.find('.key-navigation-focusable,.qti-interaction').filter(function(){\n            //filter out interaction as it will be managed separately\n            return (!$(this).parents('.qti-interaction').length);\n        }).each(function(){\n            var $itemElement = $(this);\n            if($itemElement.hasClass('qti-interaction')){\n                itemNavigators = _.union(itemNavigators, initInteractionNavigation($itemElement));\n            }else{\n                itemNavigators.push(keyNavigator({\n                    elements : navigableDomElement.createFromDoms($itemElement),\n                    group : $itemElement,\n                    propagateTab : false\n                }));\n            }\n        });\n\n        return itemNavigators;\n    }\n\n    /**\n     * Init interaction key navigation from the interaction navigator\n     *\n     * @param {JQuery} $interaction - the interaction container\n     * @returns {Array} array of navigators created from interaction container\n     */\n    function initInteractionNavigation($interaction){\n\n        var $inputs;\n        var interactionNavigables;\n        var interactionNavigators = [];\n\n        //add navigable elements from prompt\n        $interaction.find('.key-navigation-focusable').each(function(){\n            var $nav = $(this);\n            if(!$nav.closest('.qti-choice').length){\n                interactionNavigators.push(keyNavigator({\n                    elements : navigableDomElement.createFromDoms($nav),\n                    group : $nav,\n                    propagateTab : false\n                }));\n            }\n        });\n\n        //reset interaction custom key navigation to override the behaviour with the new one\n        $interaction.off('.keyNavigation');\n\n        //search for inputs that represent the interaction focusable choices\n        $inputs = $interaction.is(':input') ? $interaction : $interaction.find(':input');\n        interactionNavigables = navigableDomElement.createFromDoms($inputs);\n\n        if (interactionNavigables.length) {\n            interactionNavigators.push(keyNavigator({\n                elements : interactionNavigables,\n                group : $interaction,\n                loop : false\n            }).on('right down', function(){\n                this.next();\n            }).on('left up', function(){\n                this.previous();\n            }).on('activate', function(cursor){\n                cursor.navigable.getElement().click();\n            }).on('focus', function(cursor){\n                cursor.navigable.getElement().closest('.qti-choice').addClass('key-navigation-highlight');\n            }).on('blur', function(cursor){\n                cursor.navigable.getElement().closest('.qti-choice').removeClass('key-navigation-highlight');\n            }));\n        }\n\n        return interactionNavigators;\n    }\n\n    /**\n     * Init the navigation of test rubric blocks\n     * It returns an array of keyNavigator ids as the content is dynamically determined\n     *\n     * @param {Object} testRunner\n     * @returns {Array} of keyNavigator ids\n     */\n    function initRubricNavigation(){\n        var $itemElements;\n        var rubricNavigators = [];\n        var $rubricArea = $('#qti-rubrics');\n\n        $itemElements = $rubricArea.find('.qti-rubricBlock');\n        $itemElements.each(function(){\n            var $itemElement = $(this);\n            var id = 'rubric_element_navigation_group_'+rubricNavigators.length;\n\n            rubricNavigators.push(keyNavigator({\n                id : id,\n                elements : navigableDomElement.createFromDoms($itemElement),\n                group : $itemElement,\n                replace : true\n            }));\n        });\n\n        return rubricNavigators;\n    }\n\n    /**\n     * Init test runner navigation\n     * @param testRunner\n     * @returns {*}\n     */\n    function initTestRunnerNavigation(testRunner){\n\n        var navigators;\n\n        //blur current focused element, to reinitialize keyboard navigation\n        if (document.activeElement){\n            document.activeElement.blur();\n        }\n\n        navigators = _.union(\n            initRubricNavigation(testRunner),\n            initContentNavigation(testRunner),\n            initToolbarNavigation(testRunner),\n            initNavigatorNavigation(testRunner),\n            initHeaderNavigation(testRunner)\n        );\n\n        navigators = navigableGroupElement.createFromNavigators(navigators);\n\n        return keyNavigator({\n            id : 'test-runner',\n            replace : true,\n            loop : true,\n            elements : navigators,\n        }).on('tab', function(){\n            this.next();\n        }).on('shift+tab', function(){\n            this.previous();\n        });\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'keyNavigation',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            shortcut.add('tab shift+tab', function(){\n                if(!self.groupNavigator.isFocused()){\n                    self.groupNavigator.focus();\n                }\n            });\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .after('renderitem', function () {\n                    self.groupNavigator = initTestRunnerNavigation(testRunner);\n                    self.enable();\n                })\n                .on('unloaditem', function () {\n                    self.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n            if(this.groupNavigator) {\n                this.groupNavigator.destroy();\n            }\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : Overlay\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/dialog/dialog',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/dialog/alert',\n    'ui/dialog/confirm',\n    'util/shortcut/registry',\n    'util/shortcut',\n    'util/namespace'\n], function ($, _, __, pluginFactory, dialogAlert, dialogConfirm, shortcutRegistry, globalShortcut, namespaceHelper){\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'dialog';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n            var alerts = [];\n            var confirms = [];\n            var opened = [];\n            var dialogShortcut = shortcutRegistry($('body'), {\n                propagate: false,\n                prevent: true\n            });\n\n            /**\n             * Closes a dialog with accept\n             * @param {dialog} dialog - The instance of the dialog\n             */\n            function closeAccept(dialog) {\n                // TODO: improve the dialog implementation in order to provide a better API\n                dialog.trigger('okbtn.modal').hide();\n            }\n\n            /**\n             * Closes a dialog with rejection\n             * @param {dialog} dialog - The instance of the dialog\n             */\n            function closeReject(dialog) {\n                dialog.hide();\n            }\n\n            /**\n             * Closes the last opened dialog\n             * @param {Boolean} accept Whether the dialog should be accepted or not\n             * @param {String} [shortcut] The shortcut that caused the action\n             */\n            function closeLast(accept, shortcut) {\n                var handle = opened.length && opened[opened.length - 1];\n                if (handle) {\n                    handle.shortcut = shortcut;\n                    if (accept) {\n                        closeAccept(handle.dialog);\n                    } else {\n                        closeReject(handle.dialog);\n                    }\n                }\n            }\n\n            /**\n             * Add dialog on top of the provided stack\n             * @param {String} namespace - The event namespace that scope the dialog\n             * @param {Array} stack - The dialogs stack on which push the new instance\n             * @param {Function} dialog - The constructor of the dialog\n             * @param {String} message - The message to display\n             * @param {Function} accept - The callback for accept\n             * @param {Function} reject - The callback for reject\n             * @param {Object} options - Dialog options\n             */\n            function addHandle(namespace, stack, dialog, message, accept, reject, options) {\n                var handle = {\n                    context: namespace,\n                    dialog: dialog(message, doAccept, doReject, options)\n                };\n\n                function doAccept(e, reason) {\n                    if (_.isFunction(accept)) {\n                        accept(handle.shortcut || reason);\n                    }\n                }\n                function doReject(e, reason) {\n                    if (_.isFunction(reject)) {\n                        reject(handle.shortcut || reason);\n                    }\n                }\n\n                // prevents all registered shortcuts to be triggered\n                // and brings back the dialog shortcuts\n                globalShortcut.disable();\n                dialogShortcut.enable();\n\n                stack.push(handle);\n                opened.push(handle);\n\n                handle.dialog.focus();\n                handle.dialog.on('closed.modal', function() {\n                    removeHandle(stack, handle.dialog);\n                    removeHandle(opened, handle.dialog);\n\n                    // if all dialogs have been closed allows all registered shortcuts to be triggered\n                    // also disables the dialog shortcuts\n                    if (!opened.length) {\n                        globalShortcut.enable();\n                        dialogShortcut.disable();\n                    }\n                });\n            }\n\n            /**\n             * Remove a dialog from the provided stack\n             * @param {Array} stack - The dialogs stack from which remove the dialog instance\n             * @param {dialog} dialog - The instance of the dialog\n             */\n            function removeHandle(stack, dialog) {\n                if (dialog) {\n                    _.remove(stack, function(handle) {\n                        if (handle && dialog === handle.dialog) {\n                            return true;\n                        }\n                    });\n                }\n            }\n\n            /**\n             * Closes all dialogs within the provided stack\n             * @param {String} namespace - The event namespace that scope the dialogs to close\n             * @param {Boolean} accept - Whether (`true`) or not (`false`) to close the dialogs with accept\n             * @param {Array} stack - The dialogs stack in which close the dialogs\n             */\n            function closeDialogs(namespace, accept, stack) {\n                if (stack) {\n                    _.forEach(stack, function(handle) {\n                        if (handle && (namespace === '@' || namespace === handle.context)) {\n                            if (accept) {\n                                closeAccept(handle.dialog);\n                            } else {\n                                closeReject(handle.dialog);\n                            }\n                        }\n                    });\n                } else {\n                    closeDialogs(namespace, accept, alerts);\n                    closeDialogs(namespace, accept, confirms);\n                }\n            }\n\n            // starts with shortcuts disabled, prevents the TAB key to be used to move outside the dialog box\n            dialogShortcut.disable().set('Tab Shift+Tab');\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function(command, key) {\n                    dialogShortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function(e, shortcut) {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key, shortcut);\n                    });\n                });\n            }\n\n            //change plugin state\n            testRunner\n                .before('alert.*', function(e, msg, accept) {\n                    addHandle(e.namespace, alerts, dialogAlert, msg, accept, accept);\n                })\n                .before('confirm.*', function(e, msg, accept, reject, options) {\n                    addHandle(e.namespace, confirms, dialogConfirm, msg, accept, reject, options);\n                })\n                .before('closedialog.*', function(e, accept) {\n                    closeDialogs(e.namespace, accept);\n                })\n                .on(actionPrefix + 'accept', function(shortcut) {\n                    closeLast(true, shortcut);\n                })\n                .on(actionPrefix + 'reject', function(shortcut) {\n                    closeLast(false, shortcut);\n                })\n                .on('destroy', function() {\n                    closeDialogs('.@');\n\n                    dialogShortcut.clear();\n                    dialogShortcut = null;\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/content/dialog/exitMessages',[\n    'lodash',\n    'core/promise',\n    'taoTests/runner/plugin'\n], function (_, Promise, pluginFactory) {\n    'use strict';\n\n    /**\n     * Creates the testState plugin.\n     * Displays exit message, then leaves the runner once the user has acknowledged\n     */\n    return pluginFactory({\n\n        name: 'exitMessages',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            // this function is mandatory\n        },\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         */\n        install: function install() {\n            var testRunner = this.getTestRunner();\n\n            // intercepts the `leave` event,\n            // then if a message needs to be displayed displays it and waits the user acknowledges it\n            testRunner.before('leave', function leave(e, data) {\n                if (_.isObject(data) && data.message) {\n                    return new Promise(function(resolve) {\n                        var context = testRunner.getTestContext();\n\n                        // the leave can occurs when the runner is in inconsistent state (i.e. error)\n                        // prevent side error with item disabling\n                        if (context && context.itemIdentifier) {\n                            testRunner.disableItem(context.itemIdentifier);\n                        }\n\n                        // wait for the message acknowledge before leaving the runner\n                        testRunner.trigger('alert.leave', data.message, resolve);\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\n\n/**\n * Create dialog form with message, with overlapped content\n */\ndefine('taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',[\n    'jquery',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin'\n], function($, __, hider, pluginFactory) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'itemAlertMessage',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            this.$element = $(this.getContent().dom);\n\n            this.$element\n                // for GUI actions\n                .on('closed.modal', function(){\n                    $(this).modal('destroy');\n                })\n                .on('destroyed.modal', function(){\n                    self.$element = null;\n                    self.trigger('resume', self);\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var testRunner = this.getTestRunner();\n            var itemRunner = testRunner.itemRunner;\n            var $modalsContainer = this.getContent().$container;\n            if (!$modalsContainer) {\n                $modalsContainer = $('#modalFeedbacks', itemRunner._item.container);\n            }\n            $modalsContainer.append(this.$element);\n\n            this.$element.modal();\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            if (this.$element && this.$element.length){\n                this.$element.modal('close');\n            }\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/templates/button', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" \";\n  if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\";\n  return buffer;\n  }\nfunction program4(depth0,data) {\n  \n  \n  return \" no-label\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"text\\\">\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  buffer += \"<li data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"small btn-info action\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </a>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\n/**\n * Create form with message in test runner and replace all control buttons on his personal\n */\n\ndefine('taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',[\n    'jquery',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function($, __, hider, pluginFactory, buttonTpl) {\n    'use strict';\n\n    /**\n     * The display of the next button\n     */\n    var buttonData = {\n        next : {\n            control : 'move-forward',\n            title   : __('Submit and go to the next item'),\n            icon    : 'forward',\n            text    : __('OK')\n        },\n        end : {\n            control : 'move-end',\n            title   : __('Submit and go to the end of the test'),\n            icon    : 'fast-forward',\n            text    : __('OK & End test')\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'itemInlineMessage',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Create the button based on the current context\n             * @returns {*|jQuery|HTMLElement} the button\n             */\n            var createOkButton = function createElement(){\n                var dataType = !!testRunner.getTestContext().isLast ? 'end' : 'next';\n                var $btn = $(buttonTpl(buttonData[dataType]));\n                $btn.addClass('modalFeedback-button');\n\n                //plugin behavior\n                $btn.on('click', function(e){\n                    e.preventDefault();\n\n                    self.disable();\n                    if($(this).data('control') === 'move-end'){\n                        self.trigger('end');\n                    }\n\n                    $btn.remove();\n                    self.$element.remove();\n\n                    self.trigger('resume', self);\n                });\n\n                return $btn;\n            };\n\n            this.$button = createOkButton();\n            this.$element = $(this.getContent().dom);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $navigationContainer = this.getAreaBroker().getNavigationArea();\n            var testRunner = this.getTestRunner();\n            var itemRunner = testRunner.itemRunner;\n            var $inlineContainer = this.getContent().$container;\n            if (!$inlineContainer && itemRunner._item.container) {\n                $inlineContainer = $('.qti-itemBody', itemRunner._item.container);\n            }\n\n            $inlineContainer.append(this.$element);\n\n            // hide all navigation buttons, create new instead of\n            if (!$('.modalFeedback-button', $navigationContainer).length){\n                $navigationContainer.append(this.$button);\n            }\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$button.removeProp('disabled')\n                .removeClass('disabled');\n        },\n\n        disable: function disable (){\n            this.$button.prop('disabled', true)\n                .addClass('disabled');\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$button.click();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : Feedback\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/feedback/feedback',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/feedback'\n], function ($, __, pluginFactory, feedback){\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'feedback',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            //keep a ref of the feedbacks\n            var currentFeedback;\n\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Close the current feedback\n             */\n            var closeCurrent = function closeCurrent(){\n                if(currentFeedback){\n                    currentFeedback.close();\n                }\n            };\n\n            //change plugin state\n            testRunner\n                .on('error', function(err){\n                    var message = err;\n                    var type = 'error';\n\n                    if ('object' === typeof err) {\n                        message = err.message;\n                        type = err.type;\n                    }\n\n                    if (!message) {\n                        switch (type) {\n                            case 'TestState':\n                                message = __('The test has been closed/suspended!');\n                                break;\n\n                            case 'FileNotFound':\n                                message = __('File not found!');\n                                break;\n\n                            default:\n                                message = __('An error occurred!');\n                        }\n                    }\n\n                    currentFeedback = feedback().error(message);\n                })\n                .on('danger', function(message){\n                    currentFeedback = feedback().danger(message);\n                })\n                .on('warning', function(message){\n                    currentFeedback = feedback().warning(message);\n                })\n                .on('info', function(message){\n                    currentFeedback = feedback().info(message);\n                })\n                .on('alert.* confirm.* unloaditem', closeCurrent);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/content/loading/loading',[\n    'layout/loading-bar',\n    'taoTests/runner/plugin'\n], function (loadingBar, pluginFactory) {\n    'use strict';\n\n    /**\n     * Creates the loading bar plugin.\n     * Displays a loading bar when a blocking task is running\n     */\n    return pluginFactory({\n\n        name: 'loading',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var testRunner = this.getTestRunner();\n            testRunner\n                .on('unloaditem', function () {\n                    loadingBar.start();\n                })\n                .on('renderitem', function () {\n                    loadingBar.stop();\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\n/**\n * @see http://www.imsglobal.org/question/qtiv2p1/imsqti_implv2p1.html#section10008 modalFeedback\n */\n\ndefine('taoQtiTest/runner/plugins/content/modalFeedback/modalFeedback',[\n    'jquery',\n    'lodash',\n    'module',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',\n    'taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',\n    'ui/autoscroll'\n], function ($, _, module, pluginFactory, inlineMessage, alertMessage, autoscroll) {\n    'use strict';\n\n    /**\n     * Modal or inline type of the messages\n     */\n    var inlineMode;\n\n    /**\n     * Form of the feedback\n     * by default dialog (modal) form\n     */\n    var messagePlugin;\n\n    /**\n     * All feedback messages\n     */\n    var renderedFeedbacks;\n\n    /**\n     * modalFeedback was resolved and all components were destroyed\n     */\n    var isDestroyed;\n\n    /**\n     * Method which should be halted after modalFeedbacks confirmation action\n     */\n    var nextStep;\n\n    function destroyFeedback(feedback) {\n\n        var removed = false;\n        _.remove(renderedFeedbacks, function (storedFeedback) {\n\n            var found = storedFeedback === feedback;\n            if (found) {\n                removed = true;\n            }\n            return found;\n        });\n\n        if (removed) {\n            feedback.destroy();\n\n            if (!renderedFeedbacks.length) {\n                nextStep();\n            }\n        }\n    }\n\n    function defineMode(inline) {\n        inlineMode = inline;\n        messagePlugin = inlineMode ? inlineMessage : alertMessage;\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'QtiModalFeedback',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            nextStep = function(){};\n\n            defineMode(!!module.config().inlineModalFeedback);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            var createMessages = function createMessages(renderingQueue, inline){\n\n                var bInlineMode = inlineMode;\n\n                isDestroyed = false;\n                renderedFeedbacks = [];\n\n                if (_.isBoolean(inline)) {\n                    defineMode(inline);\n                }\n\n                if (renderingQueue.length) {\n\n                    _.forEach(renderingQueue, function (renderingToken) {\n\n                        var feedback = messagePlugin(testRunner, testRunner.getAreaBroker());\n                        feedback.init({\n                            dom: renderingToken.feedback.render({\n                                inline: inlineMode\n                            }),\n                            // for alerts will be used #modalMessages container\n                            $container: inlineMode ? renderingToken.$container : null\n                        });\n                        feedback.render();\n\n                        renderedFeedbacks.push(feedback);\n                    });\n\n                    // auto scroll to the first feedback, only for the \"inline\" mode\n                    if (inlineMode && renderedFeedbacks) {\n                        autoscroll($('.qti-modalFeedback', testRunner.getAreaBroker().getContentArea()).first(), testRunner.getAreaBroker().getContentArea().parents('.content-wrapper'));\n                    }\n                } else {\n                    nextStep();\n                }\n\n                // restore global feedback mode\n                defineMode(bInlineMode);\n            };\n\n            if (inlineMode) {\n                testRunner\n                    .off('plugin-resume.itemInlineMessage')\n                    .on('plugin-resume.itemInlineMessage', function () {\n                        self.destroy();\n                    });\n            } else {\n                testRunner\n                    .off('plugin-resume.itemAlertMessage')\n                    .on('plugin-resume.itemAlertMessage', function (feedback) {\n                        destroyFeedback(feedback);\n                    });\n            }\n\n            testRunner.on('modalFeedbacks', function(renderingQueue, done, inline) {\n                nextStep = done;\n                createMessages(renderingQueue, inline);\n            });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         * allow to run that function only once\n         */\n        destroy: function destroy() {\n            var tFeedbacks, i;\n            if (!isDestroyed) {\n                isDestroyed = true;\n\n                if (!renderedFeedbacks) {\n                    nextStep();\n                } else {\n                    tFeedbacks = renderedFeedbacks.slice(0);\n                    for (i in tFeedbacks) {\n                        destroyFeedback(tFeedbacks[i]);\n                    }\n                }\n            }\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : Overlay\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/overlay/overlay',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin'\n], function ($, __, pluginFactory){\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'overlay',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            this.$element = $('<div />');\n            this.$element.on('click mousedown mouseup touchstart touchend keyup keydow keypress scroll drop', function(e){\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n            });\n\n            var shield = function shield(){\n                self.enable();\n            };\n            var unshield = function unshield(itemRef){\n                self.disable();\n            };\n\n            //change plugin state\n            testRunner\n                .on('disableitem',  shield)\n                .on('enableitem unloaditem', unshield);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render (){\n            var $contentArea = this.getTestRunner().getAreaBroker().getContentArea();\n            $contentArea.after(this.$element);\n        },\n\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the overlay\n         */\n        enable : function enable (){\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginsConfig = testConfig.plugins || {};\n            var overlayConfig = pluginsConfig.overlay || {};\n\n            this.$element.addClass('overlay');\n\n            if (overlayConfig.full) {\n                this.$element.addClass('overlay-full');\n            }\n        },\n\n        /**\n         * Disable the overlay\n         */\n        disable : function disable (){\n            this.$element.removeClass('overlay overlay-full');\n        },\n\n        /**\n         * Show the overlay\n         */\n        show: function show(){\n            this.enable();\n        },\n\n        /**\n         * Hide the overlay\n         */\n        hide: function hide(){\n            this.disable();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/responsiveness/collapser',[\n    'lodash',\n    'jquery',\n    'taoTests/runner/plugin'\n], function (_, $, pluginFactory) {\n    'use strict';\n\n    /**\n     * Event namespace\n     * @type {String}\n     */\n    var ns = '.collapser';\n\n    /**\n     * Name of the CSS class used to collapse the buttons\n     * @type {String}\n     */\n    var noLabelCls = 'tool-label-collapsed';\n\n    /**\n     * Name of the CSS class used to collapse the buttons and allow to expand on mouse over\n     * @type {String}\n     */\n    var noLabelHoverCls = 'tool-label-collapsed-hover';\n\n    /**\n     * Name of the  CSS class used to hide the label of the button independently of responsiveness\n     * @type {string}\n     */\n    var labelHiddenCls = 'no-tool-label';\n\n    /**\n     * Default plugin options\n     * @type {Object}\n     */\n    var defaults = {\n        collapseTools: true,        // collapse the tools buttons\n        collapseNavigation: false,  // collapse the navigation buttons\n        collapseInOrder: false,     // collapse any button in the given order\n        hover: false,               // expand when the mouse is over a button,\n\n        /**\n         * Allow to set manually which buttons should collapse and in which order.\n         * This can be set by triggering the \"collapser-set-order\" event on the testRunner.\n         * Given as an array of jQuery selectors: first index will be the first to be collapsed, and so on.\n         * If no selector is given for a button, then this one will never collapse.\n         * ex:\n         * var collapseOrder = [\n         *      '[data-control=\"highlight-clear\"],[data-control=\"highlight-trigger\"]',  // those will collapse first...\n         *      '[data-control=\"hide-review\"]',                                         // this one second...\n         *      '[data-control=\"set-item-flag\"]',                                       // third...\n         *      ...                                                                     // ...\n         * ];\n         * @type {String[]}\n         */\n        collaspeOrder: []\n    };\n\n    var $window = $(window);\n\n    /**\n     * Creates the responsiveness collapser plugin.\n     * Reduce the size of the action bar tools when the available space is below the needed one.\n     */\n    return pluginFactory({\n\n        name: 'collapser',\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         */\n        init: function init() {\n            var testRunner = this.getTestRunner(),\n                testData = testRunner.getTestData() || {},\n                testConfig = testData.config || {},\n                pluginsConfig = testConfig.plugins || {},\n                config = _.defaults(pluginsConfig.collapser || {}, defaults),\n                collapseCls = config.hover ? noLabelHoverCls : noLabelCls;\n\n            var areaBroker = testRunner.getAreaBroker();\n\n            var $actionsBar = areaBroker.getArea('actionsBar'),\n                $toolbox = areaBroker.getToolboxArea(),\n                $navigation = areaBroker.getNavigationArea();\n\n            var allCollapsibles,\n                availableWidth,\n                previousAvailableWidth,\n                totalExtraWidth;\n\n            /**\n             * Get a reference of all collapsibles\n             */\n            function buildCollapsiblesList() {\n                // use the given order to build the collapsibles list\n                if (shouldCollapseInOrder()) {\n                    allCollapsibles = config.collapseOrder.map(function(selector) {\n                        var $elements = $(selector).not('.' + labelHiddenCls); // some buttons are collapsed by configuration: we should leave them alone\n                        var extraWidth = 0;\n\n                        if ($elements.length) {\n                            $elements.each(function() {\n                                extraWidth += getExtraWidth($(this));\n                            });\n                            return {\n                                $elements: $elements,\n                                extraWidth: extraWidth\n                            };\n                        }\n                        return false;\n                    });\n\n                    allCollapsibles = _.compact(allCollapsibles);\n\n                // collapsibles will be either tools and/or nav whole blocks depending on configuration\n                } else {\n                    allCollapsibles = [];\n                    if (config.collapseTools) {\n                        allCollapsibles.push({\n                            $elements: $toolbox,\n                            extraWidth: getExtraWidth($toolbox)\n                        });\n                    }\n                    if (config.collapseNavigation) {\n                        allCollapsibles.push({\n                            $elements: $navigation,\n                            extraWidth: getExtraWidth($navigation)\n                        });\n                    }\n\n                    totalExtraWidth = allCollapsibles.reduce(function(total, collapsible) {\n                        total += collapsible.extraWidth;\n                        return total;\n                    }, 0);\n                }\n            }\n\n            /**\n             * @param {jQuery} $element\n             * @returns {number} Size difference, in pixels, between collapsed and expanded state of $element\n             */\n            function getExtraWidth($element) {\n                var expandedWidth,\n                    collapsedWidth;\n\n                $element.removeClass(collapseCls);\n                expandedWidth = $element.outerWidth(true);\n                $element.addClass(collapseCls);\n                collapsedWidth = $element.outerWidth(true);\n                $element.removeClass(collapseCls);\n\n                return expandedWidth - collapsedWidth;\n            }\n\n            /**\n             * Expand or collapse elements\n             */\n            function toggleCollapsibles() {\n                availableWidth = getAvailableWidth();\n\n                if (availableWidth < previousAvailableWidth) {\n                    if (shouldCollapseInOrder()) {\n                        collapseInOrder();\n                    } else {\n                        collapseAll(collapseNeeded());\n                    }\n                } else {\n\n                    if (shouldCollapseInOrder()) {\n                        expandInOrder();\n                    } else {\n                        expandAll();\n                    }\n                }\n\n                previousAvailableWidth = availableWidth;\n            }\n\n            function shouldCollapseInOrder() {\n                return config.collapseInOrder && _.isArray(config.collapseOrder) && config.collapseOrder.length;\n            }\n\n            function collapseAll(yes) {\n                if (config.collapseTools) {\n                    $toolbox.toggleClass(collapseCls, yes);\n                }\n                if (config.collapseNavigation) {\n                    $navigation.toggleClass(collapseCls, yes);\n                }\n            }\n\n            function collapseInOrder() {\n                var collapsiblesCopy = _.clone(allCollapsibles),\n                    toCollapse;\n\n                while (collapseNeeded() && collapsiblesCopy.length) {\n                    toCollapse = collapsiblesCopy.shift();\n                    toCollapse.$elements.addClass(collapseCls);\n                }\n            }\n\n            function collapseNeeded() {\n                return getToolbarWidth() > getAvailableWidth();\n            }\n\n\n            function expandAll() {\n                if (expandPossible(totalExtraWidth)) {\n                    allCollapsibles.forEach(function(collapsible) {\n                        collapsible.$elements.removeClass(collapseCls);\n                    });\n                }\n            }\n\n            function expandInOrder() {\n                _.forEachRight(allCollapsibles, function(toExpand) {\n                    if (toExpand.$elements.hasClass(collapseCls)) {\n                        if (expandPossible(toExpand.extraWidth)) {\n                            toExpand.$elements.removeClass(collapseCls);\n                        } else {\n                            return false;\n                        }\n                    }\n                });\n            }\n\n            function expandPossible(extraWidth) {\n                return (getToolbarWidth() + extraWidth) <= getAvailableWidth();\n            }\n\n            function getAvailableWidth() {\n                return $actionsBar.width();\n            }\n\n            function getToolbarWidth() {\n                return $toolbox.outerWidth(true) + $navigation.outerWidth(true);\n            }\n\n\n\n            $window.on('resize' + ns, _.throttle(function() {\n                testRunner.trigger('collapseTools');\n            }, 100));\n\n            testRunner\n                .after('renderitem loaditem', function() {\n                    previousAvailableWidth = Infinity;\n\n                    buildCollapsiblesList();\n                    testRunner.trigger('collapseTools');\n                })\n                .on('collapseTools' + ns, function() {\n                    toggleCollapsibles();\n                });\n        },\n\n        destroy: function destroy() {\n            $window.off(ns);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div id=\\\"qti-rubrics\\\"></div>\\n\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : RubricBlock\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock',[\n    'jquery',\n    'i18n',\n    'core/promise',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock'\n], function ($, __, Promise, hider, pluginFactory, containerTpl){\n    'use strict';\n\n    /**\n     * Ensure the <a> links opens to blank pages\n     * @param {jQueryElement} $container - lookup scope\n     */\n    var blankifyLinks = function blankifyLinks($container){\n        $('a', $container).attr('target', '_blank');\n    };\n\n    /**\n     * Apply mathjax\n     */\n    var mathify = function mathify($container) {\n\n        return new Promise(function(resolve){\n            if($('math', $container).length > 0){\n                //load mathjax only if necessary\n                require(['mathJax'], function(MathJax){\n                    if(MathJax){\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $container[0]);\n                        MathJax.Hub.Queue(resolve);\n                    } else {\n                        resolve();\n                    }\n                }, resolve);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'rubricBlock',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            this.$element = $(containerTpl());\n\n            this.hide();\n\n            //change plugin state\n            testRunner\n                .on('ready', function(){\n                    self.hide();\n                })\n                .on('loaditem', function(){\n                    var context = testRunner.getTestContext();\n                    if(context.rubrics) {\n                        self.$element.html(context.rubrics);\n\n                        blankifyLinks(self.$element);\n                        mathify(self.$element).then(function(){\n                            // notify that the rubric blocks are loaded\n                            testRunner.trigger('rubricblock');\n                        });\n                    }\n                })\n                .on('renderitem', function(){\n                    self.show();\n                })\n                .on('unloaditem', function(){\n                    self.hide();\n                    self.$element.empty();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            //attach the element before the content area\n            var $container = this.getAreaBroker().getContentArea();\n            $container.before(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the container\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the container\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the container\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the container\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/connectivity/connectivity', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"connectivity-box \";\n  if (helper = helpers.state) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.state); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span data-control=\\\"connectivity-connected\\\" class=\\\"qti-controls icon-connect\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Connected to server\", options) : helperMissing.call(depth0, \"__\", \"Connected to server\", options)))\n    + \"\\\"></span>\\n    <span data-control=\\\"connectivity-disconnected\\\" class=\\\"qti-controls icon-disconnect\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Disconnected from server\", options) : helperMissing.call(depth0, \"__\", \"Disconnected from server\", options)))\n    + \"\\\"></span>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/connectivity/connectivity',[\n    'jquery',\n    'i18n',\n    'ui/waitingDialog/waitingDialog',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/controls/connectivity/connectivity'\n], function ($, __, waitingDialog, pluginFactory, connectivityTpl) {\n    'use strict';\n\n    /**\n     * Creates the connectivity plugin.\n     * Detects connectivity issues\n     */\n    return pluginFactory({\n\n        name: 'connectivity',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            // this function is mandatory\n        },\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         */\n        install: function install() {\n            var self = this;\n\n            var waiting    = false;\n\n            var testRunner = this.getTestRunner();\n            var proxy      = testRunner.getProxy();\n\n            //create the indicator\n            this.$element = $(connectivityTpl({\n                state: proxy.isOnline() ? 'connected' : 'disconnected'\n            }));\n\n            //the Proxy is the only one to know something about connectivity\n            proxy.on('disconnect', function disconnect(source) {\n                if (!testRunner.getState('disconnected')) {\n                    testRunner.setState('disconnected', true);\n                    testRunner.trigger('disconnect', source);\n                    self.$element.removeClass('connected').addClass('disconnected');\n                }\n            })\n            .on('reconnect', function reconnect() {\n                if (testRunner.getState('disconnected')) {\n                    testRunner.setState('disconnected', false);\n                    testRunner.trigger('reconnect');\n                    self.$element.removeClass('disconnected').addClass('connected');\n                }\n            });\n\n\n            testRunner.before('error', function(e, err) {\n                var dialog;\n\n                // detect and prevent connectivity errors\n                if (proxy.isConnectivityError(err)){\n                    return false;\n                }\n\n                //offline navigation error\n                if (proxy.isOffline()) {\n                    if(!waiting){\n                        waiting = true;\n\n                        //is a pause event occurs offline, we wait the connection to be back\n                        testRunner.before('pause.waiting', function(){\n                            return new Promise(function(resolve){\n                                proxy.off('reconnect.pausing')\n                                    .after('reconnect.pausing', resolve);\n                            });\n                        });\n\n                        //creates the waiting modal dialog\n                        dialog = waitingDialog({\n                            message : __('You are encountering a prolonged connectivity loss. ') + err.message,\n                            waitContent : __('Please wait while we try to restore the connection.'),\n                            proceedContent : __('The connection seems to be back, please proceed')\n                        })\n                        .on('proceed', function(){\n                            var testContext = testRunner.getTestContext();\n                            if(err.type === 'nav'){\n                                testRunner.loadItem(testContext.itemIdentifier);\n                            }\n                            if(err.type === 'finish'){\n                                testRunner.finish();\n                            }\n                        })\n                        .on('render', function(){\n                            proxy\n                                .off('reconnect.waiting')\n                                .after('reconnect.waiting', function(){\n                                    testRunner.off('pause.waiting');\n                                    waiting = false;\n                                    dialog.endWait();\n                                });\n                        });\n                    }\n\n                    return false;\n                }\n            });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $container = this.getAreaBroker().getControlArea();\n            $container.append(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Duration (record exact spent time duration)\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/duration/duration',[\n    'lodash',\n    'core/polling',\n    'core/timer',\n    'core/store',\n    'core/promise',\n    'taoTests/runner/plugin',\n], function(_, pollingFactory, timerFactory, store, Promise, pluginFactory) {\n    'use strict';\n\n    /**\n     * Time interval between duration capture in ms\n     * @type {Number}\n     */\n    var refresh = 1000;\n\n\n    /**\n     * Creates the timer plugin\n     */\n    return pluginFactory({\n\n        name: 'duration',\n\n\n        install: function install() {\n            var self = this;\n            //the storechange event is fired early (before runner's init is done)\n            //so we attach the handler early\n            this.getTestRunner().on('storechange', function handleStoreChange() {\n                self.shouldClearStorage = true;\n            });\n        },\n\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            //where the duration of attempts are stored\n            return store('duration-' + testRunner.getConfig().serviceCallId)\n                .then(function(durationStore) {\n                    if (self.shouldClearStorage) {\n                        return durationStore.clear().then(function() {\n                            return durationStore;\n                        });\n                    }\n                    return durationStore;\n                })\n                .then(function(durationStore) {\n\n                    /**\n                     * Gets the duration of a particular item from the store\n                     * @param {String} attemptId - the attempt id to get the duration for\n                     * @returns {Promise}\n                     */\n                    function getItemDuration(attemptId) {\n                        if (!/^(.*)+#+\\d+$/.test(attemptId)) {\n                            return Promise.reject(new Error('Is it really an attempt id, like \"itemid#attempt\"'));\n                        }\n\n                        return durationStore.getItem(attemptId);\n                    }\n\n                    //one stopwatch to count the time\n                    self.stopwatch = timerFactory({\n                        autoStart: false\n                    });\n\n                    //update the duration on a regular basis\n                    self.polling = pollingFactory({\n\n                        action: function updateDuration() {\n\n                            //how many time elapsed from the last tick ?\n\n                            var context = testRunner.getTestContext();\n\n                            //store by attempt\n                            var itemAttemptId = context.itemIdentifier + '#' + context.attempt;\n\n                            durationStore.getItem(itemAttemptId).then(function(duration){\n                                var elapsed = self.stopwatch.tick();\n                                duration = _.isNumber(duration) ? duration : 0;\n                                elapsed = _.isNumber(elapsed) && elapsed > 0 ? (elapsed / 1000) : 0;\n\n                                //store the last duration\n                                durationStore.setItem(itemAttemptId, duration + elapsed);\n                            });\n                        },\n                        interval: refresh,\n                        autoStart: false\n                    });\n\n                    //change plugin state\n                    testRunner\n                        .after('renderitem enableitem', function() {\n                            self.enable();\n                        })\n\n                        .before('move disableitem skip error', function() {\n                            if (self.getState('enabled')) {\n                                self.disable();\n                            }\n                        })\n\n                        .before('move skip exit timeout', function() {\n                            var context = testRunner.getTestContext();\n                            var itemAttemptId = context.itemIdentifier + '#' + context.attempt;\n\n\n                            return getItemDuration(itemAttemptId).then(function(duration) {\n                                var params = {\n                                    itemDuration: 0\n                                };\n                                if (_.isNumber(duration) && duration > 0) {\n                                    params.itemDuration = duration;\n                                }\n\n                                // the duration will be sent to the server with the next request,\n                                // usually submitItem() or callItemAction()\n                                testRunner.getProxy().addCallActionParams(params);\n                            });\n                        })\n\n                        /**\n                            * @event duration.get\n                            * @param {String} attemptId - the attempt id to get the duration for\n                            * @param {getDuration} getDuration - a receiver callback\n                            */\n                        .on('plugin-get.duration', function(e, attemptId, getDuration) {\n                            if (_.isFunction(getDuration)) {\n                                getDuration(getItemDuration(attemptId));\n                            }\n                        })\n\n                        .before('finish', function() {\n                            return new Promise(function(resolve) {\n                                durationStore.removeStore()\n                                    .then(resolve)\n                                    .catch(resolve);\n                            });\n                        });\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.polling.stop();\n            this.stopwatch.stop();\n        },\n\n        /**\n         * Enables the duration count\n         */\n        enable: function enable() {\n            this.polling.start();\n            this.stopwatch.resume();\n        },\n\n        /**\n         * Disables the duration count\n         */\n        disable: function disable() {\n            this.polling.stop();\n            this.stopwatch.pause();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/progressbar/progressbar', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"progress-box\\\">\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar info\\\"></div>\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\n</div>\\n\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Progress Bar\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/progressbar/progressbar',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/controls/progressbar/progressbar',\n    'ui/progressbar'\n], function ($, _, __, pluginFactory, progressTpl){\n    'use strict';\n\n    /**\n     * Calculate progression based on the current context\n     *\n     * @param {Object} testContext - The current test context\n     * @param {Object} testMap - The items organization map\n     * @param {Object} progressConfig\n     * @param {String} progressConfig.indicator - to select the progression type\n     * @param {String} [progressConfig.scope] - to select the progression type\n     * @param {Bool} progressConfig.showTotal - display 'item x of y' (true) | 'item x'\n     * @returns {Object} the progression with a label and a ratio\n     */\n    var progressUpdater = function progressUpdater(testContext, testMap, progressConfig){\n\n\n        /**\n         * Provide progression calculation based on the type of indicator\n         */\n        var updater = {\n\n            /**\n            * Updates the progress bar displaying the percentage\n            * @param {Object} testContext The progression context\n            * @returns {{ratio: number, label: string}}\n            */\n            percentage : function percentage() {\n                var total = Math.max(1, testContext.numberItems);\n                var ratio = Math.floor(testContext.numberCompleted / total * 100);\n                return {\n                    ratio : ratio,\n                    label : ratio + '%'\n                };\n            },\n\n            /**\n            * Updates the progress bar displaying the position\n            * @param {Object} testContext The progression context\n            * @returns {{ratio: number, label: string}}\n            */\n            position : function position() {\n\n                //get the current test part in the map\n                var getTestPart = function getTestPart(){\n                    if(testMap && testMap.parts){\n                        return testMap.parts[testContext.testPartId];\n                    }\n                };\n\n                //get the current test section in the map\n                var getTestSection = function getTestSection(){\n                    var testPart = getTestPart();\n                    if(testPart && testPart.sections){\n                        return testPart.sections[testContext.sectionId];\n                    }\n                };\n\n                //provides you the methods to get total and position by scope\n                var progressScopeCounter = {\n                    test : {\n                        total : function(){\n                            return Math.max(1, testContext.numberItems);\n                        },\n                        position : function(){\n                            return testContext.itemPosition + 1;\n                        }\n                    },\n                    testPart : {\n                        total : function(){\n                            var testPart = getTestPart();\n                            if(testPart){\n                                return _.reduce(testMap.parts[testContext.testPartId].sections, function(acc, section){\n                                    return acc + _.size(section.items);\n                                }, 0);\n                            }\n                            return 0;\n                        },\n                        position : function(){\n                            var testSection = getTestSection();\n                            if(testSection){\n                                return testSection.items[testContext.itemIdentifier].positionInPart + 1;\n                            }\n                            return 0;\n                        }\n                    },\n                    testSection : {\n                        total : function(){\n                            var testSection = getTestSection();\n                            if(testSection){\n                                return _.size(testSection.items);\n                            }\n                            return 0;\n                        },\n                        position : function(){\n                            var testSection = getTestSection();\n                            if(testSection && testSection.items[testContext.itemIdentifier]){\n                                return testSection.items[testContext.itemIdentifier].positionInSection + 1;\n                            }\n                            return 0;\n                        }\n                    }\n                };\n\n                var counter = progressScopeCounter[progressConfig.scope] || progressScopeCounter.test;\n                var total = counter.total();\n                var currentPosition = counter.position();\n\n                return {\n                    ratio : total > 0 ? Math.floor(currentPosition / total * 100) : 0,\n                    label : progressConfig.showTotal ?\n                        __('Item %d of %d', currentPosition, total) :\n                        __('Item %d', currentPosition)\n                };\n            }\n        };\n        return updater[progressConfig.indicator]();\n    };\n\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'progressBar',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var $progressLabel,\n                $progressControl;\n            var testRunner = this.getTestRunner();\n            var testData   = testRunner.getTestData();\n            var config     = testData.config.progressIndicator || {};\n\n            var progressConfig = {\n                indicator: config.type || 'percentage',\n                scope: config.scope || 'test',\n                showTotal: !!config.showTotal\n            };\n\n            /**\n             * Update the progress bar\n             */\n            var update = function update (){\n                var progressData = progressUpdater(testRunner.getTestContext(), testRunner.getTestMap(), progressConfig);\n                if(progressData && $progressLabel && $progressControl){\n                    $progressLabel.text(progressData.label);\n                    $progressControl.progressbar('value', progressData.ratio);\n                }\n            };\n\n            //create the progressbar\n            this.$element = $(progressTpl());\n\n            //store the controls\n            $progressLabel = $('[data-control=\"progress-label\"]', this.$element);\n            $progressControl = $('[data-control=\"progress-bar\"]', this.$element);\n\n            //and initialize the progress bar component\n            $progressControl.progressbar();\n\n            //let update the progression\n            update();\n\n            testRunner\n                .on('ready', update)\n                .on('loaditem', update);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $container = this.getAreaBroker().getControlArea();\n            $container.append(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/testState/testState',[\n    'lodash',\n    'taoTests/runner/plugin'\n], function (_, pluginFactory) {\n    'use strict';\n\n    /**\n     * Creates the testState plugin.\n     * Handle particular states of the assessment test\n     */\n    return pluginFactory({\n\n        name: 'testState',\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         */\n        install: function install() {\n            var testRunner = this.getTestRunner();\n\n            // middleware invoked on every requests\n            testRunner.getProxy()\n                .use(function qtiFilter(req, res, next) {\n                    var data = res && res.data;\n\n                    // test has been closed/suspended => redirect to the index page after message acknowledge\n                    if (data && data.type && data.type === 'TestState') {\n                        // spread the world about the reason of the leave\n                        testRunner.setState('closedOrSuspended', true);\n\n                        if (!testRunner.getState('ready')) {\n                            // if we open an inconsistent test just leave\n                            // should happen if we refresh an auto paused test\n                            testRunner.trigger('destroy');\n                        } else if (_.isEmpty(data.messages) || !_.find(data.messages, {channel: 'teststate'})) {\n                            testRunner.trigger('leave', data);\n                        }\n                        // break the chain to avoid uncaught exception in promise...\n                        // this will lead to unresolved promise, but the browser will be redirected soon!\n                        return;\n                    }\n                    next();\n                });\n        },\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var testRunner = this.getTestRunner();\n            var isLeaving = false;\n\n            // immediate handling of proctor's actions\n            testRunner.getProxy()\n                .channel('teststate', function (data) {\n                    if (!isLeaving && data && ('close' === data.type || 'pause' === data.type) && !testRunner.getState('closedOrSuspended')) {\n                        isLeaving = true;\n\n                        testRunner.setState('closedOrSuspended', true);\n\n                        testRunner.trigger('leave', data);\n                    }\n                });\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/timer/timer', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" disabled\";\n  }\n\n  buffer += \"<span class=\\\"qti-timer qti-timer__type-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" qti-controls \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.running), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span class=\\\"qti-timer_label truncate\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"qti-timer_time\\\"></span>\\n</span>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Component that controls the display of a timer (countdown/stopwatch like) into a QTI Test.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/timerComponent',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'moment',\n    'core/encoder/time',\n    'tpl!taoQtiTest/runner/plugins/controls/timer/timer'\n], function ($, _, __, moment, timeEncoder, timerTpl) {\n    'use strict';\n\n    var hasAnimationFrame = 'requestAnimationFrame' in window;\n\n    /**\n     * Duration of a second in the timer's base unit\n     * @type {Number}\n     */\n    var precision = 1000;\n\n    /**\n     * In a Qti context timers could be associated to those elements\n     */\n    var timerTypes = {\n        test:     'assessmentTest',\n        testPart: 'testPart',\n        section:  'assessmentSection',\n        item:     'assessmentItemRef'\n    };\n\n    /**\n     * Create a new timer component\n     * @param {Object} config - the timer config\n     * @param {String} config.id - used to identified the timer\n     * @param {String} config.type - the associated type (from timerTypes above)\n     * @param {String} [config.label] - the label to display next to the timer\n     * @param {Number} [config.remaining = 0] - the remaining time\n     * @param {Number|Boolean} [config.warning = false] - to warn the user their is only the specified amount of time left\n     * @param {Boolean} [config.running = true] - timer state\n     * @returns {timerComponent} the timer component\n     * @throws {TypeError} if the config is not correct\n     */\n    var timerComponentFactory = function timerComponentFactory(config){\n        var data;\n\n        if(!_.isPlainObject(config)){\n            throw new TypeError('A timer needs to be configured using a config object');\n        }\n        if(_.isEmpty(config.id)){\n            throw new TypeError('A timer needs and identifier');\n        }\n        if(!_.contains(timerTypes, config.type)){\n            throw new TypeError('Invalid type configured');\n        }\n\n        data = _.defaults(config, {\n            label:     '',\n            remaining: 0,\n            warnings: {},\n            running:   true\n        });\n\n        /**\n         * @typedef {timerComponent} the component to manage the timer\n         */\n        return {\n\n            /**\n             * Initialize the component\n             * @returns {timerComponent} chains\n             */\n            init   : function init(){\n               this.$element = $(timerTpl(data));\n               this.$display = $('.qti-timer_time', this.$element);\n               return this;\n            },\n\n            /**\n             * Attach the component to the DOM\n             * @param {jQueryElement} $container - where to append the component\n             * @returns {timerComponent} chains\n             */\n            render : function render($container){\n                $container.append(this.$element);\n                return this;\n            },\n\n            /**\n             * Destroy the component\n             * @returns {timerComponent} chains\n             */\n            destroy : function destroy(){\n                this.$element.remove();\n                return this;\n            },\n\n            /**\n             * Refresh the display\n             * @returns {timerComponent} chains\n             */\n            refresh : function refresh(){\n                var self = this;\n                var update = function update(){\n                    self.$display.text( timeEncoder.encode( data.remaining / precision) );\n                };\n                if(hasAnimationFrame){\n                   window.requestAnimationFrame(update);\n                } else {\n                    update();\n                }\n\n                return this;\n            },\n\n            /**\n             * Warn about time remaining\n             * @returns {Object} the warning message and type of popup\n             */\n            warn : function warn() {\n                var remaining,\n                    message = {},\n                    warning = _.findLast(data.warnings, { showed: false });\n\n                if (!_.isEmpty(warning)\n                    && _.isFinite(warning.point)\n                    && data.remaining <= warning.point\n                ) {\n                    remaining = moment.duration(data.remaining / precision, \"seconds\").humanize();\n                    this.$display.removeClass('txt-info txt-warning txt-danger').addClass('txt-' + warning.type);\n                    switch (data.type) {\n                        case 'assessmentItemRef':\n                            message.text = __(\"Warning – You have %s remaining to complete this item.\", remaining);\n                            break;\n\n                        case 'assessmentSection':\n                            message.text = __(\"Warning – You have %s remaining to complete this section.\", remaining);\n                            break;\n\n                        case 'testPart':\n                            message.text = __(\"Warning – You have %s remaining to complete this test part.\", remaining);\n                            break;\n\n                        case 'assessmentTest':\n                            message.text = __(\"Warning – You have %s remaining to complete the test.\", remaining);\n                            break;\n                    }\n\n                    var showed = _.find(data.warnings, { point: warning.point });\n                    if (showed && showed.point && data.warnings[showed.point / precision]) {\n                        data.warnings[showed.point / precision].showed = true;\n                    }\n\n                    message.type = warning.type;\n                }\n\n                return message;\n            },\n\n\n            /**\n             * Get the timer id\n             * @returns {String} the id\n             */\n            id  : function id(){\n                return data.id;\n            },\n\n            /**\n             * Get/set the current/remaining value\n             * @param {Number} [value] - only as a setter\n             * @returns {Number|timerComponent} the value as a getter, or chains as a setter\n             */\n            val : function val(value){\n                if(typeof value !== 'undefined'){\n                    data.remaining = value;\n                    return this;\n                }\n                return data.remaining;\n            },\n\n            /**\n             * Get/set the running state\n             * @param {Boolean} [value] - only as a setter\n             * @returns {Boolean|timerComponent} the value as a getter, or chains as a setter\n             */\n            running : function running(value){\n                if(typeof value !== 'undefined'){\n                    data.running = !!value;\n                    return this;\n                }\n                return !!data.running;\n            }\n        };\n    };\n\n    return timerComponentFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/map',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * Gets an empty stats record\n     * @returns {Object}\n     */\n    function getEmptyStats() {\n        return {\n            questions: 0,\n            answered: 0,\n            flagged: 0,\n            viewed: 0,\n            total: 0\n        };\n    }\n\n    /**\n     * Defines a helper that provides extractors for an assessment test map\n     */\n    return {\n        /**\n         * Gets the jumps table\n         * @param {Object} map - The assessment test map\n         * @returns {Object}\n         */\n        getJumps: function getJumps(map) {\n            return map && map.jumps;\n        },\n\n        /**\n         * Gets the parts table\n         * @param {Object} map - The assessment test map\n         * @returns {Object}\n         */\n        getParts: function getParts(map) {\n            return map && map.parts;\n        },\n\n        /**\n         * Get sections table\n         * @param {Object} map - The assessment test map\n         * @returns {Object} the sections\n         */\n        getSections: function getSections(map) {\n            var parts = this.getParts(map),\n                result = {};\n\n            _.forEach(parts, function (part) {\n                var sections = part.sections;\n                if (sections) {\n                    _.forEach(sections, function (section) {\n                        result[section.id] = section;\n                    });\n                }\n            });\n            return result;\n        },\n\n        /**\n         * Gets the jump at a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getJump: function getJump(map, position) {\n            var jumps = this.getJumps(map);\n            return jumps && jumps[position];\n        },\n\n        /**\n         * Gets a test part by its identifier\n         * @param {Object} map - The assessment test map\n         * @param {String} partName - The identifier of the test part\n         * @returns {Object}\n         */\n        getPart: function getPart(map, partName) {\n            var parts = this.getParts(map);\n            return parts && parts[partName];\n        },\n\n        /**\n         * Gets a test section by its identifier\n         * @param {Object} map - The assessment test map\n         * @param {String} sectionName - The identifier of the test section\n         * @returns {Object}\n         */\n        getSection: function getSection(map, sectionName) {\n            var parts = this.getParts(map);\n            var section = null;\n            _.forEach(parts, function (part) {\n                var sections = part.sections;\n                if (sections && sections[sectionName]) {\n                    section = sections[sectionName];\n                    return false;\n                }\n            });\n            return section;\n        },\n\n        /**\n         * Gets a test item by its identifier\n         * @param {Object} map - The assessment test map\n         * @param {String} itemName - The identifier of the test item\n         * @returns {Object}\n         */\n        getItem: function getItem(map, itemName) {\n            var jump = _.find(this.getJumps(map), {identifier: itemName});\n            return this.getItemAt(map, jump && jump.position);\n        },\n\n        /**\n         * Gets the global stats of the assessment test\n         * @param {Object} map - The assessment test map\n         * @returns {Object}\n         */\n        getTestStats: function getTestStats(map) {\n            return map && map.stats;\n        },\n\n        /**\n         * Gets the stats of the test part containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {String} partName - The identifier of the test part\n         * @returns {Object}\n         */\n        getPartStats: function getPartStats(map, partName) {\n            var part = this.getPart(map, partName);\n            return part && part.stats;\n        },\n\n        /**\n         * Gets the stats of the test section containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {String} sectionName - The identifier of the test section\n         * @returns {Object}\n         */\n        getSectionStats: function getSectionStats(map, sectionName) {\n            var section = this.getSection(map, sectionName);\n            return section && section.stats;\n        },\n\n        /**\n         * Gets the stats related to a particular scope\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The current position\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n         * @returns {Object}\n         */\n        getScopeStats: function getScopeStats(map, position, scope) {\n            var jump = this.getJump(map, position);\n            switch (scope) {\n                case 'section':\n                case 'testSection':\n                    return this.getSectionStats(map, jump && jump.section);\n\n                case 'part':\n                case 'testPart':\n                    return this.getPartStats(map, jump && jump.part);\n\n                default:\n                case 'test':\n                    return this.getTestStats(map);\n            }\n        },\n\n        /**\n         * Gets the map of a particular scope from a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The current position\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n         * @returns {object} The scoped map\n         */\n        getScopeMap: function getScopeMap(map, position, scope) {\n            // need a clone of the map as we will change some properties\n            var scopeMap = _.cloneDeep(map || {});\n\n            // gets the current part and section\n            var jump = this.getJump(map, position);\n            var part = this.getPart(scopeMap, jump && jump.part);\n            var section = this.getSection(scopeMap, jump && jump.section);\n\n            // reduce the map to the scope part\n            if (scope && scope !== 'test') {\n                scopeMap.parts = {};\n                if (part) {\n                    scopeMap.parts[jump.part] = part;\n                }\n            }\n\n            // reduce the map to the scope section\n            if (part && (scope === 'section' || scope === 'testSection')) {\n                part.sections = {};\n                if (section) {\n                    part.sections[jump.section] = section;\n                }\n            }\n\n            // update the stats to reflect the scope\n            if (section) {\n                section.stats = this.computeItemStats(section.items);\n            }\n            if (part) {\n                part.stats = this.computeStats(part.sections);\n            }\n            scopeMap.stats = this.computeStats(scopeMap.parts);\n\n            return scopeMap;\n        },\n\n        /**\n         * Gets the map of a particular scope from a current context\n         * @param {Object} map - The assessment test map\n         * @param {Object} context - The current session context\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n         * @returns {object} The scoped map\n         */\n        getScopeMapFromContext: function getScopeMapFromContext(map, context, scope) {\n            // need a clone of the map as we will change some properties\n            var scopeMap = _.cloneDeep(map || {});\n            var part;\n            var section;\n\n            // gets the current part and section\n            if (context && context.testPartId) {\n                part = this.getPart(scopeMap, context.testPartId);\n            }\n            if (context && context.sectionId) {\n                section = this.getSection(scopeMap, context.sectionId);\n            }\n\n            // reduce the map to the scope part\n            if (scope && scope !== 'test') {\n                scopeMap.parts = {};\n                if (part) {\n                    scopeMap.parts[context.testPartId] = part;\n                }\n            }\n\n            // reduce the map to the scope section\n            if (part && (scope === 'section' || scope === 'testSection')) {\n                part.sections = {};\n                if (section) {\n                    part.sections[context.sectionId] = section;\n                }\n            }\n\n            // update the stats to reflect the scope\n            if (section) {\n                section.stats = this.computeItemStats(section.items);\n            }\n            if (part) {\n                part.stats = this.computeStats(part.sections);\n            }\n            scopeMap.stats = this.computeStats(scopeMap.parts);\n\n            return scopeMap;\n        },\n\n        /**\n         * Gets the test part containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getItemPart: function getItemPart(map, position) {\n            var jump = this.getJump(map, position);\n            return this.getPart(map, jump && jump.part);\n        },\n\n        /**\n         * Gets the test section containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getItemSection: function getItemSection(map, position) {\n            var jump = this.getJump(map, position);\n            var part = this.getPart(map, jump && jump.part);\n            var sections = part && part.sections;\n            return sections && sections[jump && jump.section];\n        },\n\n        /**\n         * Gets the item located at a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getItemAt: function getItemAt(map, position) {\n            var jump = this.getJump(map, position);\n            var part = this.getPart(map, jump && jump.part);\n            var sections = part && part.sections;\n            var section = sections && sections[jump && jump.section];\n            var items = section && section.items;\n            return items && items[jump && jump.identifier];\n        },\n\n        /**\n         * Gets the identifier of an existing item\n         * @param {Object} map - The assessment test map\n         * @param {Number|String} position - The position of the item, can already be the identifier\n         * @returns {String}\n         */\n        getItemIdentifier: function getItemIdentifier(map, position) {\n            var item;\n            if (_.isFinite(position)) {\n                item = this.getItemAt(map, position);\n            } else {\n                item = this.getItem(map, position);\n            }\n            return item && item.id;\n        },\n\n        /**\n         * Applies a callback on each item of the provided map\n         * @param {Object} map - The assessment test map\n         * @param {Function} callback(item, section, part, map) - A callback to apply on each item\n         * @returns {Object}\n         */\n        each: function each(map, callback) {\n            if (_.isFunction(callback)) {\n                _.forEach(map && map.parts, function(part) {\n                    _.forEach(part && part.sections, function(section) {\n                        _.forEach(section && section.items, function(item) {\n                            callback(item, section, part, map);\n                        });\n                    });\n                });\n            }\n            return map;\n        },\n\n        /**\n         * Update the map stats from a particular item\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        updateItemStats: function updateItemStats(map, position) {\n            var jump = this.getJump(map, position);\n            var part = this.getPart(map, jump && jump.part);\n            var sections = part && part.sections;\n            var section = sections && sections[jump && jump.section];\n\n            if (section) {\n                section.stats = this.computeItemStats(section.items);\n            }\n            if (part) {\n                part.stats = this.computeStats(part.sections);\n            }\n            if (map) {\n                map.stats = this.computeStats(map.parts);\n            }\n\n            return map;\n        },\n\n        /**\n         * Computes the stats for a list of items\n         * @param {Object} items\n         * @returns {Object}\n         */\n        computeItemStats: function computeItemStats(items) {\n            return _.reduce(items, function accStats(acc, item) {\n                if (!item.informational) {\n                    acc.questions++;\n                }\n                if (item.answered) {\n                    acc.answered++;\n                }\n                if (item.flagged) {\n                    acc.flagged++;\n                }\n                if (item.viewed) {\n                    acc.viewed++;\n                }\n                acc.total++;\n                return acc;\n            }, getEmptyStats());\n        },\n\n        /**\n         * Computes the global stats of a collection of stats\n         * @param {Object} collection\n         * @returns {Object}\n         */\n        computeStats: function computeStats(collection) {\n            return _.reduce(collection, function accStats(acc, item) {\n                acc.questions += item.stats.questions;\n                acc.answered += item.stats.answered;\n                acc.flagged += item.stats.flagged;\n                acc.viewed += item.stats.viewed;\n                acc.total += item.stats.total;\n                return acc;\n            }, getEmptyStats());\n        },\n\n        /**\n         * Patch a testMap with a partial testMap.\n         *\n         * If the currentMap is null or the scope is test,\n         * we just use the partialMap as it is.\n         *\n         * Indexes, position and stats will be (re)built.\n         *\n         * @param {Object} currentMap - the map to patch\n         * @param {Object} partialMap - the patch\n         * @param {String} partialMap.scope - indicate the scope of the patch (test, part or section)\n         * @returns {Object} the patched testMap\n         * @throws {TypeError} if the partialMap is no a map\n         */\n        patch : function patch(currentMap, partialMap) {\n            var self = this;\n            var targetMap;\n\n            if(!_.isPlainObject(partialMap) || !partialMap.parts) {\n                throw new TypeError('Invalid test map format');\n            }\n\n            if(!currentMap || partialMap.scope === 'test'){\n                targetMap = _.cloneDeep(partialMap);\n            } else {\n\n                targetMap = _.cloneDeep(currentMap);\n\n                _.forEach(partialMap.parts, function(partialPart, targetPartId){\n                    if (partialMap.scope === 'part') {\n                        //replace the target part\n                        targetMap.parts[targetPartId] = _.cloneDeep(partialPart);\n                    }\n                    if (partialMap.scope === 'section') {\n                        _.forEach(partialPart.sections, function(partialSection, targetSectionId){\n                            //replace the target section\n                            targetMap.parts[targetPartId].sections[targetSectionId] = _.cloneDeep(partialSection);\n\n                            //compte new section stats\n                            targetMap.parts[targetPartId].sections[targetSectionId].stats = self.computeItemStats(targetMap.parts[targetPartId].sections[targetSectionId].items);\n                        });\n                    }\n                    //compte new/updated part stats\n                    targetMap.parts[targetPartId].stats = self.computeStats(targetMap.parts[targetPartId].sections);\n                });\n                //compte updated test stats\n                targetMap.stats = this.computeStats(targetMap.parts);\n            }\n\n            //the updated map can have a different size than the original\n            targetMap = this.reindex(targetMap);\n\n            return targetMap;\n        },\n\n        /**\n         * Rebuild the indexes, positions of all map parts.\n         * Then recreate the jump table.\n         *\n         * @param {Object} map - the map to reindex\n         * @returns {Object} the brand new map\n         * @throws {TypeError} if the map is no a map\n         */\n        reindex : function reindex(map){\n            var offset        = 0;\n            var offsetPart    = 0;\n            var offsetSection = 0;\n            var lastPartId;\n            var lastSectionId;\n\n            if(!_.isPlainObject(map) || !map.parts) {\n                throw new TypeError('Invalid test map format');\n            }\n\n            //remove the jump table\n            map.jumps = [];\n\n            //browse the test map, by position\n            _.sortBy(map && map.parts, 'position').forEach(function(part) {\n                _.sortBy(part && part.sections, 'position').forEach(function(section) {\n                    _.sortBy(section && section.items, 'position').forEach(function(item) {\n\n                        if(lastPartId !== part.id){\n                            offsetPart = 0;\n                            lastPartId = part.id;\n                            part.position = offset;\n                        }\n                        if(lastSectionId !== section.id){\n                            offsetSection = 0;\n                            lastSectionId = section.id;\n                            section.position = offset;\n                        }\n                        item.position = offset;\n                        item.index    = offsetSection + 1;\n                        item.positionInPart = offsetPart;\n                        item.positionInSection = offsetSection;\n\n                        map.jumps[offset] = {\n                            identifier : item.id,\n                            section    : section.id ,\n                            part       : part.id,\n                            position   : offset\n                        };\n\n                        offset++;\n                        offsetSection++;\n                        offsetPart++;\n                    });\n                });\n            });\n\n            return map;\n        },\n\n        /**\n         * Create the jump table for a test map\n         *\n         * @param {Object} map - the map\n         * @returns {Object} the brand new map with a jump table\n         * @throws {TypeError} if the map is no a map\n         */\n        createJumpTable : function createJumpTable(map){\n\n            if(!_.isPlainObject(map) || !map.parts) {\n                throw new TypeError('Invalid test map format');\n            }\n\n            map.jumps = [];\n\n            this.each(map, function (item, section, part){\n                var offset = item.position;\n                map.jumps[offset] = {\n                    identifier : item.id,\n                    section    : section.id ,\n                    part       : part.id,\n                    position   : offset\n                };\n            });\n\n            return map;\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * This helper provides information about the current item\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/currentItem',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * List of QTI model cardinalities\n     * @type {Object}\n     */\n    var responseCardinalities = {\n        single: 'base',\n        multiple: 'list',\n        ordered: 'list',\n        record: 'record'\n    };\n\n    /**\n     * @typedef {currentItemHelper}\n     */\n    var currentItemHelper = {\n        /**\n         * Gets the responses declarations of the current item.\n         * @param {Object} runner - testRunner instance\n         * @returns {Object}\n         */\n        getDeclarations: function getDeclarations(runner) {\n            var itemRunner = runner.itemRunner;\n            return itemRunner._item && itemRunner._item.responses;\n        },\n\n        /**\n         * Gets a response declaration by the identifier of the response\n         * @param {Object} runner - testRunner instance\n         * @param {String} identifier - The identifier of the response\n         * @returns {Object|null}\n         */\n        getResponseDeclaration: function getResponseDeclaration(runner, identifier) {\n            var found = null;\n            _.forEach(currentItemHelper.getDeclarations(runner), function (declaration) {\n                var attributes = declaration.attributes || {};\n                if (attributes.identifier === identifier) {\n                    found = declaration;\n                    return false;\n                }\n            });\n            return found;\n        },\n\n        /**\n         * Convert a value to a response object\n         * @param {Array|String} value\n         * @param {String} baseType\n         * @param {String} cardinality\n         * @returns {Object}\n         */\n        toResponse: function toResponse(value, baseType, cardinality) {\n            var mappedCardinality = responseCardinalities[cardinality];\n            var response = {};\n\n            if (_.isString(value)) {\n                value = [value];\n            }\n\n            value = _.map(value || [], function (v) {\n                return (baseType === 'boolean') ? (v === true || v === 'true') : v;\n            });\n\n            if (mappedCardinality) {\n                if (mappedCardinality === 'base') {\n                    if (value.length === 0) {\n                        //return empty response:\n                        response.base = null;\n                    } else {\n                        response.base = {};\n                        response.base[baseType] = value[0];\n                    }\n                } else {\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = value;\n                }\n            }\n\n            return response;\n        },\n\n        /**\n         * Checks if the provided value can be considered as null\n         * @param {Object} value\n         * @param {String} baseType\n         * @param {String} cardinality\n         * @returns {boolean}\n         */\n        isQtiValueNull: function isQtiValueNull(value, baseType, cardinality) {\n            var mappedCardinality = responseCardinalities[cardinality];\n\n            if (_.isObject(value) && value[mappedCardinality] === null) {\n                value = null;\n            }\n\n            if (_.isObject(value) && value[mappedCardinality] && 'undefined' !== typeof value[mappedCardinality][baseType]) {\n                value = value[mappedCardinality][baseType];\n            }\n\n            return null === value || ('string' === baseType && _.isEmpty(value)) || (cardinality !== 'single' && _.isEmpty(value));\n        },\n\n        /**\n         * Tells if an item question has been answered or not\n         * @param response\n         * @param baseType\n         * @param cardinality\n         * @param [defaultValue]\n         * @returns {*}\n         */\n        isQuestionAnswered: function isQuestionAnswered(response, baseType, cardinality, defaultValue) {\n            var answered;\n            defaultValue = defaultValue || null;\n            if (currentItemHelper.isQtiValueNull(response, baseType, cardinality)) {\n                answered = false;\n            } else {\n                answered = !_.isEqual(response, currentItemHelper.toResponse(defaultValue, baseType, cardinality));\n            }\n            return answered;\n        },\n\n        /**\n         * Tells is the current item has been answered or not\n         * The item is considered answered when at least one response has been set to not empty {base : null}\n         * @param {Object} runner - testRunner instance\n         * @param {Boolean} [partially = true] - if false all questions must have been answered\n         * @returns {Boolean}\n         */\n        isAnswered: function isAnswered(runner, partially) {\n            var itemRunner = runner.itemRunner;\n            var responses = itemRunner && itemRunner.getResponses();\n            var count = 0;\n            var empty = 0;\n\n            if (itemRunner) {\n                _.forEach(currentItemHelper.getDeclarations(runner), function (declaration) {\n                    var attributes = declaration.attributes || {};\n                    var response = responses[attributes.identifier];\n                    var baseType = attributes.baseType;\n                    var cardinality = attributes.cardinality;\n\n                    count++;\n                    if (!currentItemHelper.isQuestionAnswered(response, baseType, cardinality, declaration.defaultValue)) {\n                        empty++;\n                    }\n                });\n            }\n            if( partially === false ){\n                return count > 0 && empty === 0;\n            }\n            return count > 0 && empty < count;\n        }\n    };\n\n    return currentItemHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * This helper provides more statistics about the test\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/stats',[\n    'lodash',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/currentItem'\n], function (_, mapHelper, currentItemHelper) {\n    'use strict';\n\n    /**\n     * Return scope stats that takes into account any test taker interaction made since the item has been loaded\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @returns {Object}\n     */\n    function getInstantStats(scope, runner) {\n        var map = runner.getTestMap(),\n            context = runner.getTestContext(),\n            stats = _.clone(mapHelper.getScopeStats(map, context.itemPosition, scope)),\n\n            isItemCurrentlyAnswered = currentItemHelper.isAnswered(runner);\n\n        if (!isItemCurrentlyAnswered && context.itemAnswered) {\n            stats.answered--;\n\n        } else if (isItemCurrentlyAnswered && !context.itemAnswered) {\n            stats.answered++;\n        }\n\n        return stats;\n    }\n\n    return {\n        getInstantStats: getInstantStats\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/messages',[\n    'lodash',\n    'i18n',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/stats',\n    'taoQtiTest/runner/helpers/currentItem'\n], function (_, __, mapHelper, statsHelper, currentItemHelper) {\n    'use strict';\n\n    /**\n     * Completes an exit message\n     * @param {String} message - custom message that will be appended to the unanswered stats count\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @returns {String} Returns the message text\n     */\n    function getExitMessage(message, scope, runner) {\n        var itemsCountMessage = '';\n\n        var testData = runner.getTestData(),\n            testConfig = testData && testData.config,\n            messageEnabled = testConfig ? testConfig.enableUnansweredItemsWarning : true;\n\n        if (messageEnabled) {\n            itemsCountMessage = getUnansweredItemsWarning(scope, runner);\n        }\n\n        return (itemsCountMessage + \" \" + message).trim();\n    }\n\n    /**\n     * Build message if not all items have answers\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @returns {String} Returns the message text\n     */\n    function getUnansweredItemsWarning(scope, runner) {\n        var stats = statsHelper.getInstantStats(scope, runner);\n        var unansweredCount = stats && (stats.questions - stats.answered);\n        var flaggedCount = stats && stats.flagged;\n        var itemsCountMessage = '';\n        var map = runner.getTestMap();\n        var jump = mapHelper.getJump(map, runner.getTestContext().itemPosition);\n        var belowSections;\n\n        if (scope === 'section' || scope === 'testSection'){\n            if (unansweredCount === 0) {\n                itemsCountMessage += __('You answered all %s question(s) in this section',\n                    stats.questions.toString()\n                );\n            } else {\n                itemsCountMessage = __('You answered only %s of the %s question(s) in this section',\n                    stats.answered.toString(),\n                    stats.questions.toString()\n                );\n            }\n            if (flaggedCount) {\n                itemsCountMessage += ', ';\n                itemsCountMessage +=  __('and flagged %s of them', flaggedCount.toString());\n            }\n        } else if(scope === 'test') {\n            //collect statistics from below sections\n            belowSections = getNextSections(map, jump.section);\n\n            _.forEach(belowSections, function (section) {\n                _.forEach(mapHelper.getSectionStats(runner.getTestMap(), section.id), function (sectionStats, statsKey){\n                    stats[statsKey] += sectionStats;\n                });\n            });\n\n            unansweredCount = stats && (stats.questions - stats.answered);\n            flaggedCount = stats && stats.flagged;\n\n            if (unansweredCount === 0) {\n                itemsCountMessage = __('You answered all %s question(s) in this test',\n                    stats.questions.toString()\n                );\n            } else {\n                itemsCountMessage = __('You have %s unanswered question(s)', unansweredCount.toString());\n            }\n            if (flaggedCount) {\n                itemsCountMessage += ' ' + __('and you flagged %s item(s) that you can review now', flaggedCount.toString());\n            }\n        } else if(scope === 'part') {\n            if (unansweredCount === 0) {\n                itemsCountMessage = __('You answered all %s question(s)',\n                    stats.questions.toString()\n                );\n            } else {\n                itemsCountMessage = __('You have %s unanswered question(s)', unansweredCount.toString());\n            }\n            if (flaggedCount) {\n                itemsCountMessage += ' ' + __('and you flagged %s item(s) that you can review now', flaggedCount.toString());\n            }\n        }\n\n        if (itemsCountMessage) {\n            itemsCountMessage += '.';\n        }\n        return itemsCountMessage;\n    }\n\n    /**\n     * Return sections below current.\n     * @param map\n     * @param currentSectionId\n     * @return {Object}\n     */\n    function getNextSections(map, currentSectionId) {\n        var sections = mapHelper.getSections(map),\n            result = {},\n            below = false;\n\n        _.forEach(sections, function (section) {\n            if (below) {\n                result[section.id] = section;\n            }\n            if (section.id === currentSectionId) {\n                below = true;\n            }\n        });\n\n        return result;\n    }\n\n    return {\n        getExitMessage: getExitMessage\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * This helper provides information about the test navigation\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/helpers/navigation',[\n    'lodash',\n    'taoQtiTest/runner/helpers/map'\n], function (_, mapHelper) {\n    'use strict';\n\n    /**\n     * @typedef {Object} navigationHelper\n     */\n    var navigationHelper = {\n\n        /**\n         * Check whether the test taker is leaving a section\n         *\n         * @param {Object} testContext - the actual test context\n         * @param {String} testContext.itemIdentifier - the id of the current item\n         * @param {String} testContext.sectionId - the id of the current section\n         * @param {Object} testMap - the actual test map\n         * @param {String} direction - the move direction (next, previous or jump)\n         * @param {String} scope - the move scope (item, section, testPart)\n         * @param {Number} [position] - the position in case of jump\n         * @returns {Boolean} true if the action leads to a section leave\n         * @throws {TypeError} if the context or the map are incorrect\n         */\n        isLeavingSection : function isLeavingSection(testContext, testMap, direction, scope, position){\n            var section;\n            var sectionStats;\n            var nbItems;\n            var item;\n            if( _.isPlainObject(testContext) && _.isPlainObject(testMap) &&\n                !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier) ){\n\n                section = mapHelper.getSection(testMap, testContext.sectionId);\n                sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n                nbItems = sectionStats && sectionStats.total;\n                item = mapHelper.getItem(testMap, testContext.itemIdentifier);\n\n                return  scope === 'section' ||\n                        scope === 'testPart'||\n                        (direction === 'next' && item.positionInSection + 1 === nbItems) ||\n                    (direction === 'previous' && item.positionInSection === 0) ||\n                    (direction === 'jump' && position > 0 && (position < section.position || position >= section.position + nbItems));\n            }\n            throw new TypeError('Invalid test context and test map');\n        },\n\n        /**\n         * Check whether the test taker is leaving a test part\n         *\n         * @param {Object} testContext - the actual test context\n         * @param {String} testContext.itemIdentifier - the id of the current item\n         * @param {String} testContext.sectionId - the id of the current section\n         * @param {String} testContext.testPartId - the id of the current testPart\n         * @param {Object} testMap - the actual test map\n         * @param {String} direction - the move direction (next, previous or jump)\n         * @param {String} scope - the move scope (item, section, testPart)\n         * @param {Number} [position] - the position in case of jump\n         * @returns {Boolean} true if the action leads to a section leave\n         * @throws {TypeError} if the context or the map are incorrect\n         */\n        isLeavingTestPart : function isLeavingTestPart(testContext, testMap, direction, scope, position){\n            var testPart;\n            var testPartStats;\n            var nbItems;\n            var item;\n            var section;\n            var sectionStats;\n            if( _.isPlainObject(testContext) && _.isPlainObject(testMap) &&\n               !_.isEmpty(testContext.testPartId) && !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier) ){\n\n                testPart      = mapHelper.getPart(testMap, testContext.testPartId);\n                testPartStats = mapHelper.getPartStats(testMap, testContext.testPartId);\n                nbItems       = testPartStats && testPartStats.total;\n                item          = mapHelper.getItem(testMap, testContext.itemIdentifier);\n\n                if(scope === 'section'){\n                    section = mapHelper.getSection(testMap, testContext.sectionId);\n                    sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n                }\n\n                return  scope === 'testPart'||\n                        (direction === 'next' && scope === 'item' && item.positionInPart + 1 === nbItems) ||\n                        (direction === 'next' && scope === 'section' && section.position + sectionStats.total >= nbItems) ||\n                        (direction === 'previous' && scope === 'item' && item.positionInPart === 0) ||\n                        (direction === 'previous' && scope === 'section' && section.position === testPart.position) ||\n                        (direction === 'jump' && position > 0 && (position < testPart.position || position >=  testPart.position + nbItems));\n            }\n            throw new TypeError('Invalid test context and test map');\n        },\n\n        /**\n         * Check if the given  item is the last of the test\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @returns {Boolean} true if the item is the last one\n         */\n        isLast : function isLast(testMap, itemIdentifier){\n            return this.isLastOf(testMap, itemIdentifier, 'test');\n        },\n\n        /**\n         * Check if the given  item is the first of a test\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @returns {Boolean} true if the item is the first one\n         */\n        isFirst : function isFirst(testMap, itemIdentifier){\n            return this.isFirstOf(testMap, itemIdentifier, 'test');\n        },\n\n        /**\n         * Check if the given  item is the last of a the given scope\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @param {String} [scope = 'test'] - the target scope\n         * @returns {Boolean} true if the item is the last one\n         */\n        isLastOf : function isLastOf(testMap, itemIdentifier, scope){\n            var item;\n            var stats;\n            if ( ! _.isPlainObject(testMap) ) {\n                throw new TypeError('Invalid test map');\n            }\n            if (_.isEmpty(itemIdentifier)) {\n                throw new TypeError('Invalid item identifier');\n            }\n            scope = scope || 'test';\n            item  = mapHelper.getItem(testMap, itemIdentifier);\n            stats = mapHelper.getScopeStats(testMap, item.position, scope);\n            if (stats && _.isNumber(stats.total)) {\n                if (scope === 'test') {\n                    return item.position + 1  === stats.total;\n                }\n                if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n                    return item.positionInSection + 1 === stats.total;\n                }\n                if (scope === 'part' || scope === 'testPart') {\n                    return item.positionInPart + 1 === stats.total;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Check if the given  item is the first of a the given scope\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @param {String} [scope = 'test'] - the target scope\n         * @returns {Boolean} true if the item is the first one\n         */\n        isFirstOf : function isFirstOf(testMap, itemIdentifier, scope){\n            var item;\n            if (! _.isPlainObject(testMap)) {\n                throw new TypeError('Invalid test map');\n            }\n            if (_.isEmpty(itemIdentifier)) {\n                throw new TypeError('Invalid item identifier');\n            }\n            scope = scope || 'test';\n            item  = mapHelper.getItem(testMap, itemIdentifier);\n\n            if (scope === 'test') {\n                return item.position  === 0;\n            }\n            if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n                return item.positionInSection === 0;\n            }\n            if (scope === 'part' || scope === 'testPart') {\n                return item.positionInPart === 0;\n            }\n\n            return false;\n        },\n\n        /**\n         * Gets the map descriptors of the sibling items\n         * @param {Object} testMap\n         * @param {Number|String} itemPosition - (could be also the item id)\n         * @param {String} [direction='both'] - previous/next/both\n         * @param {Number} [size=3] - will be 2xsize if direction is both\n         * @returns {Object[]} the collections of items\n         */\n        getSiblingItems: function getSiblingItems(testMap, itemPosition, direction, size) {\n            var itemId = mapHelper.getItemIdentifier(testMap,  itemPosition);\n            var previous = null;\n            var siblings = [];\n            var directions;\n\n            var itemChain = _.reduce(testMap && testMap.jumps, function (map, jump) {\n                var ref = jump.identifier;\n                if (previous) {\n                    map[previous].next = ref;\n                }\n                map[ref] = {\n                    identifier: ref,\n                    previous: previous,\n                    next: null\n                };\n                previous = ref;\n                return map;\n            }, {});\n\n            size = _.isFinite(size) ? parseInt(size, 10) : 3;\n            if (!direction || direction === 'both') {\n                directions = ['previous', 'next'];\n            } else {\n                directions = [direction];\n            }\n\n            _.forEach(directions, function walkDirection(link) {\n                var id = itemId;\n                _.times(size, function getNeighbor() {\n                    id = itemChain[id] && itemChain[id][link];\n                    if (id) {\n                        siblings.push(mapHelper.getItem(testMap, id));\n                    } else {\n                        return false;\n                    }\n                });\n            });\n\n            return siblings;\n        },\n\n\n        /**\n         * Gets the map descriptor of the next item\n         * @param {Object} testMap\n         * @param {Number|String} itemPosition - (could be also the item id)\n         * @returns {Object}\n         */\n        getNextItem : function getNextItem(testMap, itemPosition) {\n            var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'next', 1);\n            if (siblings.length) {\n                return siblings[0];\n            }\n            return null;\n        },\n\n        /**\n         * Gets the map descriptor of the previous item\n         * @param {Object} testMap\n         * @param {Number|String} itemPosition - (could be also the item id)\n         * @returns {Object}\n         */\n        getPreviousItem : function getPreviousItem(testMap, itemPosition) {\n            var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'previous', 1);\n            if (siblings.length) {\n                return siblings[0];\n            }\n            return null;\n        },\n\n        /**\n         * Checks if an action will move forward.\n         * @param {String} action - the name of the action that will be performed\n         * @param {Object} [params] - some optional parameters that apply to the action\n         * @returns {Boolean}\n         */\n        isMovingToNextItem : function isMovingToNextItem(action, params) {\n            params = params || {};\n            return (\n                action === 'timeout' ||\n                action === 'skip' ||\n                (action === 'move' && params.direction === 'next' && params.scope === 'item')\n            );\n        },\n\n        /**\n         * Checks if an action will move backward.\n         * @param {String} action - the name of the action that will be performed\n         * @param {Object} [params] - some optional parameters that apply to the action\n         * @returns {Boolean}\n         */\n        isMovingToPreviousItem : function isMovingToPreviousItem(action, params) {\n            params = params || {};\n            return (\n                action === 'move' && params.direction === 'previous' && params.scope === 'item'\n            );\n        },\n\n        /**\n         * Checks if an action will jump on another item.\n         * @param {String} action - the name of the action that will be performed\n         * @param {Object} [params] - some optional parameters that apply to the action\n         * @returns {Boolean}\n         */\n        isJumpingToItem : function isJumpingToItem(action, params) {\n            params = params || {};\n            return (\n                action === 'move' && params.direction === 'jump' && params.scope === 'item'\n            );\n        }\n\n    };\n\n    return navigationHelper;\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/timer/timers', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"timer-box\\\">\\n    <a href=\\\"#\\\" class=\\\"timer-toggler hidden\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide timers\", options) : helperMissing.call(depth0, \"__\", \"Hide timers\", options)))\n    + \"\\\"><span class=\\\"icon-clock\\\"></span></a>\\n    <div class=\\\"timer-wrapper\\\"></div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Timer\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/timer',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'core/polling',\n    'core/timer',\n    'core/store',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/controls/timer/timerComponent',\n    'taoQtiTest/runner/helpers/messages',\n    'taoQtiTest/runner/helpers/navigation',\n    'tpl!taoQtiTest/runner/plugins/controls/timer/timers'\n], function($, _, __, Promise, pollingFactory, timerFactory, store, hider, pluginFactory, timerComponentFactory, messages, navigationHelper, timerBoxTpl) {\n    'use strict';\n\n    /**\n     * Time interval between timer refreshes, in milliseconds\n     * @type {Number}\n     */\n    var timerRefresh = 1000;\n\n    /**\n     * Duration of a second in the timer's base unit\n     * @type {Number}\n     */\n    var precision = 1000;\n\n    /**\n     * The message to display when exiting\n     */\n    var exitMessage = __('Once you close this section, you cannot return to it or change your answers.');\n\n\n    var timerTypes = {\n        test: 'assessmentTest',\n        testPart: 'testPart',\n        section: 'assessmentSection',\n        item: 'assessmentItemRef'\n    };\n\n    /**\n     * Are we in a timed section\n     * @param {Object} context - the current test context\n     * @returns {Boolean}\n     */\n    var isTimedSection = function isTimedSection(context) {\n        var timeConstraints = context.timeConstraints || [];\n        return _.some(timeConstraints, function(constraint) {\n            return constraint.qtiClassName === 'assessmentSection';\n        });\n    };\n\n\n    /**\n     * Creates the timer plugin\n     */\n    return pluginFactory({\n\n        name: 'timer',\n\n        /**\n         * Installation of the plugin (called before init)\n         */\n        install: function install() {\n            var self = this;\n            //the storechange event is fired early (before runner's init is done)\n            //so we attach the handler early\n            var testRunner = this.getTestRunner();\n            testRunner.on('storechange', function handleStoreChange() {\n                self.shouldClearStorage = true;\n            });\n        },\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n\n            var self         = this;\n            var testRunner   = this.getTestRunner();\n            var testData     = testRunner.getTestData() || {};\n            var itemStates   = testData.itemStates || {};\n            var timerWarning = testData.config && testData.config.timerWarning || {};\n\n            var displayedTimers = {};\n            var timers = {};\n\n            var extraTime = 0;\n            var consumedExtraTime = 0;\n            var lastConsumedExtraTime = 0;\n\n            /**\n             * Gets the remaining extra time, if any\n             * @returns {Number} the remaining extra time in milliseconds\n             */\n            var getRemainingExtraTime = function getRemainingExtraTime(extra) {\n                if (extra) {\n                    extraTime = extra;\n                }\n                return Math.max(0, extraTime - consumedExtraTime) * precision;\n            };\n\n            /**\n             * Sets correctly the remaining time on a timer config set\n             * @param {Object} timerConfig\n             * @param {Number} remaining\n             * @returns {Object}\n             */\n            var setRemainingTime = function setRemainingTime(timerConfig, remaining) {\n                // will display the timer with extra time, if any\n                timerConfig.remaining = remaining + getRemainingExtraTime(timerConfig.extra);\n\n                // keep track of the regular timer, without extra time\n                timerConfig.regular = remaining;\n\n                return timerConfig;\n            };\n\n            /**\n             * Load the configuration of a timer from the current context\n             * @param {String} type - the timer type/qtiClass\n             * @returns {Object} the timer config if there's one for the given type\n             */\n            var getTimerConfig = function getTimerConfig(type) {\n                var timeConstraint;\n                var timer;\n                var closestPreviousWarning;\n                var context = testRunner.getTestContext();\n\n                // get the config of each timer\n                if (!context.isTimeout && context.itemSessionState === itemStates.interacting) {\n                    timeConstraint = _.findLast(context.timeConstraints, {\n                        qtiClassName: type\n                    });\n                    if (timeConstraint) {\n                        timer = setRemainingTime({\n                            label: timeConstraint.label,\n                            extra: timeConstraint.extraTime,\n                            type: timeConstraint.qtiClassName,\n                            id: timeConstraint.source,\n                            running: true,\n                            warnings: {}\n                        }, timeConstraint.seconds * precision);\n\n                        _(timerWarning[timeConstraint.qtiClassName]).forEach(function(value, key) {\n                            if (_.contains(['info', 'warning', 'danger'], value)) {\n                                timer.warnings[key] = {\n                                    type: value,\n                                    showed: timer.remaining / precision <= key,\n                                    point: parseInt(key, 10) * precision\n                                };\n                            }\n                        });\n\n                        closestPreviousWarning = _.find(timer.warnings, {\n                            showed: true\n                        });\n                        if (!_.isEmpty(closestPreviousWarning) && closestPreviousWarning.point && timer.warnings[closestPreviousWarning.point / precision]) {\n                            timer.warnings[closestPreviousWarning.point / precision].showed = false;\n                        }\n                    }\n                }\n                return timer;\n            };\n\n            /**\n             * Check if the movment leads to leaving an active timed section\n             * @param {String} direction - the move direction (next, previous or jump)\n             * @param {String} scope - the move scope (item, section, testPart)\n             * @param {Number} [position] - the position in case of jump\n             * @returns {Boolean}\n             */\n            var leaveTimedSection = function leaveTimedSection(direction, scope, position) {\n                var context = testRunner.getTestContext();\n                var map = testRunner.getTestMap();\n                if (!context.isTimeout && context.itemSessionState !== itemStates.closed && isTimedSection(context)) {\n                    return navigationHelper.isLeavingSection(context, map, direction, scope, position);\n                }\n                return false;\n            };\n\n            /**\n             * Remove a timer from the current ones\n             * @param {String} type - the timer type to remove\n             */\n            var removeTimer = function removeTimer(type) {\n                if (displayedTimers[type]) {\n\n                    displayedTimers[type].destroy();\n                    displayedTimers = _.omit(displayedTimers, type);\n                    timers = _.omit(timers, type);\n\n                    /**\n                     * @event timerPlugin#removetimer\n                     * @param {String} type of timer (such as 'assessmentSection', 'testPart' etc.)\n                     */\n                    self.trigger('removetimer', type);\n                }\n            };\n\n            /**\n             * Add and initialize a timer of the given type\n             * @param {Object} config - the timer config\n             * @param {String} type - the timer type to remove\n             */\n            var addTimer = function addTimer(type, config) {\n                if (config) {\n                    // track the regular remaining timer, without the extra time\n                    timers[type] = config.regular;\n\n                    // creates the component that will display the final timer\n                    displayedTimers[type] = timerComponentFactory(config);\n                    displayedTimers[type]\n                        .init()\n                        .render(self.$element.find('.timer-wrapper'));\n\n                    /**\n                     * @event timerPlugin#addtimer\n                     * @param {String} type of timer (such as 'assessmentSection', 'testPart' etc.)\n                     * @param {Object} timer instance ('core/timer' timer factory).\n                     */\n                    self.trigger('addtimer', type, displayedTimers[type]);\n                }\n            };\n\n            /**\n             * Update the timers.\n             * It will remove, let, add or update the current timers based on the current context.\n             */\n            var updateTimers = function updateTimers(checkStorage) {\n                var timerUpdatePromises = [];\n                var context = testRunner.getTestContext();\n                if (context.extraTime) {\n                    extraTime = context.extraTime.total;\n                    consumedExtraTime = Math.max(consumedExtraTime, context.extraTime.consumed);\n                }\n\n                _.forEach(timerTypes, function(type) {\n                    timerUpdatePromises.push(\n                        new Promise(function(resolve) {\n                            var timerConfig = getTimerConfig(type);\n                            var timerExists = typeof displayedTimers[type] !== 'undefined';\n                            var addAndResolve = function addAndResolve(){\n                                addTimer(type, timerConfig);\n                                return resolve();\n                            };\n\n                            //no new time for this type\n                            if (!timerConfig) {\n                                removeTimer(type);\n                                return resolve();\n                            }\n\n                            //timer exists\n                            if(timerExists && displayedTimers[type].id() === timerConfig.id){\n                                setRemainingTime(timerConfig, timers[type]);\n                                return resolve();\n                            } else {\n                                removeTimer(type);\n\n                                if (checkStorage){\n                                    self.storage.getItem(timerConfig.id).then(function(savedTime) {\n                                        if (_.isNumber(savedTime) && savedTime >= 0) {\n                                            setRemainingTime(timerConfig, savedTime);\n                                        }\n                                        return addAndResolve();\n                                    }).catch(function() {\n                                        //add the timer even if the storage doesn't work\n                                        return addAndResolve();\n                                    });\n\n                                } else {\n                                    return addAndResolve();\n                                }\n                            }\n                        })\n                    );\n                });\n                return Promise\n                        .all(timerUpdatePromises)\n                        .then(function(data){\n                            toggleToggler();\n                            return data;\n                        });\n            };\n\n            /**\n             * Secured call to enable\n             */\n            function doEnable() {\n                if (!self.getState('enabled')) {\n                    self.enable();\n                }\n            }\n\n            /**\n             * Secured call to disable\n             */\n            function doDisable() {\n                if (self.getState('enabled')) {\n                    self.disable();\n                }\n            }\n\n            /**\n             * Show/hide the timers akka \"zen mode\"\n             */\n            function toggleZenMode() {\n                if(self.$element.hasClass('zen-mode')){\n                    self.$element.removeClass('zen-mode');\n                    self.$toggler.attr('title', __('Hide timers'));\n                    self.storage.removeItem('zen-mode');\n                } else {\n                    self.$element.addClass('zen-mode');\n                    self.$toggler.attr('title', __('Show timers'));\n                    self.storage.setItem('zen-mode', true);\n                }\n            }\n\n            /**\n             * Hide the toggler without timers,\n             * display it otherwise\n             */\n            function toggleToggler() {\n                if(self.$toggler.length){\n                    if(_.size(timers) > 0){\n                        hider.show(self.$toggler);\n                    } else {\n                        hider.hide(self.$toggler);\n                    }\n                }\n            }\n\n            return store('timer-' + testRunner.getConfig().serviceCallId)\n                .then(function(timeStore) {\n                    if (self.shouldClearStorage) {\n                        return timeStore.clear().then(function() {\n                            return timeStore;\n                        });\n                    }\n                    return Promise.resolve(timeStore);\n                }).then(function(timeStore) {\n\n                    //the timer's storage\n                    self.storage = timeStore;\n\n                    //the element that'll contain the timers\n                    self.$element = $(timerBoxTpl());\n\n                    //used to show/hide the timer\n                    self.$toggler =  self.$element.find('.timer-toggler');\n\n                    //restore the zen mode if set previously\n                    self.storage\n                        .getItem('zen-mode')\n                        .then(function(zenMode){\n                            if(zenMode  && !self.$element.hasClass('zen-mode')){\n                                toggleZenMode();\n                            }\n                        });\n\n                    self.$toggler.on('click', function(e){\n                        e.preventDefault();\n                        toggleZenMode();\n                    });\n\n\n                    //one stopwatch to count the time\n                    self.stopwatch = timerFactory({\n                        autoStart: false\n                    });\n\n                    //update the timers at regular intervals\n                    self.polling = pollingFactory({\n\n                        /**\n                         * The polling action consists in updating each timers,\n                         * checking timeout and warnings\n                         */\n                        action: function updateTime() {\n\n                            //how many time elapsed from the last tick ?\n                            var elapsed = self.stopwatch.tick();\n                            var elapsedExtraTime = 0;\n                            var timeout = false;\n                            var timeoutScope, timeoutRef;\n\n                            _.forEach(displayedTimers, function(timer, type) {\n                                var regularVal,\n                                    displayedVal,\n                                    warning;\n                                var runTimeout = function runTimeout() {\n                                    testRunner.timeout(timeoutScope, timeoutRef);\n                                };\n\n                                if (timer.running()) {\n                                    regularVal = timers[type] - elapsed;\n                                    displayedVal = timer.val() - elapsed;\n                                    timers[type] = Math.max(regularVal, 0);\n                                    timer\n                                        .val(Math.max(displayedVal, 0))\n                                        .refresh();\n\n                                    if (regularVal <= 0) {\n                                        // compute the actual consumed extra time for this period\n                                        elapsedExtraTime = Math.max(elapsedExtraTime, Math.abs(regularVal));\n                                    }\n\n                                    if (displayedVal <= 0) {\n                                        timer.running(false);\n                                        timeout = true;\n                                        timeoutRef = timer.id();\n                                        timeoutScope = type;\n\n                                        self.storage.setItem(timer.id(), 0)\n                                            .then(runTimeout)\n                                            .catch(runTimeout);\n\n                                    } else {\n                                        self.storage.setItem(timer.id(), timers[type]);\n                                        warning = timer.warn();\n                                        if (!_.isEmpty(warning)) {\n                                            testRunner.trigger(warning.type, warning.text);\n                                        }\n                                    }\n                                }\n                            });\n                            if (elapsedExtraTime) {\n                                consumedExtraTime += elapsedExtraTime / precision;\n                                lastConsumedExtraTime += elapsedExtraTime;\n                            }\n                            if (timeout) {\n                                self.disable();\n                            }\n                        },\n                        interval: timerRefresh,\n                        autoStart: false\n                    });\n\n                    //change plugin state\n                    testRunner\n                        .before('renderitem resumeitem', function() {\n                            return updateTimers(true);\n                        })\n                        .on('enableitem', doEnable)\n                        .on('disableitem', doDisable)\n                        .after('renderitem', doEnable)\n                        .before('move skip', function(e, type, scope, position) {\n                            var context = testRunner.getTestContext();\n                            var testDataBeforeMove = testRunner.getTestData();\n                            var config = testDataBeforeMove && testDataBeforeMove.config;\n                            var timerConfig = config && config.timer || {};\n                            var options = context && context.options || {};\n                            type = type ? type : 'next';\n\n                            var movePromise = new Promise(function(resolve, reject) {\n                                // endTestWarning has already been displayed, so we don't repeat the warning\n                                if (context.isLast && options.endTestWarning) {\n                                    resolve();\n                                    // display a message if we exit a timed section\n                                } else if (leaveTimedSection(type, scope, position) && !options.noExitTimedSectionWarning && !timerConfig.keepUpToTimeout) {\n                                    testRunner.trigger(\n                                        'confirm.exittimed',\n                                        messages.getExitMessage(exitMessage, 'section', testRunner),\n                                        resolve,\n                                        reject,\n                                        {\n                                            buttons: {\n                                                labels: {\n                                                    ok : __('Close this Section'),\n                                                    cancel : __('Review my Answers')\n                                                }\n                                            }\n                                        });\n                                } else {\n                                    resolve();\n                                }\n                            });\n\n                            movePromise\n                                .catch(function cancelMove() {\n                                    // Use `defer` to be sure the timer resume will occur after the move event is\n                                    // finished to be handled. Otherwise, the duration plugin will be frozen and\n                                    // the additional time will not be taken into account!\n                                    _.defer(function() {\n                                        testRunner.trigger('enableitem enablenav');\n                                    });\n                                });\n\n                            return movePromise;\n                        })\n                        .on('move', function () {\n                            doDisable();\n                            removeTimer(timerTypes.item);\n                        })\n                        .before('move skip exit timeout', function() {\n                            testRunner.getProxy().addCallActionParams({\n                                consumedExtraTime: lastConsumedExtraTime / precision\n                            });\n                            lastConsumedExtraTime = 0;\n                        })\n                        .before('finish', function() {\n                            return new Promise(function(resolve) {\n                                self.storage.removeStore()\n                                    .then(resolve)\n                                    .catch(resolve);\n                            });\n                        });\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n            var $container = this.getAreaBroker().getControlArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.polling.stop();\n            this.stopwatch.stop();\n            this.$element.remove();\n        },\n\n        /**\n         * Enables the timers\n         */\n        enable: function enable() {\n            this.polling.start();\n            this.stopwatch.resume();\n        },\n\n        /**\n         * Disables the timers\n         */\n        disable: function disable() {\n            this.polling.stop();\n            this.stopwatch.pause();\n        },\n\n        /**\n         * Shows the timers\n         */\n        show: function show() {\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hides the timers\n         */\n        hide: function hide() {\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/title/title', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <span data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"qti-controls\\\" title=\\\"\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  stack1 = helpers.unless.call(depth0, (data == null || data === false ? data : data.first), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" - \";\n  }\n\n  buffer += \"<div class=\\\"title-box truncate\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.titles), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Title\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/title/title',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/controls/title/title'\n], function ($, __, pluginFactory, titleTpl){\n    'use strict';\n\n    return pluginFactory({\n        name : 'title',\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData   = testRunner.getTestData();\n\n            var createElement = function(){\n\n                var context  = testRunner.getTestContext();\n                var titles =  [{\n                    control : 'qti-test-title',\n                    text    : testData.title\n                }];\n               if(context.isDeepestSectionVisible){\n                    titles.push({\n                        control : 'qti-test-position',  //WTF !? isn't it the section title... ?\n                        text    : context.sectionTitle\n                    });\n                }\n\n                return $(titleTpl({ titles : titles }));\n            };\n\n            this.$element = createElement();\n\n\n            testRunner\n                .after('renderitem', function(){\n                    var $element = createElement();\n                    self.$element.replaceWith($element);\n                    self.$element = $element;\n                });\n\n        },\n        render : function render(){\n            var $container = this.getAreaBroker().getControlArea();\n            $container.append(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Test Runner Control Plugin : Item Trace Variables\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/trace/itemTraceVariables',[\n    'lodash',\n    'moment',\n    'core/store',\n    'taoTests/runner/plugin'\n], function (_, moment, storeFactory, pluginFactory) {\n    'use strict';\n\n    /**\n     * Duration of a second in the timer's base unit\n     * @type {Number}\n     */\n    var precision = 1000;\n\n    /**\n     * Gets the current timestamp\n     * @returns {Number}\n     */\n    function timestamp() {\n        return Date.now() / precision;\n    }\n\n    /**\n     * Creates the timer plugin\n     */\n    return pluginFactory({\n\n        name: 'itemTraceVariables',\n\n        /**\n         * Installation of the plugin (called before init)\n         */\n        install: function install() {\n            var self = this;\n            self.getTestRunner().on('storechange', function () {\n                self.shouldClearStorage = true;\n            });\n        },\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var variables = {};\n\n            function onError(err) {\n                testRunner.trigger('error', err);\n            }\n\n            return storeFactory('trace-' + testRunner.getConfig().serviceCallId)\n                .then(function (tracesStore) {\n                    if (self.shouldClearStorage) {\n                        return tracesStore.clear().then(function () {\n                            return tracesStore;\n                        });\n                    }\n                    return tracesStore;\n                }).then(function (tracesStore) {\n                    testRunner\n                        .after('renderitem enableitem', function () {\n                            var context = testRunner.getTestContext();\n\n                            variables = {\n                                ITEM_START_TIME_CLIENT: timestamp()\n                            };\n\n                            tracesStore.getItem(context.itemIdentifier)\n                                .then(function (data) {\n                                    if (data) {\n                                        _.merge(variables, data);\n                                    }\n\n                                    return tracesStore.setItem(context.itemIdentifier, variables);\n                                })\n                                .catch(onError);\n                        })\n\n                        .before('move skip exit timeout', function () {\n                            var context = testRunner.getTestContext();\n\n                            variables.ITEM_END_TIME_CLIENT = timestamp();\n                            variables.ITEM_TIMEZONE = moment().utcOffset(moment().utcOffset()).format('Z');\n\n                            return tracesStore.setItem(context.itemIdentifier, variables).catch(onError);\n                        })\n\n                        .before('unloaditem', function () {\n                            var context = testRunner.getTestContext();\n                            return testRunner.getProxy().callItemAction(context.itemIdentifier, 'storeTraceData', {\n                                traceData: JSON.stringify(variables)\n                            });\n                        })\n\n                        .before('finish', function () {\n                            return new Promise(function (resolve) {\n                                tracesStore.removeStore()\n                                    .then(resolve)\n                                    .catch(resolve);\n                            });\n                        });\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * http://www.imsglobal.org/question/qtiv2p2p1/QTIv2p2p1-ASI-InformationModelv1p0/imsqtiv2p2p1_asi_v1p0_InfoModelv1p0.html#DerivedCharacteristic_ItemSessionControl.Attr_allowSkipping\n *\n * An item is defined to be skipped if the candidate has not provided any\n * response. In other words, all response variables are submitted with their\n * default value or are NULL. This definition is consistent with the\n * numberResponded operator available in outcomeProcessing. If 'false',\n * candidates are not allowed to skip the item, or in other words, they are not\n * allowed to submit the item until they have provided a non-default value for\n * at least one of the response variables. By definition, an item with no\n * response variables cannot be skipped. The value of this attribute is only\n * applicable when the item is in a testPart with individual submission mode.\n * Note that if allowSkipping is 'true' delivery engines must ensure that the\n * candidate can choose to submit no response, for example, through the\n * provision of a \"skip\" button.\n */\n\ndefine('taoQtiTest/runner/plugins/navigation/allowSkipping',[\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/currentItem'\n], function(_, __, pluginFactory, currentItemHelper) {\n    'use strict';\n\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n    return pluginFactory({\n\n        /**\n         * Plugin name\n         * @type {String}\n         */\n        name: 'allowSkipping',\n\n        /**\n         * Initialize plugin (called during runner's initialization)\n         * @returns {this}\n         */\n        init: function init() {\n            this.getTestRunner().before('move', function () {\n                var self = this;\n                var testContext = this.getTestContext();\n                var isInteracting = !this.getItemState(testContext.itemIdentifier, 'disabled');\n\n                if ( isInteracting && testContext.enableAllowSkipping && !testContext.allowSkipping ) {\n\n                    return new Promise(function (resolve, reject) {\n                        if(_.size(currentItemHelper.getDeclarations(self)) === 0){\n                            return resolve();\n                        }\n                        if (currentItemHelper.isAnswered(self, true)) {\n                            return resolve();\n                        }\n\n                        if (!self.getState('alerted.notallowed')) { // Only show one alert for itemSessionControl\n                            self.setState('alerted.notallowed', true);\n                            self.trigger(\n                                'alert.notallowed',\n                                __('A response to this item is required.'),\n                                function () {\n                                    self.trigger('resumeitem');\n                                    reject();\n                                    self.setState('alerted.notallowed', false);\n                                }\n                            );\n                        }\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * This is a helper for navigation plugins. It decides if a warning should be displayed\n * before actually moving to the next item\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',[], function () {\n    'use strict';\n\n    /**\n     * Convert a value to a boolean\n     * @param {*} value\n     * @param {Boolean} defaultValue\n     * @returns {Boolean}\n     */\n    var toBoolean = function toBoolean(value, defaultValue) {\n        if (typeof(value) === \"undefined\") {\n            return defaultValue;\n        } else {\n            return (value === true || value === \"true\");\n        }\n    };\n\n    /**\n     * @param {Object} options\n     * @param {Boolean} options.endTestWarning - enables the end test warning, when applicable\n     * @param {Boolean} options.isLast - if the item is the last of the test\n     * @param {Boolean} options.isLinear - if the current part is linear\n     * @param {Boolean} options.nextItemWarning - enables the next item warning, when applicable\n     * @param {Boolean} options.nextPartWarning - enables the next item warning on part change\n     * @param {Boolean} options.stats - current state of the test\n     * @param {Object} options.nextPart - description of the next part of the test\n     * @param {Number} options.remainingAttempts - remaining attempts for the current item\n     * @param {String} options.testPartId - current test part identifier\n     * @param {Boolean} options.unansweredOnly - warn only if there are unanswered/flagged items\n     * @returns {Object}\n     */\n    var nextWarningHelper = function nextWarningHelper(options) {\n        var endTestWarning      = toBoolean(options.endTestWarning, false),\n            isLast              = toBoolean(options.isLast, false),\n            isLinear            = toBoolean(options.isLinear, false),\n            nextItemWarning     = toBoolean(options.nextItemWarning, false),\n            nextPartWarning     = toBoolean(options.nextPartWarning, false),\n            stats               = options.stats,\n            nextPart            = options.nextPart || {},\n            remainingAttempts   = typeof(options.remainingAttempts) === 'undefined' ? -1 : options.remainingAttempts,\n            testPartId          = options.testPartId || '',\n            unansweredOnly      = toBoolean(options.unansweredOnly, false),\n\n            warnBeforeNext = shouldWarnBeforeNext(),\n            warnBeforeEnd = shouldWarnBeforeEnd();\n\n        /**\n         * Decide if we should display a warning before moving to the next item.\n         * This is useful to prevent accidental navigation (for example by pressing a shortcut) that would occur\n         * before the test taker actually gets a chance to answer an item\n         */\n        function shouldWarnBeforeNext() {\n            return nextItemWarning\n                && !itemCanBeTriedAtWill();\n                //&& !exitTimedSectionWarning(); //todo: this should be implemented to prevent a double warning!\n        }\n\n        /**\n         * We try to decide if the test taker has the freedom to come back to this item as many times as he wants\n         */\n        function itemCanBeTriedAtWill() {\n            return (\n                isLast === false                // the test is not over\n                && isLinear === false           // the context is not linear\n                && remainingAttempts === -1     // the item doesn't have a configured max attempts number\n                && !isNextItemInLinearPart()    // the next item is not in a linear part\n            );\n        }\n\n        /**\n         * Check if the next item is in a linear part, as this would prevent the test taker to come back to the current item\n         */\n        function isNextItemInLinearPart() {\n            return nextPart && typeof nextPart.isLinear !== 'undefined'\n                && isLastOfPart()\n                && nextPart.isLinear === true;\n        }\n\n        /**\n         * Decide if we should display a warning before ending the test\n         */\n        function shouldWarnBeforeEnd() {\n            return shouldWarnOnTestEnd()\n                || shouldWarnOnPartChange();\n        }\n\n        /**\n         * Are we on the last test item?\n         * @returns {Boolean}\n         */\n        function shouldWarnOnTestEnd() {\n            return isLast\n                && (\n                    endTestWarning                      // warning is explicitly required by endTestWarning category\n                    || warnBeforeNext                   // warning is implicitly triggered by the next item warning being true (prevent double warning)\n                )\n                && shouldWarnForUnansweredItems();\n        }\n\n        /**\n         * Provide the opportunity to cancel the display of the warning if there are no unanswered/flagged item\n         * for this to work, the unansweredOnly option has to be set\n         * @returns {Boolean}\n         */\n        function shouldWarnForUnansweredItems() {\n            var hasUnanswered = stats && ((stats.questions - stats.answered) !== 0),\n                hasFlagged = stats && stats.flagged !== 0;\n\n            if (unansweredOnly) {\n                return (hasUnanswered || hasFlagged);\n            } else {\n                return true;\n            }\n        }\n\n        /**\n         * Are we on the last part item?\n         * @returns {Boolean}\n         */\n        function shouldWarnOnPartChange() {\n            return nextPartWarning\n                && isLastOfPart()\n                && shouldWarnForUnansweredItems();\n        }\n\n        /**\n         * Check if the next item belong to a different part\n         * @returns {Boolean}\n         */\n        function isLastOfPart() {\n            return nextPart && nextPart.id\n                && testPartId !== nextPart.id;\n        }\n\n        /**\n         * The helper object\n         */\n        return {\n            shouldWarnBeforeEnd: function () {\n                return warnBeforeEnd;\n            },\n            shouldWarnBeforeNext: function () {\n                return warnBeforeNext;\n            }\n        };\n    };\n\n    return nextWarningHelper;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Next\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/next',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',\n    'taoQtiTest/runner/helpers/messages',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/stats',\n    'util/shortcut',\n    'util/namespace',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, nextWarningHelper, messages, mapHelper, statsHelper, shortcut, namespaceHelper, buttonTpl){\n    'use strict';\n\n    /**\n     * The display of the next button\n     */\n    var buttonData = {\n        next : {\n            control : 'move-forward',\n            title   : __('Submit and go to the next item'),\n            icon    : 'forward',\n            text    : __('Next')\n        },\n        end : {\n            control : 'move-end',\n            title   : __('Submit and go to the end of the test'),\n            icon    : 'fast-forward',\n            text    : __('End test')\n        }\n    };\n\n    /**\n     * Create the button based on the current context\n     * @param {Object} context - the test context\n     * @returns {jQueryElement} the button\n     */\n    var createElement = function createElement(context){\n        var dataType = context.isLast ? 'end' : 'next';\n        return $(buttonTpl(buttonData[dataType]));\n    };\n\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {Object} context - the test context\n     */\n    var updateElement = function updateElement($element, context){\n        var dataType = context.isLast ? 'end' : 'next';\n        if($element.data('control') !== buttonData[dataType].control){\n\n            $element.data('control', buttonData[dataType].control)\n                    .attr('title', buttonData[dataType].title)\n                    .find('.text').text(buttonData[dataType].text);\n\n            if(dataType === 'next'){\n                $element.find('.icon-' + buttonData.end.icon)\n                        .removeClass('icon-' + buttonData.end.icon)\n                        .addClass('icon-' + buttonData.next.icon);\n            } else {\n                $element.find('.icon-' + buttonData.next.icon)\n                        .removeClass('icon-' + buttonData.next.icon)\n                        .addClass('icon-' + buttonData.end.icon);\n            }\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'next',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData();\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            //plugin behavior\n            /**\n             * @param {Boolean} nextItemWarning - enable the display of a warning when going to the next item.\n             * Note: the actual display of the warning depends on other conditions (see nextWarningHelper)\n             */\n            function doNext(nextItemWarning) {\n                var context = testRunner.getTestContext(),\n                    testOptions = context.options || {};\n\n                var map = testRunner.getTestMap();\n                var nextItemPosition = context.itemPosition + 1;\n\n                // x-tao-option-unansweredWarning is a deprecated option whose behavior now matches the one of\n                // x-tao-option-nextPartWarning with the unansweredOnly option\n                var nextPartWarning = testOptions.nextPartWarning || testOptions.unansweredWarning;\n                var unansweredOnly =\n                    !testOptions.endTestWarning // this check to avoid an edge case where having both endTestWarning\n                                                // and unansweredWarning options would prevent endTestWarning to behave normally\n                    && testOptions.unansweredWarning;\n\n                var warningScope = (nextPartWarning) ? 'part' : 'test';\n\n                var warningHelper = nextWarningHelper({\n                    endTestWarning:     testOptions.endTestWarning,\n                    isLast:             context.isLast,\n                    isLinear:           context.isLinear,\n                    nextItemWarning:    nextItemWarning,\n                    nextPartWarning:    nextPartWarning,\n                    nextPart:           mapHelper.getItemPart(map, nextItemPosition),\n                    remainingAttempts:  context.remainingAttempts,\n                    testPartId:         context.testPartId,\n                    unansweredWarning:  testOptions.unansweredWarning,\n                    stats:              statsHelper.getInstantStats(warningScope, testRunner),\n                    unansweredOnly:     unansweredOnly\n                });\n\n                if(self.getState('enabled') !== false) {\n\n                    if (warningHelper.shouldWarnBeforeEnd()) {\n                        testRunner.trigger(\n                            'confirm.endTest',\n                            messages.getExitMessage(\n                                __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\n                                warningScope, testRunner),\n                            _.partial(triggerNextAction, context) // if the test taker accept\n                        );\n\n                    } else if (warningHelper.shouldWarnBeforeNext()) {\n                        testRunner.trigger(\n                            'confirm.next',\n                            __('You are about to go to the next item. Click OK to continue and go to the next item.'),\n                            _.partial(triggerNextAction, context) // if the test taker accept\n                        );\n\n                    } else {\n                        triggerNextAction(context);\n                    }\n                }\n            }\n\n            function triggerNextAction(context) {\n                if(context.isLast){\n                    self.trigger('end');\n                }\n                testRunner.next();\n            }\n\n            //create the button (detached)\n            this.$element = createElement(testRunner.getTestContext());\n\n            //attach behavior\n            this.$element.on('click', function(e){\n                e.preventDefault();\n                testRunner.trigger('nav-next');\n            });\n\n            if(testConfig.allowShortcuts && pluginShortcuts.trigger){\n                shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.trigger, this.getName(), true), function(e) {\n                    if (self.getState('enabled') === true) {\n                        testRunner.trigger('nav-next', true);\n                    }\n                }, {\n                    avoidInput: true,\n                    prevent: true\n                });\n            }\n\n            //disabled by default\n            this.disable();\n\n            //change plugin state\n            testRunner\n                .on('loaditem', function(){\n                    updateElement(self.$element, testRunner.getTestContext());\n                })\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                })\n                .on('nav-next', function(nextItemWarning) {\n                    doNext(nextItemWarning);\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n\n            //attach the element to the navigation area\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            shortcut.remove('.' + this.getName());\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Next Section\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/nextSection',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/messages',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, messages, buttonTpl){\n    'use strict';\n\n    return pluginFactory({\n        name : 'nextsection',\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testConfig = testRunner.getTestData().config;\n\n            function toggle(){\n                var options = testRunner.getTestContext().options;\n                if(testConfig.nextSection && (options.nextSection || options.nextSectionWarning)){\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function nextSection() {\n                testRunner.next('section');\n            }\n\n            this.$element = $(buttonTpl({\n                control : 'next-section',\n                title   : __('Skip to the next section'),\n                icon    : 'fast-forward',\n                text    : __('Next Section')\n            }));\n\n            this.$element.on('click', function(e){\n                var context = testRunner.getTestContext();\n                var enable = _.bind(self.enable, self);\n                e.preventDefault();\n                if(self.getState('enabled') !== false){\n                    self.disable();\n\n                    if(context.options.nextSectionWarning){\n                        testRunner.trigger(\n                            'confirm.nextsection',\n                            messages.getExitMessage(\n                                __('Once you close this section, you cannot return to it or change your answers.'),\n                                'section', testRunner),\n                            nextSection, // if the test taker accept\n                            enable,      // if the test taker refuse\n                            {\n                                buttons: {\n                                    labels: {\n                                        ok: __('Close this Section'),\n                                        cancel:  __('Review my Answers')\n                                    }\n                                }\n                            }\n                        );\n                    } else {\n                        nextSection();\n                    }\n                }\n            });\n\n            this.disable();\n            toggle();\n\n            testRunner\n                .on('loaditem', toggle)\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n\n            //attach the element to the navigation area\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Previous\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/previous',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/helpers/navigation',\n    'taoQtiTest/runner/helpers/map',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, shortcut, namespaceHelper, navigationHelper, mapHelper, buttonTpl){\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'previous',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData();\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            /**\n             * Check if the \"Previous\" functionality should be available or not\n             */\n            var canDoPrevious = function canDoPrevious() {\n                var testMap = testRunner.getTestMap();\n                var context = testRunner.getTestContext();\n                var previousSection;\n                var previousPart;\n\n                //first item of the test\n                if (navigationHelper.isFirst(testMap, context.itemIdentifier)) {\n                    return false;\n                }\n\n                //first item of a section\n                if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'section')) {\n\n                    //when entering an adaptive section,\n                    //you can't leave the section from the beginning\n                    if(context.isCatAdaptive){\n                        return false;\n                    }\n\n                    //if the previous section is adaptive or a timed section\n                    previousSection = mapHelper.getItemSection(testMap, context.itemPosition - 1);\n                    if(previousSection.isCatAdaptive || (previousSection.timeConstraint && !context.options.noExitTimedSectionWarning) ){\n                        return false;\n                    }\n                }\n\n                if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'part')) {\n\n                    //if the previous part is linear, we don't enter it too\n                    previousPart = mapHelper.getItemPart(testMap, context.itemPosition - 1);\n                    if(previousPart.isLinear){\n                        return false;\n                    }\n\n                }\n                return context.isLinear === false && context.canMoveBackward === true;\n            };\n\n            /**\n             * Hide the plugin if the Previous functionality shouldn't be available\n             */\n            var toggle = function toggle(){\n                if(canDoPrevious()){\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            };\n\n            //build element (detached)\n            this.$element =  $(buttonTpl({\n                control : 'move-backward',\n                title   : __('Submit and go to the previous item'),\n                icon    : 'backward',\n                text    : __('Previous')\n            }));\n\n            //attach behavior\n            function doPrevious(previousItemWarning) {\n                var context = testRunner.getTestContext();\n\n                if(self.getState('enabled') !== false){\n                    if (previousItemWarning && context.remainingAttempts !== -1) {\n                        testRunner.trigger(\n                            'confirm.previous',\n                            __('You are about to go to the previous item. Click OK to continue and go to the previous item.'),\n                            testRunner.previous // if the test taker accept\n                        );\n\n                    } else {\n                        testRunner.previous();\n                    }\n                }\n            }\n\n            this.$element.on('click', function(e){\n                e.preventDefault();\n                testRunner.trigger('nav-previous');\n            });\n\n            if(testConfig.allowShortcuts && pluginShortcuts.trigger){\n                shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.trigger, this.getName(), true), function(e) {\n                    if (canDoPrevious() && self.getState('enabled') === true) {\n                        testRunner.trigger('nav-previous', [true]);\n                    }\n                }, {\n                    avoidInput: true,\n                    prevent: true\n                });\n            }\n\n            //start disabled\n            toggle();\n            self.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', toggle)\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                })\n                .on('nav-previous', function(previousItemWarning){\n                    doPrevious(previousItemWarning);\n                });\n        },\n\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            shortcut.remove('.' + this.getName());\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/navigation/review/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n        <ul class=\\\"collapsible-panel plain\\\">\\n            <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n        </ul>\\n    </div>\\n    \";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \"(<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \"icon-unanswered \";\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \"icon-flagged \";\n  }\n\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"qti-panel qti-navigator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n    <div class=\\\"qti-navigator-collapsible\\\">\\n        <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\n        <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\n    </div>\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n\\n    <div class=\\\"qti-navigator-filters\\\">\\n        <ul class=\\\"plain clearfix\\\">\\n            <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\" class=\\\"qti-navigator-tab\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </span>\\n            </li>\\n\\n            <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                <span class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\">\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </span>\\n            </li>\\n\\n            <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                <span class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\">\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </span>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <nav class=\\\"qti-navigator-tree\\\"></nav>\\n\\n    <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n        <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n        <p class=\\\"qti-navigator-message\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n        </p>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/navigation/review/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            <span class=\\\"icon-up\\\"></span>\\n            <span class=\\\"icon-down\\\"></span>\\n        </span>\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isLinear), {hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n            <p class=\\\"qti-navigator-message\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n            </p>\\n            <p class=\\\"qti-navigator-actions\\\">\\n                <button class=\\\"btn-info small\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-play r\\\"></span>\\n                </button>\\n            </p>\\n        </div>\\n        \";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n        \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                    <span class=\\\"qti-navigator-counter\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.answered)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.total)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                </span>\\n                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n            </li>\\n            \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"qti-navigator-item \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"qti-navigator-icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n                            <span class=\\\"qti-navigator-number\\\">\";\n  if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                        </span>\\n                    </li>\\n                    \";\n  return buffer;\n  }\n\n  buffer += \"<ul class=\\\"qti-navigator-parts plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/review/navigator',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/autoscroll',\n    'taoQtiTest/runner/helpers/map',\n    'tpl!taoQtiTest/runner/plugins/navigation/review/navigator',\n    'tpl!taoQtiTest/runner/plugins/navigation/review/navigatorTree'\n], function ($, _, __, component, autoscroll, mapHelper, navigatorTpl, navigatorTreeTpl) {\n    'use strict';\n\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        scope: 'test',\n        canCollapse: false,\n        preventsUnseen: true,\n        hidden: false\n    };\n\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n    var _cssCls = {\n        active: 'active',\n        collapsed: 'collapsed',\n        collapsible: 'collapsible',\n        hidden: 'hidden',\n        disabled: 'disabled',\n        flagged: 'flagged',\n        answered: 'answered',\n        viewed: 'viewed',\n        unseen: 'unseen',\n        info: 'info',\n        icon: 'qti-navigator-icon',\n        scope: {\n            test: 'scope-test',\n            testPart: 'scope-test-part',\n            testSection: 'scope-test-section'\n        }\n    };\n\n    /**\n     * List of icon CSS classes\n     * @type {Array}\n     * @private\n     */\n    var _iconCls = [\n        _cssCls.info,\n        _cssCls.flagged,\n        _cssCls.answered,\n        _cssCls.viewed\n    ];\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    var _selectors = {\n        component: '.qti-navigator',\n        filterBar: '.qti-navigator-filters',\n        filter: '.qti-navigator-filter',\n        tree: '.qti-navigator-tree',\n        collapseHandle: '.qti-navigator-collapsible',\n        linearState: '.qti-navigator-linear',\n        infoAnswered: '.qti-navigator-answered .qti-navigator-counter',\n        infoViewed: '.qti-navigator-viewed .qti-navigator-counter',\n        infoUnanswered: '.qti-navigator-unanswered .qti-navigator-counter',\n        infoFlagged: '.qti-navigator-flagged .qti-navigator-counter',\n        infoPanel: '.qti-navigator-info',\n        infoPanelLabels: '.qti-navigator-info > .qti-navigator-label',\n        tabInfoAll: '[data-mode=\"all\"] .qti-navigator-counter',\n        tabInfoUnanswered: '[data-mode=\"unanswered\"] .qti-navigator-counter',\n        tabInfoFlagged: '[data-mode=\"flagged\"] .qti-navigator-counter',\n        parts: '.qti-navigator-part',\n        partLabels: '.qti-navigator-part > .qti-navigator-label',\n        sections: '.qti-navigator-section',\n        sectionLabels: '.qti-navigator-section > .qti-navigator-label',\n        items: '.qti-navigator-item',\n        itemLabels: '.qti-navigator-item > .qti-navigator-label',\n        itemIcons: '.qti-navigator-item > .qti-navigator-icon',\n        activeItem: '.qti-navigator-item.active',\n        icons: '.qti-navigator-icon',\n        linearStart: '.qti-navigator-linear-part button',\n        counters: '.qti-navigator-counter',\n        actives: '.active',\n        collapsible: '.collapsible',\n        collapsiblePanels: '.collapsible-panel',\n        unseen: '.unseen',\n        answered: '.answered',\n        flagged: '.flagged',\n        notFlagged: ':not(.flagged)',\n        notAnswered: ':not(.answered)',\n        notInformational: ':not(.info)',\n        informational: '.info',\n        hidden: '.hidden',\n        disabled : '.disabled'\n    };\n\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n    var _filterMap = {\n        all: \"\",\n        unanswered: [_selectors.answered, _selectors.informational].join(','),\n        flagged: _selectors.notFlagged,\n        answered: _selectors.notAnswered,\n        filtered: _selectors.hidden\n    };\n\n    /**\n     *\n     * @type {Object}\n     */\n    var navigatorApi = {\n        /**\n         * Updates the stats on the flagged items in the current map\n         * @param {Number} position\n         * @param {Boolean} flag\n         */\n        updateStats: function updateStats(position, flag) {\n            var map = this.map;\n            var item;\n\n            if (map) {\n                item = mapHelper.getItemAt(map, position);\n\n                if (item) {\n                    item.flagged = flag;\n                    mapHelper.updateItemStats(map, position);\n                }\n            }\n        },\n\n        /**\n         * Gets the total number of items for the provided target\n         * @param {Object} progression\n         * @param {String} target\n         * @returns {Number}\n         */\n        getProgressionTotal: function getProgressionTotal(progression, target) {\n            var total;\n\n            if ('questions' === target) {\n                total = progression.questions;\n            } else {\n                total = progression.total;\n            }\n\n            return total;\n        },\n\n        /**\n         * Set the marked state of an item\n         * @param {Number|String|jQuery} position\n         * @param {Boolean} flag\n         */\n        setItemFlag: function setItemFlag(position, flag) {\n            var $item = position && position.jquery ? position : this.controls.$tree.find('[data-position=' + position + ']');\n            var progression = this.progression;\n            var icon;\n\n            // update the map stats\n            this.updateStats(position, flag);\n\n            // update the item flag\n            $item.toggleClass(_cssCls.flagged, flag);\n\n            // set the item icon according to its state\n            icon = _.find(_iconCls, _.bind($item.hasClass, $item)) || _cssCls.unseen;\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\n\n            // update the info panel\n            progression.flagged = this.controls.$tree.find(_selectors.flagged).length;\n            this.writeCount(this.controls.$infoFlagged, progression.flagged, this.getProgressionTotal(progression, 'questions'));\n\n            // recompute the filters\n            this.filter(this.currentFilter);\n        },\n\n        /**\n         * Filters the items by a criteria\n         * @param {String} criteria\n         */\n        filter: function filter(criteria) {\n            var self = this;\n\n            // remove the current filter by restoring all items\n            var $items = this.controls.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\n\n            // filter the items according to the provided criteria\n            var filterCb = _filterMap[criteria];\n            if (filterCb) {\n                $items.filter(filterCb).addClass(_cssCls.hidden);\n            }\n\n            // update the section counters\n            this.controls.$tree.find(_selectors.sections).each(function () {\n                var $section     = $(this);\n                var $itemsFound  = $section.find(_selectors.items).not(_selectors.hidden);\n                var $filtered    = $itemsFound.not(_selectors.disabled);\n                self.writeCount($section.find(_selectors.counters), $filtered.length, $itemsFound.length);\n            });\n            this.currentFilter = criteria;\n        },\n\n        /**\n         * Update the config\n         * @param {Object} [config]\n         * @returns {navigatorApi}\n         */\n        updateConfig: function updateConfig(config) {\n            var $component = this.getElement();\n            var scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\n\n            // apply the new config\n            config = _.merge(this.config, config || {});\n\n            // enable/disable the collapsing of the panel\n            $component.toggleClass(_cssCls.collapsible, config.canCollapse);\n\n            // update the component CSS class according to the scope\n            $component.removeClass(scopeClass);\n            scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\n            $component.addClass(scopeClass);\n\n            return this;\n        },\n\n        /**\n         * Keep the active item visible, auto scroll if needed\n         */\n        autoScroll: function autoScroll() {\n            autoscroll(this.controls.$tree.find(_selectors.activeItem), this.controls.$tree);\n        },\n\n        /**\n         * Updates the review screen\n         * @param {Object} map The current test map\n         * @param {Object} context The current test context\n         * @returns {navigatorApi}\n         * @fires navigator#update\n         */\n        update: function update(map, context) {\n            var scopedMap = this.getScopedMap(map, context);\n            var progression = scopedMap.stats || {\n                questions: 0,\n                answered: 0,\n                flagged: 0,\n                viewed: 0,\n                total: 0\n            };\n            var totalQuestions = this.getProgressionTotal(progression, 'questions');\n\n            this.map = map;\n            this.progression = progression;\n\n            // update the info panel\n            this.writeCount(this.controls.$infoAnswered, progression.answered, totalQuestions);\n            this.writeCount(this.controls.$infoUnanswered, totalQuestions - progression.answered, totalQuestions);\n            this.writeCount(this.controls.$infoViewed, progression.viewed, this.getProgressionTotal(progression, 'total'));\n            this.writeCount(this.controls.$infoFlagged, progression.flagged, totalQuestions);\n            this.writeCount(this.controls.$infoAll, totalQuestions, null);\n\n\n            // rebuild the tree\n            if (!context.isLinear) {\n                this.controls.$filterBar.show();\n                this.controls.$linearState.hide();\n                this.controls.$tree.html(navigatorTreeTpl(scopedMap));\n\n                this.autoScroll();\n\n                this.setState('prevents-unseen', this.config.preventsUnseen);\n                if (this.config.preventsUnseen) {\n                    // disables all unseen items to prevent the test taker has access to.\n                    this.controls.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n                }\n            } else {\n                this.controls.$filterBar.hide();\n                this.controls.$linearState.show();\n                this.controls.$tree.empty();\n            }\n\n            // apply again the current filter\n            this.filter(this.controls.$filters.filter(_selectors.actives).data('mode'));\n\n            /**\n             * @event navigator#update the navigation data have changed\n             */\n            this.trigger('update');\n\n            return this;\n        },\n\n        /**\n         * Gets the scoped map\n         * @param {Object} map The current test map\n         * @param {Object} context The current test context\n         * @returns {object} The scoped map\n         */\n        getScopedMap: function getScopedMap(map, context) {\n            var scopedMap = mapHelper.getScopeMapFromContext(map, context, this.config.scope);\n            var testPart = mapHelper.getPart(scopedMap, context.testPartId) || {};\n            var section = mapHelper.getSection(scopedMap, context.sectionId) || {};\n            var item = mapHelper.getItem(scopedMap, context.itemIdentifier) || {};\n\n            // set the active part/section/item\n            testPart.active = true;\n            section.active = true;\n            item.active = true;\n\n            // adjust each item with additional meta\n            return mapHelper.each(scopedMap, function(itm) {\n                var cls = [];\n                var icon = '';\n\n                if (itm.active) {\n                    cls.push('active');\n                }\n                if (itm.informational) {\n                    cls.push('info');\n                    icon = icon || 'info';\n                }\n                if (itm.flagged) {\n                    cls.push('flagged');\n                    icon = icon || 'flagged';\n                }\n                if (itm.answered) {\n                    cls.push('answered');\n                    icon = icon || 'answered';\n                }\n                if (itm.viewed) {\n                    cls.push('viewed');\n                    icon = icon || 'viewed';\n                } else {\n                    cls.push('unseen');\n                    icon = icon || 'unseen';\n                }\n\n                itm.cls = cls.join(' ');\n                itm.icon = icon;\n            });\n        },\n\n        /**\n         * Updates a counter\n         * @param {jQuery} $place\n         * @param {Number} count\n         * @param {Number|Null} total\n         * @private\n         */\n        writeCount: function writeCount($place, count, total) {\n\n            var display = 0;\n            if($place.parent().hasClass('qti-navigator-tab')){\n                display = Math.max(count, 0);\n            }\n            else if(total > 0){\n                display = Math.min(count, total) + '/' + total;\n            }\n            $place.text(display);\n        },\n\n        /**\n         * Selects an item\n         * @param {String|jQuery} position The item's position\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\n         * @returns {jQuery} Returns the selected item\n         */\n        select: function select(position, open) {\n            // find the item to select and extract its hierarchy\n            var $tree = this.controls.$tree;\n            var selected = position && position.jquery ? position : $tree.find('[data-position=' + position + ']');\n            var hierarchy = selected.parentsUntil($tree);\n            var previousPosition = 0;\n            var $previous = $tree.find(_selectors.activeItem);\n            if ( $previous.length ) {\n                previousPosition = $previous.data('position');\n            }\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            if (open) {\n                this.openOnly(hierarchy);\n            }\n\n            // select the item\n            $tree.find(_selectors.actives).removeClass(_cssCls.active);\n            hierarchy.add(selected).addClass(_cssCls.active);\n\n            position = selected.data('position');\n\n            /**\n             * An item is selected\n             *\n             * @param {Number} position - The item position on which select\n             * @param {Number} previousPosition - The item position from which select\n             * @event navigator#selected\n             */\n            this.trigger('selected', position, previousPosition);\n\n            return selected;\n        },\n\n        /**\n         * Opens the tree on the selected item only\n         * @returns {jQuery} Returns the selected item\n         */\n        openSelected: function openSelected() {\n            // find the selected item and extract its hierarchy\n            var $tree = this.controls.$tree;\n            var selected = $tree.find(_selectors.items + _selectors.actives);\n            var hierarchy = selected.parentsUntil($tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            this.openOnly(hierarchy);\n\n            return selected;\n        },\n\n        /**\n         * Collapses the full tree and opens only the provided branch\n         * @param {jQuery} opened The element to be opened\n         * @param {jQuery} [root] The root element from which collapse the panels\n         */\n        openOnly: function openOnly(opened, root) {\n            (root || this.controls.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n            opened.removeClass(_cssCls.collapsed);\n        },\n\n        /**\n         * Toggles a panel\n         * @param {jQuery} panel The panel to toggle\n         * @param {String} [collapseSelector] Selector of panels to collapse\n         * @returns {Boolean} Returns `true` if the panel just expanded now\n         */\n        togglePanel: function togglePanel(panel, collapseSelector) {\n            var collapsed = panel.hasClass(_cssCls.collapsed);\n\n            if (collapseSelector) {\n                this.controls.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n            }\n\n            if (collapsed) {\n                panel.removeClass(_cssCls.collapsed);\n            } else {\n                panel.addClass(_cssCls.collapsed);\n            }\n            return collapsed;\n        },\n\n        /**\n         * Toggles the display state of the component\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n         * @returns {navigatorApi}\n         */\n        toggle: function toggle(show) {\n            if (typeof show === 'undefined') {\n                show = this.is('hidden');\n            }\n\n            if (show) {\n                this.show();\n            } else {\n                this.hide();\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     *\n     * @param {Object} config\n     * @param {String} [config.scope] Limit the review screen to a particular scope: test, testPart, testSection\n     * @param {Boolean} [config.preventsUnseen] Prevents the test taker to access unseen items\n     * @param {Boolean} [config.canCollapse] Allow the test taker to collapse the component\n     * @param {Boolean} [config.canFlag] Allow the test taker to flag items\n     * @param {Boolean} [config.hidden] Hide the component at init\n     * @param {Object} map The current test map\n     * @param {Object} context The current test context\n     * @returns {*}\n     */\n    function navigatorFactory(config, map, context) {\n\n        var navigator;\n\n        /**\n         * Flags an item\n         * @param {jQuery} $item\n         */\n        function flagItem($item) {\n            var position = $item.data('position');\n            var flagged = !$item.hasClass(_cssCls.flagged);\n\n            // update the display\n            navigator.setItemFlag(position, flagged);\n\n            /**\n             * An item is flagged\n             * @event navigator#flag\n             * @param {Number} position - The item position on which jump\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\n             */\n            navigator.trigger('flag', position, flagged);\n        }\n\n        /**\n         * Jumps to an item\n         * @param {jQuery} $item\n         * @private\n         */\n        function jump($item) {\n            var position = $item.data('position');\n\n            /**\n             * A jump to a particular item is required\n             * @event navigator#jump\n             * @param {Number} position - The item position on which jump\n             */\n            navigator.trigger('jump', position);\n        }\n\n        navigator = component(navigatorApi, _defaults)\n            .setTemplate(navigatorTpl)\n\n\n            // uninstalls the component\n            .on('destroy', function () {\n                this.controls = null;\n            })\n\n            // keep the activ item visible\n            .on('show', function () {\n                this.autoScroll();\n            })\n\n            // renders the component\n            .on('render', function () {\n                var self = this;\n\n                // main component elements\n                var $component = this.getElement();\n                var $filterBar = $component.find(_selectors.filterBar);\n                var $filters = $filterBar.find('li');\n                var $tree = $component.find(_selectors.tree);\n\n                // links the component to the underlying DOM elements\n                this.controls = {\n                    // access to info panel displaying counters\n\n                    $infoAnswered: $component.find(_selectors.infoAnswered),\n                    $infoViewed: $component.find(_selectors.infoViewed),\n                    $infoAll: $component.find(_selectors.tabInfoAll),\n                    $infoUnanswered: this.config.showLegend ?\n                        $component.find(_selectors.infoUnanswered) :\n                        $component.find(_selectors.tabInfoUnanswered),\n                    $infoFlagged: this.config.showLegend ?\n                        $component.find(_selectors.infoFlagged) :\n                        $component.find(_selectors.tabInfoFlagged),\n\n                    // access to filter switches\n                    $filterBar: $filterBar,\n                    $filters: $filters,\n\n                    // access to the tree of parts/sections/items\n                    $tree: $tree,\n\n                    // access to the panel displayed when a linear part is reached\n                    $linearState: $component.find(_selectors.linearState)\n                };\n\n                // apply options\n                this.updateConfig();\n\n                // click on the collapse handle: collapse/expand the review panel\n                $component.on('click' + _selectors.component, _selectors.collapseHandle, function () {\n                    if (!self.is('disabled')) {\n                        $component.toggleClass(_cssCls.collapsed);\n                        if ($component.hasClass(_cssCls.collapsed)) {\n                            self.openSelected();\n                        }\n                    }\n                });\n\n                // click on the info panel title: toggle the related panel\n                $component.on('click' + _selectors.component, _selectors.infoPanelLabels, function () {\n                    if (!self.is('disabled')) {\n                        self.togglePanel($(this).closest(_selectors.infoPanel), _selectors.infoPanel);\n                    }\n                });\n\n                // click on a part title: toggle the related panel\n                $tree.on('click' + _selectors.component, _selectors.partLabels, function () {\n                    var $panel;\n\n                    if (!self.is('disabled')) {\n                        $panel = $(this).closest(_selectors.parts);\n\n                        if (self.togglePanel($panel, _selectors.parts)) {\n                            if ($panel.hasClass(_cssCls.active)) {\n                                self.openSelected();\n                            } else {\n                                self.openOnly($panel.find(_selectors.sections).first(), $panel);\n                            }\n                        }\n                    }\n\n                });\n\n                // click on a section title: toggle the related panel\n                $tree.on('click' + _selectors.component, _selectors.sectionLabels, function () {\n                    if (!self.is('disabled')) {\n                        self.togglePanel($(this).closest(_selectors.sections), _selectors.sections);\n                    }\n                });\n\n                // click on an item: jump to the position\n                $tree.on('click' + _selectors.component, _selectors.itemLabels, function (event) {\n                    var $item, $target;\n\n                    if (!self.is('disabled')) {\n                        $item = $(this).closest(_selectors.items);\n\n                        if (!$item.hasClass(_cssCls.disabled)) {\n                            $target = $(event.target);\n                            if (self.config.canFlag && $target.is(_selectors.icons) && !$component.hasClass(_cssCls.collapsed)) {\n                                // click on the icon, just flag the item, unless the panel is collapsed\n                                if (!$item.hasClass(_cssCls.unseen) && !$item.hasClass(_cssCls.info)) {\n                                    flagItem($item);\n                                }\n                            } else if (!$item.hasClass(_cssCls.active)){\n                                // go to the selected item\n                                self.select($item);\n                                jump($item);\n                            }\n                        }\n                    }\n                });\n\n                // click on the start button inside a linear part: jump to the position\n                $tree.on('click' + _selectors.component, _selectors.linearStart, function () {\n                    var $btn;\n\n                    if (!self.is('disabled')) {\n                        $btn = $(this);\n\n                        // go to the first item of the linear part\n                        if (!$btn.hasClass(_cssCls.disabled)) {\n                            $btn.addClass(_cssCls.disabled);\n                            jump($btn);\n                        }\n                    }\n\n                });\n\n                // click on a filter button\n                $filterBar.on('click' + _selectors.component, _selectors.filter, function () {\n                    var $btn, mode;\n\n                    if (!self.is('disabled')) {\n                        $btn = $(this);\n                        mode = $btn.data('mode');\n\n                        // select the button\n                        $filters.removeClass(_cssCls.active);\n                        $component.removeClass(_cssCls.collapsed);\n                        $btn.addClass(_cssCls.active);\n\n                        // filter the items\n                        self.filter(mode);\n\n                        //after filtering, ensure that the active item (if exists) is visible\n                        self.autoScroll();\n                    }\n                });\n\n                this.update(map, context);\n            });\n\n        // set default filter\n        navigator.currentFilter = 'all';\n\n        // the component will be ready\n        return navigator.init(config);\n    }\n\n    return navigatorFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Review panel\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/review/review',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/plugins/navigation/review/navigator'\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory, mapHelper, navigatorFactory) {\n    'use strict';\n\n    /**\n     * The display states of the buttons\n     */\n    var buttonData = {\n        setFlag: {\n            control: 'set-item-flag',\n            title: __('Flag the current item for later review'),\n            icon: 'anchor',\n            text: __('Flag for Review')\n        },\n        unsetFlag: {\n            control: 'unset-item-flag',\n            title: __('Do not flag the current item for later review'),\n            icon: 'anchor',\n            text: __('Unflag for Review')\n        },\n        showReview: {\n            control: 'show-review',\n            title: __('Show the review screen'),\n            icon: 'right',\n            text: __('Show Review')\n        },\n        hideReview: {\n            control: 'hide-review',\n            title: __('Hide the review screen'),\n            icon: 'left',\n            text: __('Hide Review')\n        }\n    };\n\n    /**\n     * Gets the definition of the flagItem button related to the context\n     * @param {Object} context - the test context\n     * @returns {Object}\n     */\n    function getFlagItemButtonData(context) {\n        var dataType = context.itemFlagged ? 'unsetFlag' : 'setFlag';\n        return buttonData[dataType];\n    }\n\n    /**\n     * Gets the definition of the toggleNavigator button related to the context\n     * @param {Object} navigator - the navigator component\n     * @returns {Object}\n     */\n    function getToggleButtonData(navigator) {\n        var dataType = navigator.is('hidden') ? 'showReview' : 'hideReview';\n        return buttonData[dataType];\n    }\n\n    /**\n     * Update the button based on the provided data\n     * @param {Component} button - the element to update\n     * @param {Object} data - the button data\n     */\n    function updateButton(button, data) {\n        var $button = button.getElement();\n        if (button.is('rendered')) {\n            if ($button.data('control') !== data.control) {\n                $button\n                    .data('control', data.control)\n                    .attr('title', data.title);\n\n                $button.find('.icon').attr('class', 'icon icon-' + data.icon);\n                $button.find('.text').text(data.text);\n\n                if (_.contains(data.control, 'flag')) {\n                    if (button.is('active')) {\n                        button.turnOff();\n                    } else {\n                        button.turnOn();\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Checks if the current context allows to mark the item for review\n     * @param {Object} testRunner\n     * @returns {Boolean}\n     */\n    function canFlag(testRunner) {\n        var context = testRunner.getTestContext();\n        var map = testRunner.getTestMap();\n        var item = mapHelper.getItemAt(map, context.itemPosition);\n        return !!(!context.isLinear && context.options.markReview && !(item && item.informational));\n    }\n\n    /**\n     * Creates the timer plugin\n     */\n    return pluginFactory({\n        name: 'review',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData();\n            var testContext = testRunner.getTestContext();\n            var testMap = testRunner.getTestMap();\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n            var navigatorConfig = testConfig.review || {};\n            var previousItemPosition;\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            function isPluginAllowed() {\n                var context = testRunner.getTestContext();\n                return navigatorConfig.enabled && context && context.options && context.options.reviewScreen;\n            }\n\n            /**\n             * Mark an item for review\n             * @param {Number} position\n             * @param {Boolean} flag\n             * @returns {Promise}\n             */\n            function flagItem(position, flag) {\n                self.disable();\n\n                return testRunner.getProxy()\n                    .callTestAction('flagItem', {\n                        position: position,\n                        flag: flag\n                    })\n                    .then(function () {\n                        var context = testRunner.getTestContext();\n\n                        // update the state in the context if the flagged item is the current one\n                        if (context.itemPosition === position) {\n                            context.itemFlagged = flag;\n                        }\n\n                        // update the display of the flag button\n                        updateButton(self.flagItemButton, getFlagItemButtonData(context));\n\n                        // update the item state\n                        self.navigator.setItemFlag(position, flag);\n                        self.enable();\n                    })\n                    .catch(function () {\n                        // rollback on the item flag\n                        self.navigator.setItemFlag(position, !flag);\n                        self.enable();\n                    });\n            }\n\n            /**\n             * Mark the current item for review\n             */\n            function flagCurrentItem() {\n                var context = testRunner.getTestContext();\n                if (self.getState('enabled') !== false) {\n                    flagItem(context.itemPosition, !context.itemFlagged);\n                }\n            }\n\n            /**\n             * Shows/hides the review panel\n             *\n             * @param [{Boolean} forcedState], true will show the panel\n             */\n            function togglePanel(forcedState) {\n                var isHidden = _.isUndefined(forcedState) ? self.navigator.is('hidden') : forcedState;\n                if (isHidden) {\n                    self.explicitlyHidden = false;\n                    self.navigator.show();\n                } else {\n                    self.explicitlyHidden = true;\n                    self.navigator.hide();\n                }\n                updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n            }\n\n            this.navigator = navigatorFactory(navigatorConfig, testMap, testContext)\n                .on('selected', function(position, previousPosition){\n                    previousItemPosition = previousPosition;\n                })\n                .on('jump', function (position) {\n                    if (self.getState('enabled') !== false) {\n                        self.disable();\n                        testRunner.jump(position, 'item');\n                    }\n                })\n                .on('flag', function (position, flag) {\n                    if (self.getState('enabled') !== false) {\n                        flagItem(position, flag);\n                    }\n                })\n                .render();\n\n            // restore current item in the navigator if movement not allowed\n            testRunner.on('alert.notallowed', function() {\n                self.navigator.select(previousItemPosition);\n            });\n\n            this.explicitlyHidden = false;\n\n            // register buttons in the toolbox component\n            this.toggleButton = this.getAreaBroker().getToolbox().createEntry(getToggleButtonData(this.navigator));\n            this.toggleButton.on('click', function (e) {\n                e.preventDefault();\n                testRunner.trigger('tool-reviewpanel');\n            });\n\n            this.flagItemButton = this.getAreaBroker().getToolbox().createEntry(getFlagItemButtonData(testContext));\n            this.flagItemButton.on('click', function (e) {\n                e.preventDefault();\n                testRunner.trigger('tool-flagitem');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.flag) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.flag, this.getName(), true), function () {\n                        testRunner.trigger('tool-flagitem');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-reviewpanel');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            if (!isPluginAllowed()) {\n                this.hide();\n            }\n\n            //disabled by default\n            this.disable();\n\n            togglePanel(testConfig.review.defaultOpen);\n\n            //change plugin state\n            testRunner\n                .on('render', function () {\n                    if (isPluginAllowed()) {\n                        self.show();\n                        updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n                    } else {\n                        self.hide();\n                    }\n                })\n                .on('loaditem', function () {\n                    var context = testRunner.getTestContext();\n                    var map = testRunner.getTestMap();\n\n                    if (isPluginAllowed()) {\n                        updateButton(self.flagItemButton, getFlagItemButtonData(context));\n                        self.navigator\n                            .update(map, context)\n                            .updateConfig({\n                                canFlag: !context.isLinear && context.options.markReview\n                            });\n                        self.show();\n                        updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n                    } else {\n                        self.hide();\n                    }\n                })\n                .on('enabletools', function () {\n                    if (isPluginAllowed()) {\n                        self.enable();\n                    }\n                })\n                .on('disabletools', function () {\n                    if (isPluginAllowed()) {\n                        self.disable();\n                    }\n                })\n                .on('tool-flagitem', function () {\n                    if (isPluginAllowed() && canFlag(testRunner)) {\n                        flagCurrentItem();\n                    }\n                })\n                .on('tool-reviewpanel', function () {\n                    if (isPluginAllowed() && self.getState('enabled')) {\n                        togglePanel();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n            var areaBroker = this.getAreaBroker();\n            var $panelContainer = areaBroker.getPanelArea();\n            $panelContainer.append(this.navigator.getElement());\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n            this.navigator.destroy();\n        },\n\n        /**\n         * Enables the button\n         */\n        enable: function enable() {\n            var testRunner = this.getTestRunner();\n            var testContext = testRunner.getTestContext();\n\n            this.flagItemButton.enable();\n            this.toggleButton.enable();\n            this.navigator.enable();\n            if (testContext.itemFlagged) {\n                this.flagItemButton.turnOn();\n            } else {\n                this.flagItemButton.turnOff();\n            }\n        },\n\n        /**\n         * Disables the button\n         */\n        disable: function disable() {\n            this.flagItemButton.disable();\n            this.flagItemButton.turnOff();\n\n            this.toggleButton.disable();\n\n            this.navigator.disable();\n        },\n\n        /**\n         * Shows the button\n         */\n        show: function show() {\n            var testRunner = this.getTestRunner();\n            if (canFlag(testRunner)) {\n                this.flagItemButton.show();\n            } else {\n                this.flagItemButton.hide();\n            }\n            this.toggleButton.show();\n\n            if (!this.explicitlyHidden) {\n                this.navigator.show();\n            } else {\n                this.navigator.hide();\n            }\n        },\n\n        /**\n         * Hides the button\n         */\n        hide: function hide() {\n            this.flagItemButton.hide();\n            this.toggleButton.hide();\n            this.navigator.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Skip\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/skip',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/messages',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, messages, buttonTpl){\n    'use strict';\n\n    /**\n     * The display of the skip\n     */\n    var buttonData = {\n        skip : {\n            control : 'skip',\n            title   : __('Skip  and go to the next item'),\n            icon    : 'external',\n            text    : __('Skip')\n        },\n        end : {\n            control : 'skip-end',\n            title   : __('Skip and go to the end of the test'),\n            icon    : 'external',\n            text    : __('Skip and end test')\n        }\n    };\n\n    /**\n     * Create the button based on the current context\n     * @param {Object} context - the test context\n     * @returns {jQueryElement} the button\n     */\n    var createElement = function createElement(context){\n        var dataType = context.isLast ? 'end' : 'skip';\n        return $(buttonTpl(buttonData[dataType]));\n    };\n\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {Object} context - the test context\n     */\n    var updateElement = function updateElement($element, context){\n        var dataType = context.isLast ? 'end' : 'skip';\n        if($element.data('control') !== buttonData[dataType].control){\n\n            $element.data('control', buttonData[dataType].control)\n                    .attr('title', buttonData[dataType].title)\n                    .find('.text').text(buttonData[dataType].text);\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'skip',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            var toggle = function toggle(){\n                var context = testRunner.getTestContext();\n                if(context.options.allowSkipping === true){\n                    self.show();\n                    return true;\n                }\n\n                self.hide();\n                return false;\n            };\n\n            function doSkip() {\n                testRunner.skip();\n            }\n\n            this.$element = createElement(testRunner.getTestContext());\n\n            this.$element.on('click', function(e){\n                var enable = _.bind(self.enable, self);\n                var context = testRunner.getTestContext();\n\n                e.preventDefault();\n\n                if(self.getState('enabled') !== false){\n                    self.disable();\n                    if(context.options.endTestWarning && context.isLast){\n                        testRunner.trigger(\n                            'confirm.endTest',\n                            messages.getExitMessage(\n                                __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\n                                'test', testRunner),\n                            doSkip, // if the test taker accept\n                            enable  // if the test taker refuse\n                        );\n                    } else {\n                        doSkip();\n                    }\n                }\n            });\n\n            toggle();\n            self.disable();\n\n            testRunner\n                .on('loaditem', function(){\n                    if(toggle()){\n                        updateElement(self.$element, testRunner.getTestContext());\n                    }\n                })\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * http://www.imsglobal.org/question/qtiv2p2p1/QTIv2p2p1-ASI-InformationModelv1p0/imsqtiv2p2p1_asi_v1p0_InfoModelv1p0.html#DerivedCharacteristic_ItemSessionControl.Attr_validateResponses\n *\n * This attribute controls the behaviour of delivery engines when the candidate\n * submits an invalid response. An invalid response is defined to be a response\n * which does not satisfy the constraints imposed by the interaction with which\n * it is associated (see interaction for more information). When\n * validateResponses is turned on (true) then the candidates are not allowed to\n * submit the item until they have provided valid responses for all\n * interactions. When turned off (false) invalid responses may be accepted by\n * the system. The value of this attribute is only applicable when the item is\n * in a testPart with individual submission mode (see Navigation and\n * Submission).\n */\n\ndefine('taoQtiTest/runner/plugins/navigation/validateResponses',[\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/currentItem'\n], function(_, __, pluginFactory, currentItemHelper) {\n    'use strict';\n\n    /**\n     * Plugin\n     * @returns {Object}\n     */\n    return pluginFactory({\n\n        /**\n         * Plugin name\n         * @type {String}\n         */\n        name: 'validateResponses',\n\n        /**\n         * Initialize plugin (called during runner's initialization)\n         * @returns {this}\n         */\n        init: function init() {\n            this.getTestRunner().before('move', function () {\n                var self = this;\n                var testContext = this.getTestContext();\n                var isInteracting = !this.getItemState(testContext.itemIdentifier, 'disabled');\n\n                if ( isInteracting && testContext.enableValidateResponses &&  testContext.validateResponses) {\n                    return new Promise(function (resolve, reject) {\n                        if(_.size(currentItemHelper.getDeclarations(self)) === 0){\n                            return resolve();\n                        }\n                        if (currentItemHelper.isAnswered(self, false)) {\n                            return resolve();\n                        }\n                        if (!self.getState('alerted.notallowed')) { // Only show one alert for itemSessionControl\n                            self.setState('alerted.notallowed', true);\n                            self.trigger(\n                                'alert.notallowed',\n                                __('A valid response to this item is required.'),\n                                function () {\n                                    self.trigger('resumeitem');\n                                    reject();\n                                    self.setState('alerted.notallowed', false);\n                                }\n                            );\n                        }\n                    });\n                }\n\n            });\n\n            return this;\n        }\n    });\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Warn the test taker before closing the browser window\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/warnBeforeLeaving',[\n    'i18n',\n    'taoTests/runner/plugin'\n], function (__, pluginFactory) {\n    'use strict';\n\n    /**\n     * There's only a few chance to have this message displayed.\n     * Most browsers doesn't support custom message anymore.\n     * See https://www.chromestatus.com/feature/5349061406228480\n     */\n    var warnMessage = __('Please confirm you want to leave the test.');\n\n    /**\n     * The beforeunload listener\n     * @param {Event} e\n     * @returns {String} the custom message (for some browser, just need to be a string)\n     */\n    var warnListener = function warnListener(e){\n        e.returnValue = warnMessage;\n        return warnMessage;\n    };\n\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n    return pluginFactory({\n\n        /**\n         * Plugin name\n         * @type {String}\n         */\n        name: 'warnBeforeLeaving',\n\n        /**\n         * Initialize plugin (called during runner's initialization)\n         */\n        init: function init() {\n            this.enable();\n        },\n\n        /**\n         * Destroy plugin (called during runner's destruction)\n         */\n        destroy : function destroy(){\n            this.disable();\n        },\n\n        /**\n         * Enables the warning\n         */\n        enable : function enable(){\n            window.addEventListener('beforeunload', warnListener);\n        },\n\n        /**\n         * Disables the warning\n         */\n        disable : function disable(){\n            window.removeEventListener('beforeunload', warnListener);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/security/disableRightClick',[\n    'taoTests/runner/plugin'\n], function (pluginFactory) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'disableRightClick',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var rightClickEvents = ['contextmenu', 'mousedown', 'mouseup'];\n\n            rightClickEvents.forEach(function(eventName) {\n                window.document.addEventListener(eventName, function disableRightClick(event) {\n                    if (event.button === 2) {\n                        event.preventDefault();\n                    }\n                });\n            });\n        }\n    });\n});\n\n","\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Answer Eliminator Plugin\n *\n * While the platform's answer eliminator works on a per-item base, this variation allows\n * answer elimination on a test level. Essentially it allows to add a class 'eliminable'\n * to a choice interaction, from there the aforementioned item-based behaviour and styling takes\n * over.\n *\n * Alternative styling will be on a per customer basis and should always be published as a recipe\n * in the theme-toolkit.\n *\n * @author Dieter Raber <dieter@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/answerElimination/eliminator',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin'\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory){\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'eliminator';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultConfig = {\n        // when hiding the buttons, don't remove existing eliminations\n        removeEliminationsOnClose: false,\n        // when showing the buttons, restore previously set eliminations\n        restoreEliminationsOnOpen: false\n    };\n\n\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var $container = testRunner.getAreaBroker().getContentArea().parent();\n            var testConfig = testRunner.getTestData().config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n            var config     = _.defaults(_.clone((testConfig.plugins || {})[pluginName]) || {}, defaultConfig);\n\n            // register the button in the toolbox\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control : 'eliminator',\n                title : __('Eliminate choices'),\n                icon : 'eliminate',\n                text : __('Answer Eliminator')\n            });\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isPluginEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-eliminator\n                return !!options.eliminator;\n            }\n\n            /**\n             * Is plugin activated ? if not, then we hide the plugin\n             */\n            function togglePluginButton() {\n                if (isPluginEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function togglePlugin() {\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                self.$choiceInteractions.toggleClass('eliminable');\n                if (isEliminable()) {\n                    enableEliminator();\n                } else {\n                    disableEliminator();\n                }\n            }\n\n            function isEliminable() {\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                return self.$choiceInteractions.hasClass('eliminable');\n            }\n\n            function enableEliminator() {\n                var $choices;\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                $choices = self.$choiceInteractions.find('.qti-choice');\n\n                self.button.turnOn();\n                self.trigger('start');\n\n                if(config.restoreEliminationsOnOpen) {\n                    $choices.each(function() {\n                        var input = this.querySelector('.real-label input');\n                        if(this.dataset.wasEliminated) {\n                            this.dataset.wasEliminated = null;\n                            this.classList.add('eliminated');\n                            input.setAttribute('disabled', 'disabled');\n                            input.checked = false;\n                        }\n                    });\n                }\n            }\n\n            function disableEliminator() {\n                var $choices;\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                $choices = self.$choiceInteractions.find('.qti-choice');\n\n                self.$choiceInteractions.removeClass('eliminable');\n                self.button.turnOff();\n                self.trigger('end');\n\n                $choices.each(function() {\n                    if(this.classList.contains('eliminated')) {\n                        this.dataset.wasEliminated = true;\n                        this.classList.remove('eliminated');\n                        this.querySelector('.real-label input').removeAttribute('disabled');\n                    }\n                });\n            }\n\n            //add a new mask each time the button is pressed\n            this.button.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger(actionPrefix + 'toggle');\n            });\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function (command, key) {\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key);\n                    }, {\n                        avoidInput: true\n                    });\n                });\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePluginButton)\n                .on('renderitem', function conditionalInit() {\n                    // show button only when in the presence of choice interactions\n                    self.$choiceInteractions = $container.find('.qti-choiceInteraction');\n                    if(!self.$choiceInteractions.length) {\n                        self.hide();\n                        return;\n                    }\n                    if (isPluginEnabled()) {\n                        self.show();\n                    }\n                })\n                .on('enabletools renderitem', function (){\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                    disableEliminator();\n                })\n\n                // commands that controls the plugin\n                .on(actionPrefix + 'toggle', function () {\n                    if (isPluginEnabled()) {\n                        togglePlugin();\n                    }\n                })\n                // Answer-eliminator and Answer-masking are mutually exclusive tools\n                .on('tool-answer-masking-toggle', function () {\n                    if (isEliminable()) {\n                        disableEliminator();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + pluginName);\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.button.hide();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/answerMasking/tpl/mask', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"answer-mask\\\">\\n    <span class=\\\"answer-mask-toggle\\\"></span>\\n</div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/answerMasking/answerMasking',[\n    'lodash',\n    'jquery',\n    'core/statifier',\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/tools/answerMasking/tpl/mask'\n], function(_, $, statifier, componentFactory, maskTpl) {\n    'use strict';\n\n    var ns = '.answerMasking';\n\n    /**\n     * @param {jQuery} $contentArea - DOM element containing the rendered item\n     */\n    return function answerMaskingFactory($contentArea) {\n        var answerMasking,\n            allMasks = [],\n\n            maskApi = {\n                /**\n                 * Toggle mask visibility\n                 * @returns {component}\n                 */\n                toggle: function toggle() {\n                    if (this.is('masked')) {\n                        return this.reveal();\n                    } else {\n                        return this.mask();\n                    }\n                },\n\n                /**\n                 * Show the choice under the current mask\n                 * @returns {component}\n                 */\n                reveal: function reveal() {\n                    var $container = this.getContainer();\n                    $container.removeClass('masked');\n                    $container.find('input').removeAttr('disabled');\n\n                    this.setState('masked', false);\n\n                    return this;\n                },\n\n                /**\n                 * Cover the whole choice with the mask\n                 * @returns {component}\n                 */\n                mask: function mask() {\n                    var $container = this.getContainer();\n                    $container.addClass('masked');\n                    $container.find('input').attr('disabled', 'disabled');\n\n                    this.setState('masked', true);\n\n                    return this;\n                }\n            };\n\n        /**\n         * Creates a ui/component to serve as a mask over a QTI Choice\n         * @param {jQuery} $container - the qti-choice element\n         * @returns {component}\n         */\n        function createMask($container) {\n            return componentFactory(maskApi)\n                .setTemplate(maskTpl)\n                .on('render', function() {\n                    var self = this,\n                        $component = this.getElement();\n\n                    $component.on('click' + ns, function(e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        self.toggle();\n                    });\n                })\n                .on('destroy', function() {\n                    var $component = this.getElement();\n                    $component.off(ns);\n                })\n                .init()\n                .render($container)\n                .mask();\n        }\n\n        /**\n         * The answer masking helper\n         */\n        answerMasking = {\n            /**\n             * Enable the answer masking functionality by creating masks over the Qti Choices\n             */\n            enable: function enable() {\n                var $choiceInteractions = $contentArea.find('.qti-choiceInteraction'),\n                    $qtiChoices = $contentArea.find('.qti-choice');\n\n                allMasks = [];\n\n                $choiceInteractions.addClass('maskable');\n\n                $qtiChoices.each(function () {\n                    var $choice = $(this);\n                    allMasks.push(createMask($choice));\n                });\n\n                this.setState('enabled', true);\n            },\n\n            /**\n             * Remove any answerMasking-related markup from the rendered item\n             */\n            disable: function disable() {\n                var $choiceInteractions = $contentArea.find('.qti-choiceInteraction');\n                $choiceInteractions.removeClass('maskable');\n\n                allMasks.forEach(function(mask) {\n                    mask.reveal(); // remove class on container\n                    mask.destroy();\n                });\n\n                allMasks = [];\n\n                this.setState('enabled', false);\n            },\n\n            /**\n             * Return the current state of the masks\n             * @returns {Boolean[]} - true if the choice is masked, false if the choice is revealed\n             */\n            getMasksState: function getMasksState() {\n                var state = allMasks.map(function (mask) {\n                    return mask.is('masked');\n                });\n                return state;\n            },\n\n            /**\n             * Restore a previously saved state for the masked choices\n             * @param {Boolean[]} state - array of boolean, most probably given by the getMasksState method\n             */\n            setMasksState: function setMasksState(state) {\n                state = state || [];\n\n                state.forEach(function (masked, index) {\n                    var mask = allMasks[index];\n\n                    if (_.isObject(mask) && _.isFunction(mask.reveal) && ! masked) {\n                        mask.reveal();\n                    }\n                });\n            }\n        };\n\n        statifier(answerMasking);\n\n        return answerMasking;\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/answerMasking/plugin',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/plugins/tools/answerMasking/answerMasking'\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, answerMaskingFactory) {\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'answer-masking';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Stores the masking state for each item in the test\n     * @type {Object}\n     */\n    var itemStates = {};\n\n    /**\n     * Default Configuration\n     */\n    var defaultConfig = {\n        restoreStateOnToggle: true,\n        restoreStateOnMove: true\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner = this.getTestRunner(),\n                testData = testRunner.getTestData() || {},\n                testConfig = testData.config || {},\n                pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {}, defaultConfig),\n                pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {},\n                $contentArea = this.getAreaBroker().getContentArea();\n\n            var answerMasking = answerMaskingFactory($contentArea);\n\n            function isPluginEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-answerMasking\n                return options.answerMasking && itemContainsChoiceInteraction();\n            }\n\n            function itemContainsChoiceInteraction() {\n                var $container = self.getAreaBroker().getContentArea().parent();\n                return $container.find('.qti-choiceInteraction').length;\n            }\n\n            function togglePluginButton() {\n                if (isPluginEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function togglePlugin() {\n                if (! answerMasking.getState('enabled')) {\n                    enableMasking();\n                } else {\n                    disableMasking();\n                }\n            }\n\n            function enableMasking() {\n                var testContext = testRunner.getTestContext(),\n                    itemId = testContext.itemIdentifier;\n\n                answerMasking.enable();\n                if (pluginConfig.restoreStateOnToggle) {\n                    answerMasking.setMasksState(itemStates[itemId]);\n                }\n                self.button.turnOn();\n                self.trigger('start');\n            }\n\n            function disableMasking() {\n                var testContext = testRunner.getTestContext(),\n                    itemId = testContext.itemIdentifier;\n\n                if (answerMasking.getState('enabled')) {\n                    itemStates[itemId] = answerMasking.getMasksState();\n                }\n\n                answerMasking.disable();\n                self.button.turnOff();\n                self.trigger('end');\n            }\n\n            // create buttons\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Answer Masking'),\n                icon: 'result-nok',\n                control: 'answer-masking',\n                text: __('Answer Masking')\n            });\n\n            // attach user events\n            this.button\n                .on('click', function(e) {\n                    e.preventDefault();\n                    testRunner.trigger(actionPrefix + 'toggle');\n                });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger(actionPrefix + 'toggle');\n                    }, { avoidInput: true, prevent: true });\n                }\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', function() {\n                    var testContext = testRunner.getTestContext(),\n                        itemId = testContext.itemIdentifier;\n\n                    if (! pluginConfig.restoreStateOnMove) {\n                        itemStates[itemId] = [];\n                    }\n\n                    togglePluginButton();\n                })\n                .on('enabletools renderitem', function () {\n                    togglePluginButton(); // we repeat this here as we need the rendered item markup in order to decide whether the plugin is enabled\n                    self.enable();\n                })\n                .on('beforeunloaditem', function() {\n                    disableMasking();\n                })\n                .on('disabletools unloaditem', function () {\n                    self.disable();\n                    disableMasking();\n                })\n                .on(actionPrefix + 'toggle', function () {\n                    if (isPluginEnabled()) {\n                        togglePlugin();\n                    }\n                })\n                // Answer-eliminator and Answer-masking are mutually exclusive tools\n                .on('tool-eliminator-toggle', function () {\n                    disableMasking();\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.button.hide();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/areaMasking/mask', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"mask\\\">\\n   <div class=\\\"inner\\\"></div>\\n   <div class=\\\"controls\\\">\\n        <a href=\\\"#\\\" class=\\\"view\\\"  title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Preview the covered area\", options) : helperMissing.call(depth0, \"__\", \"Preview the covered area\", options)))\n    + \"\\\"><span class=\\\"icon-preview\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"close\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close the mask\", options) : helperMissing.call(depth0, \"__\", \"Close the mask\", options)))\n    + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n   </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Create a movable and resizable element in order to mask areas.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/areaMasking/mask',[\n    'lodash',\n    'ui/movableComponent',\n    'tpl!taoQtiTest/runner/plugins/tools/areaMasking/mask'\n], function (_, movableComponent, areaMaskingTpl) {\n    'use strict';\n\n    var defaultConfig = {\n        previewDelay: 3000,\n        stackingScope: 'test-runner'\n    };\n\n    /**\n     * Creates a new masking component\n     * @returns {maskComponent} the component (uninitialized)\n     */\n    function maskingComponentFactory () {\n\n        /**\n         * @typedef {Object} maskComponent\n         */\n        var maskComponent = movableComponent({\n            /**\n             * Preview the content under the masked area\n             * @returns {maskComponent} chains\n             *\n             * @fires maskComponent#preview\n             */\n            preview : function preview(){\n                var self   = this;\n                var delay  = this.config.previewDelay || 1000;\n                if( this.is('rendered') && !this.is('disabled') && !this.is('previewing') ){\n                    this.setState('previewing', true)\n                        .trigger('preview');\n                    _.delay(function(){\n                        self.setState('previewing', false);\n                    }, delay);\n                }\n                return this;\n            }\n        }, defaultConfig);\n\n\n        maskComponent\n            .setTemplate(areaMaskingTpl)\n            .on('render', function(){\n                var self     = this;\n                var $element = this.getElement();\n\n                $element\n                    .on('click touchstart', '.view', function(e){\n                        e.preventDefault();\n                        self.preview();\n                    })\n                    .on('click touchstart', '.close', function(e){\n                        e.preventDefault();\n                        self.destroy();\n                    });\n            });\n\n        return maskComponent;\n    }\n\n    return maskingComponentFactory;\n});\n\n","\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Area Masking Plugin\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/areaMasking/areaMasking',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/tools/areaMasking/mask'\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory, maskComponent){\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'area-masking';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultConfig = {\n        max : 5,\n        foo : true\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var $container = testRunner.getAreaBroker().getContentArea().parent();\n            var testConfig = testRunner.getTestData().config || {};\n            var config     = _.defaults(_.clone((testConfig.plugins || {})[pluginName]) || {}, defaultConfig);\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n\n            function addMask() {\n                maskComponent()\n                    .on('render', function(){\n                        self.masks.push(this);\n                        self.button.turnOn();\n\n                        /**\n                         * @event areaMasking#maskadd\n                         */\n                        self.trigger('maskadd');\n                    })\n                    .on('destroy', function(){\n                        self.masks = _.without(self.masks, this);\n                        if(self.masks.length < config.max){\n                            self.enable();\n                        }\n                        if (self.masks.length === 0) {\n                            self.button.turnOff();\n                            self.trigger('close');\n                        }\n\n                        /**\n                         * @event areaMasking#maskclose\n                         */\n                        self.trigger('maskclose');\n                    })\n                    .init({\n                        x : self.masks.length * 10,\n                        y : self.masks.length * 10\n                    })\n                    .render($container);\n            }\n\n            //keep a ref to all masks\n            this.masks = [];\n\n            // register the element in the Toolbox\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control : 'area-masking',\n                text : __('Masking'),\n                title : __('Covers parts of the item'),\n                icon : 'eye-slash'\n            });\n\n            //add a new mask each time the button is pressed\n            this.button.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger(actionPrefix + 'toggle');\n            });\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function (command, key) {\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key);\n                    }, {\n                        avoidInput: true\n                    });\n                });\n            }\n\n            //start disabled\n            this.disable();\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext(),\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-areaMasking\n                return !!options.areaMasking;\n            }\n\n            /**\n             * Is plugin activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePlugin)\n                .on('enabletools renderitem', function (){\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                    //remove all masks\n                    _.invoke(self.masks, 'destroy');\n                })\n                // commands that controls the plugin\n                .on(actionPrefix + 'toggle', function () {\n                    if (isEnabled()) {\n                        if (self.masks.length === 0) {\n                            self.trigger('open');\n                        }\n                        if (self.masks.length < config.max) {\n                            addMask();\n                        } else if (config.max === 1) {\n                            _.invoke(self.masks, 'destroy');\n                        }\n                    }\n                });\n\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + pluginName);\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.button.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Calculator\n *\n * @author Sam <sam@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/calculator',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/calculator',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin'\n], function ($, _, __, hider, calculatorFactory, shortcut, namespaceHelper, pluginFactory){\n    'use strict';\n\n    var _default = {\n        height : 360,\n        width : 240,\n        top : 50,\n        left : 10,\n        stackingScope: 'test-runner'\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'calculator',\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var areaBroker = this.getAreaBroker();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginsConfig = testConfig.plugins || {};\n            var config = pluginsConfig.calculator || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n\n                //to be activated with the special category x-tao-option-calculator\n                return !!options.calculator;\n            }\n\n            /**\n             * Is calculator activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isEnabled()) {//allow calculator\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            /**\n             * Build the calculator component\n             * @param {Function} [calcTpl] - an optional alternative template for the calculator\n             */\n            function buildCalculator(calcTpl){\n                self.calculator = calculatorFactory(_.defaults({\n                    renderTo: self.$calculatorContainer,\n                    replace: true,\n                    draggableContainer: areaBroker.getContainer(),\n                    alternativeTemplate : calcTpl || null\n                }, _default)).on('show', function () {\n                    self.trigger('open');\n                    self.button.turnOn();\n                }).on('hide', function () {\n                    self.trigger('close');\n                    self.button.turnOff();\n                }).show();\n            }\n\n            /**\n             * Show/hide the calculator\n             */\n            function toggleCalculator() {\n                if (self.getState('enabled') !== false) {\n                    if (self.calculator) {\n                        //just show/hide the calculator widget\n                        if (self.calculator.is('hidden')) {\n                            self.calculator.show();\n                        } else {\n                            self.calculator.hide();\n                        }\n                    } else {\n                        //build calculator widget\n                        if(config.template){\n                            require(['tpl!' + config.template.replace(/\\.tpl$/, '')], function(calcTpl){\n                                buildCalculator(calcTpl);\n                            }, function(){\n                                //in case of error, display the default calculator:\n                                buildCalculator();\n                            });\n                        }else{\n                            buildCalculator();\n                        }\n\n                    }\n                }\n            }\n\n            //build element (detached)\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control : 'calculator',\n                title : __('Open Calculator'),\n                icon : 'table',\n                text : __('Calculator')\n            });\n            this.$calculatorContainer = $('<div class=\"widget-calculator\">');\n\n            //init calculator instance var, it will be created only necessary\n            this.calculator = null;\n\n            //attach behavior\n            this.button.on('click', function (e){\n                //prevent action if the click is made inside the form which is a sub part of the button\n                if($(e.target).closest('.widget-calculator').length){\n                    return;\n                }\n\n                e.preventDefault();\n                testRunner.trigger('tool-calculator');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-calculator');\n                    }, {\n                        avoidInput: true,\n                        allowIn: '.widget-calculator'\n                    });\n                }\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePlugin)\n                .on('enabletools renderitem', function (){\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                    if(self.calculator){\n                        //destroy calculator to create a new instance of calculator each time\n                        self.calculator.destroy();\n                        self.calculator = null;\n                    }\n                })\n                .on('tool-calculator', function () {\n                    if (isEnabled()) {\n                        toggleCalculator();\n                    }\n                });\n        },\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var areaBroker = this.getAreaBroker();\n            areaBroker.getContainer().append(this.$calculatorContainer);\n        },\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + this.getName());\n\n            this.$calculatorContainer.remove();\n            if(this.calculator){\n                this.calculator.destroy();\n            }\n        },\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.button.enable();\n        },\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.button.disable();\n            if(this.calculator){\n                this.calculator.hide();\n            }\n        },\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.button.show();\n        },\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.button.hide();\n            if(this.calculator){\n                this.calculator.hide();\n            }\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/comment/comment', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div data-control=\\\"qti-comment\\\" class=\\\"hidden\\\">\\n    <textarea data-control=\\\"qti-comment-text\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Your comment…\", options) : helperMissing.call(depth0, \"__\", \"Your comment…\", options)))\n    + \"\\\"></textarea>\\n    <button data-control=\\\"qti-comment-cancel\\\" class=\\\"btn-info small\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cancel\", options) : helperMissing.call(depth0, \"__\", \"Cancel\", options)))\n    + \"</button>\\n    <button data-control=\\\"qti-comment-send\\\" class=\\\"btn-info small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Send\", options) : helperMissing.call(depth0, \"__\", \"Send\", options)))\n    + \"</button>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Comment form\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/comment/comment',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'ui/stacker',\n    'util/shortcut',\n    'util/namespace',\n    'tpl!taoQtiTest/runner/plugins/tools/comment/comment'\n], function ($, __, pluginFactory, hider, stackerFactory, shortcut, namespaceHelper, commentTpl) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'comment',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n            var stacker = stackerFactory('test-runner');\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext();\n                return !!context.options.allowComment;\n            }\n\n            /**\n             * Can we comment ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            /**\n             * Show/hide the comment panel\n             */\n            function toggleComment() {\n                if (self.getState('enabled') !== false) {\n                    //just show/hide the form\n                    hider.toggle(self.$form);\n                    if (!hider.isHidden(self.$form)) {\n                        //reset the form on each display\n                        self.$input.val('').focus();\n                        self.button.turnOn();\n                        stacker.bringToFront(self.$form);\n                    } else {\n                        self.button.turnOff();\n                    }\n                }\n            }\n\n            // register button in toolbox\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control: 'comment',\n                title: __('Leave a comment'),\n                icon: 'tag',\n                text: __('Comment')\n            });\n\n            //get access to controls\n            this.button.on('render', function() {\n                self.$button = self.button.getElement();\n                self.$form = $(commentTpl()).appendTo(self.$button);\n                self.$input = self.$button.find('[data-control=\"qti-comment-text\"]');\n                self.$cancel = self.$button.find('[data-control=\"qti-comment-cancel\"]');\n                self.$submit = self.$button.find('[data-control=\"qti-comment-send\"]');\n\n                stacker.autoBringToFront(self.$form);\n\n                //hide the form without submit\n                self.$cancel.on('click', function () {\n                    hider.hide(self.$form);\n                    self.button.turnOff();\n                });\n\n                //submit the comment, then hide the form\n                self.$submit.on('click', function () {\n                    var comment = self.$input.val();\n\n                    if (comment) {\n                        self.disable();\n                        self.button.turnOff();\n\n                        testRunner.getProxy()\n                            .callTestAction('comment', {\n                                comment: comment\n                            })\n                            .then(function () {\n                                hider.hide(self.$form);\n                                self.enable();\n                            })\n                            .catch(function () {\n                                hider.hide(self.$form);\n                                self.enable();\n                            });\n                    }\n                });\n            });\n\n\n            //attach behavior\n            this.button.on('click', function (e) {\n                //prevent action if the click is made inside the form which is a sub part of the button\n                if ($(e.target).closest('[data-control=\"qti-comment\"]').length) {\n                    return;\n                }\n\n                e.preventDefault();\n                testRunner.trigger('tool-comment');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-comment');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePlugin)\n                .on('renderitem enabletools', function () {\n                    self.enable();\n                })\n                .on('unloaditem disabletools', function () {\n                    self.disable();\n                })\n                .on('tool-comment', function () {\n                    if (isEnabled()) {\n                        toggleComment();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            if (this.$form) {\n                hider.hide(this.$form);\n            }\n            this.button.disable();\n            this.button.turnOff();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            if (this.$form) {\n                hider.hide(this.$form);\n            }\n            this.button.hide();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/documentViewer/panel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"document-viewer-plugin hidden\\\">\\n    <div class=\\\"viewer-overlay\\\"></div>\\n    <div class=\\\"viewer-panel\\\">\\n        <div class=\\\"viewer-header\\\">\\n            <span class=\\\"viewer-title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            <span class=\\\"icon icon-close\\\"></span>\\n        </div>\\n        <div class=\\\"viewer-content\\\">\";\n  if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n        <div class=\\\"viewer-footer\\\"></div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : View a document\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/documentViewer/documentViewer',[\n    'jquery',\n    'lodash',\n    'ui/hider',\n    'ui/documentViewer',\n    'ui/documentViewer/providers/pdfViewer',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/tools/documentViewer/panel'\n], function ($, _, hider, viewerFactory, pdfViewer, pluginFactory, panelTpl) {\n    'use strict';\n\n    /**\n     * The name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'documentViewer';\n\n    /**\n     * Shows the panel, trigger the `panelshow` event\n     *\n     * @param plugin\n     */\n    function showPanel(plugin) {\n        hider.show(plugin.controls.$panel);\n        plugin.trigger('panelshow');\n        $(window).on('resize.' + plugin.getName(), _.debounce(_.partial(resizeViewer, plugin), 50));\n    }\n\n    /**\n     * Hides the panel, trigger the `panelhide` event\n     *\n     * @param plugin\n     */\n    function hidePanel(plugin) {\n        hider.hide(plugin.controls.$panel);\n        plugin.trigger('panelhide');\n        $(window).off('resize.' + plugin.getName());\n    }\n\n    /**\n     * Hides the panel if it is visible\n     *\n     * @param plugin\n     * @returns {Boolean} Returns `true` if the panel was visible and has been hidden\n     */\n    function hideIfVisible(plugin) {\n        var isVisible = !hider.isHidden(plugin.controls.$panel, true);\n        if (isVisible) {\n            hidePanel(plugin);\n        }\n        return isVisible;\n    }\n\n    /**\n     * Initializes the event handlers for the panel container\n     *\n     * @param plugin\n     */\n    function initPanelEvents(plugin) {\n        var namespace = '.' + plugin.getName();\n        var stopEvents = ['click', 'mousedown', 'mouseup', 'touchstart', 'touchend', 'keyup', 'keydow', 'keypress', 'scroll', 'drop'].join(namespace + ' ') + namespace;\n        var hideViewer = _.partial(hidePanel, plugin);\n\n        function stopPropagation(e) {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n        }\n\n        plugin.controls.$overlay\n            .off(namespace)\n            .on('click' + namespace, hideViewer)\n            .on(stopEvents, stopPropagation);\n\n        plugin.controls.$panel\n            .off(namespace)\n            .on('click' + namespace, '.icon-close', hideViewer)\n            .on(stopEvents, stopPropagation);\n    }\n\n    /**\n     * Resizes the viewer to fit the panel content area\n     * @param plugin\n     */\n    function resizeViewer(plugin) {\n        var $content = plugin.controls.$content;\n        plugin.viewer.setSize($content.width(), $content.height());\n    }\n\n    // all document viewers need to be registered\n    viewerFactory.registerProvider('pdf', pdfViewer);\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var $panel = $(panelTpl());\n\n            /**\n             * @param {Object} data\n             * @param {String} data.label - document title\n             * @param {String} data.document - document url\n             */\n            function displayViewer(data) {\n                if (self.getState('enabled') !== false) {\n                    showPanel(self);\n                    self.controls.$title.text(data.label);\n                    resizeViewer(self);\n                    self.viewer.load(data.document, 'pdf');\n                }\n            }\n\n            this.controls = {\n                $panel: $panel,\n                $overlay: $panel.find('.viewer-overlay'),\n                $title: $panel.find('.viewer-title'),\n                $content: $panel.find('.viewer-content')\n            };\n\n            this.viewer = viewerFactory({\n                renderTo: this.controls.$content,\n                replace: true,\n                fitToWidth: true,\n                allowSearch: true\n            });\n\n            //update plugin state based on changes\n            testRunner\n                .on('renderitem enabletools', function () {\n                    self.enable();\n                })\n                .on('renderitem', function () {\n                    self.getAreaBroker().getContentArea()\n                        .append(self.controls.$panel)\n                        .off('.' + self.getName())\n                        .on('viewDocument.' + self.getName(), function (event) {\n                            var data = event.originalEvent.detail;\n                            displayViewer(data);\n                        });\n                    initPanelEvents(self);\n                })\n                .on('move', function () {\n                    hideIfVisible(self);\n                })\n                .on('skip', function () {\n                    hideIfVisible(self);\n                })\n                .on('unloaditem disabletools', function () {\n                    self.disable();\n                })\n                .on('tool-documentViewer', function(data) {\n                    displayViewer(data);\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.getAreaBroker().getContentArea().off('.' + this.getName());\n\n            if (this.viewer) {\n                this.viewer.destroy();\n            }\n\n            if (this.controls.$panel) {\n                this.controls.$panel.remove();\n            }\n\n            this.viewer = null;\n            this.controls = {};\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            hideIfVisible(this);\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            hideIfVisible(this);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n/**\n * This plugin allows the test taker to select text inside an item.\n * Highlight is preserved when navigating between items\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/highlighter/highlighter',[\n    'lodash',\n    'jquery',\n    'ui/highlighter'\n], function (\n    _,\n    $,\n    highlighterFactory\n) {\n    'use strict';\n    var selection;\n\n    if (!window.getSelection) throw new Error('Browser does not support getSelection()');\n\n    selection = window.getSelection();\n\n    /**\n     * Returns an array of active ranges.\n     * If browser doesn't support multiple Ranges, returns only the first range\n     * see note on https://w3c.github.io/selection-api/#methods\n     *\n     * @returns {Range[]}\n     */\n    function getAllRanges() {\n        var i, allRanges = [];\n\n        for (i = 0; i < selection.rangeCount; i++) {\n            allRanges.push(selection.getRangeAt(i));\n        }\n        return allRanges;\n    }\n\n    /**\n     * The highlighter Factory\n     */\n    return function(testRunner) {\n\n        /**\n         * Are we in highlight mode, meaning that each new selection is automatically highlighted\n         * without having to press any button\n         * @type {boolean}\n         */\n        var isHighlighting = false;\n\n        /**\n         * Store, for each item, an array containing the its highlight index\n         * @type {Object}\n         */\n        var itemsHighlights = {};\n\n        /**\n         * The helper that does the highlight magic\n         */\n        var highlightHelper = highlighterFactory({\n            className: 'txt-user-highlight',\n            containerSelector: '.qti-itemBody'\n        });\n\n        // add event to automatically highlight the recently made selection if needed\n        $(document).on('mouseup.highlighter', function() {\n            if (isHighlighting && !selection.isCollapsed) {\n                highlightHelper.highlightRanges(getAllRanges());\n                selection.removeAllRanges();\n            }\n        });\n\n        /**\n         * The highlighter instance\n         */\n        return {\n            /**\n             * toggle highlighting mode on and off\n             * @param {Boolean} bool - wanted state\n             */\n            toggleHighlighting: function toggleHighlighting(bool) {\n                isHighlighting = bool;\n                if (isHighlighting) {\n                    testRunner.trigger('plugin-start.highlighter');\n                } else {\n                    testRunner.trigger('plugin-end.highlighter');\n                }\n            },\n\n            /**\n             * Either highlight the current or selection, or toggle highlighting mode\n             */\n            trigger: function trigger() {\n                if (!isHighlighting) {\n                    if (!selection.isCollapsed) {\n                        testRunner.trigger('plugin-start.highlighter');\n                        highlightHelper.highlightRanges(getAllRanges());\n                        testRunner.trigger('plugin-end.highlighter');\n                        selection.removeAllRanges();\n                    } else {\n                        this.toggleHighlighting(true);\n                    }\n                } else {\n                    this.toggleHighlighting(false);\n                }\n            },\n\n            /**\n             * save the highlight index for the current item\n             * @param itemId\n             */\n            saveHighlight: function saveHighlight(itemId) {\n                var index = highlightHelper.getHighlightIndex();\n                if (index && index.length > 0) {\n                    itemsHighlights[itemId] = index;\n                }\n            },\n\n\n            /**\n             * restore the highlight index on the current item\n             * @param itemId\n             */\n            restoreHighlight: function restoreHighlight(itemId) {\n                var index = itemsHighlights[itemId];\n                if (index && index.length > 0) {\n                    highlightHelper.highlightFromIndex(index);\n                }\n            },\n\n            /**\n             * remove all highlights\n             */\n            clearHighlights: function clearHighlights() {\n                highlightHelper.clearHighlights();\n                selection.removeAllRanges();\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Text Highlighter\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/highlighter/plugin',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/plugins/tools/highlighter/highlighter'\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, highlighterFactory) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'highlighter',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            var highlighter = highlighterFactory(testRunner);\n\n            // create buttons\n            this.buttonMain = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Highlight Text'),\n                icon: 'text-marker',\n                control: 'highlight-trigger',\n                text: __('Highlight')\n            });\n\n            this.buttonRemove = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Clear all active highlights'),\n                icon: 'result-nok',\n                control: 'highlight-clear',\n                text: __('Clear Highlights')\n            });\n\n            // attach user events\n            this.buttonMain\n                .on('mousedown', function(e) { // using 'mousedown' instead of 'click' to avoid losing current selection\n                    e.preventDefault();\n                    testRunner.trigger('tool-highlight');\n                });\n\n            this.buttonRemove\n                .on('click', function(e) {\n                    e.preventDefault();\n                    testRunner.trigger('tool-highlight-remove');\n                });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-highlight');\n                    }, { avoidInput: true, prevent: true });\n                }\n            }\n\n            //start disabled\n            this.disable();\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-highlighter\n                return !!options.highlighter;\n            }\n\n            /**\n             * Is plugin activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePlugin)\n                .on('enabletools renderitem', function () {\n                    self.enable();\n                })\n                .on('renderitem', function() {\n                    var testContext = testRunner.getTestContext();\n                    highlighter.restoreHighlight(testContext.itemIdentifier);\n                })\n                .on('beforeunloaditem', function() {\n                    var testContext = testRunner.getTestContext();\n                    highlighter.saveHighlight(testContext.itemIdentifier);\n                })\n                .on('disabletools unloaditem', function () {\n                    self.disable();\n                    highlighter.toggleHighlighting(false);\n                })\n                .on('tool-highlight', function () {\n                    if (isEnabled()) {\n                        highlighter.trigger();\n                    }\n                })\n                .on('tool-highlight-remove', function () {\n                    highlighter.clearHighlights();\n                })\n                .on('plugin-start.highlighter', function() {\n                    self.buttonMain.turnOn();\n                })\n                .on('plugin-end.highlighter', function() {\n                    self.buttonMain.turnOff();\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n            $(document).off('.highlighter');\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.buttonMain.enable();\n            this.buttonRemove.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.buttonMain.disable();\n            this.buttonRemove.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.buttonMain.show();\n            this.buttonRemove.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.buttonMain.hide();\n            this.buttonRemove.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : item Theme Switcher\n *\n * @author\n */\ndefine('taoQtiTest/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/store',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'ui/themes',\n    'util/shortcut',\n    'util/namespace'\n], function ($, _, __, storeFactory, pluginFactory, hider, themeHandler, shortcut, namespaceHelper) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'itemThemeSwitcher',\n\n        /**\n         * Installation of the plugin (called before init)\n         */\n        install: function install() {\n            var self = this;\n            //the storechange event is fired early (before runner's init is done)\n            //so we attach the handler early\n            var testRunner = this.getTestRunner();\n            testRunner.on('storechange', function handleStoreChange() {\n                self.shouldClearStorage = true;\n            });\n        },\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n            var themesConfig = themeHandler.get('items') || {};\n            var state = {\n                availableThemes: [],\n                defaultTheme: '',\n                selectedTheme: ''\n            };\n            var allMenuEntries = [];\n\n            /**\n             * Load the selected theme\n             * @param themeId\n             */\n            function changeTheme(themeId) {\n                var $qtiItem = $('.qti-item');\n                state.selectedTheme = themeId;\n\n                if ($qtiItem) {\n                    _.defer(function(){\n                        $qtiItem.trigger('themechange', [state.selectedTheme]);\n                    });\n                }\n                if (self.storage) {\n                    self.storage.setItem('itemThemeId', themeId);\n                }\n            }\n\n            //init plugin state\n            if (themesConfig) {\n                if (themesConfig.default) {\n                    state.defaultTheme = themesConfig.default;\n                    state.selectedTheme = themesConfig.default;\n                }\n                if (themesConfig.available) {\n                    _.forEach(themesConfig.available, function (theme) {\n                        state.availableThemes.push({\n                            id: theme.id,\n                            label: theme.name\n                        });\n                    });\n                }\n            }\n\n            // register toolbox button\n            this.menuButton = this.getAreaBroker().getToolbox().createMenu({\n                control: 'color-contrast',\n                title: __('Change the current color preset'),\n                icon: 'contrast',\n                text: __('Contrast')\n            });\n\n            this.menuButton.on('click', function (e) {\n                e.preventDefault();\n                testRunner.trigger('tool-themeswitcher-toggle');\n            });\n\n\n            // register menu entries\n            state.availableThemes.forEach(function (theme) {\n                var themeEntry = self.getAreaBroker().getToolbox().createEntry({\n                    control: theme.id,\n                    title: theme.label,\n                    icon: 'preview',\n                    text: __(theme.label)\n                });\n\n                themeEntry.setMenuId('color-contrast');\n\n                themeEntry.on('click', function(e) {\n                    var themeId = this.config.control;\n                    e.preventDefault();\n\n                    self.menuButton.turnOffAll();\n                    this.turnOn();\n\n                    changeTheme(themeId);\n                });\n\n                if (state.defaultTheme === theme.id) {\n                    themeEntry.on('render', function() {\n                        this.turnOn();\n                    });\n                }\n                allMenuEntries.push(themeEntry);\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-themeswitcher-toggle');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', function() {\n                    self.show();\n                })\n                .on('renderitem', function () {\n                    self.enable();\n                    changeTheme(state.selectedTheme);\n                })\n                .on('enabletools', function() {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function () {\n                    self.disable();\n                })\n                .on('tool-themeswitcher-toggle', function () {\n                    if (self.getState('enabled') !== false) {\n                        self.menuButton.toggleMenu();\n                    }\n                });\n\n            return storeFactory('itemThemeSwitcher-' + testRunner.getConfig().serviceCallId)\n                .then(function (itemThemesStore) {\n                    if (self.shouldClearStorage) {\n                        return itemThemesStore.clear().then(function () {\n                            return itemThemesStore;\n                        });\n                    }\n                    return itemThemesStore;\n                }).then(function (itemThemesStore) {\n                    testRunner\n                        .after('renderitem enableitem', function () {\n                            self.storage = itemThemesStore;\n\n                            self.storage.getItem('itemThemeId')\n                                .then(function (itemThemeId) {\n                                    if (itemThemeId && state.selectedTheme !== itemThemeId) {\n                                        changeTheme(itemThemeId);\n\n                                        allMenuEntries.forEach(function (menuEntry) {\n                                            if (menuEntry.getId() === itemThemeId) {\n                                                menuEntry.turnOn();\n                                            } else {\n                                                menuEntry.turnOff();\n                                            }\n                                        });\n                                    }\n                                });\n                        })\n\n                        .before('finish', function() {\n                            return new Promise(function(resolve) {\n                                self.storage.removeStore()\n                                    .then(resolve)\n                                    .catch(resolve);\n                            });\n                        });\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.menuButton.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.menuButton.disable();\n\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.menuButton.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.menuButton.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * A compound mask is a mask built with multiple ui/components that interacts with each other.\n * The compound mask itself is not a ui/component but mimic most of its API.\n *\n * Most mask transformations (resize, drag) are achieved by updating a very simple transform model (position, dimensions)\n * which is latter applied to the actual individual components at a proper time\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/lineReader/compoundMask',[\n    'jquery',\n    'lodash',\n    'core/statifier',\n    'core/eventifier',\n    'ui/component',\n    'ui/component/placeable',\n    'ui/component/draggable',\n    'ui/component/resizable',\n    'ui/component/stackable'\n], function(\n    $,\n    _,\n    statifier,\n    eventifier,\n    componentFactory,\n    makePlaceable,\n    makeDraggable,\n    makeResizable,\n    makeStackable\n) {\n    'use strict';\n\n    var defaultDimensions = {\n        outerWidth:  600,\n        outerHeight: 400,\n        innerWidth:  500,\n        innerHeight: 20\n    };\n    var defaultPosition = {\n        outerX: 0,\n        outerY: 0,\n        innerX: 50,\n        innerY: 50\n    };\n    var defaultOptions = {\n        dragMinWidth: 10,\n        dragMinHeight: 10,\n        resizeHandleSize: 10,\n        innerDragHeight: 20\n    };\n    var stackingOptions = {\n        stackingScope: 'test-runner'\n    };\n    var constrains;\n\n    /**\n     * @param {Object} options\n     * @param {Number} options.resizeHandleSize - size of the resize handlers on each resizable edge\n     * @param {Number} options.dragMinWidth - minimal width for the draggable area of each component.\n     * @param {Number} options.dragMinHeight - minimal height for the draggable area of each component.\n     * @param {Number} options.innerDragHeight - height of the inner window drag handle\n     * @param {Object} dimensions\n     * @param {Number} dimensions.outerWidth - overall mask width\n     * @param {Number} dimensions.outerHeight - overall mask height\n     * @param {Number} dimensions.innerWidth - inner window width\n     * @param {Number} dimensions.innerHeight - inner window height\n     * @param {Number} position\n     * @param {Number} position.outerX - overall mask x\n     * @param {Number} position.outerY - overall mask y\n     * @param {Number} position.innerX - inner window mask x\n     * @param {Number} position.innerY - inner window mask y\n     */\n    return function compoundMaskFactory(options, dimensions, position) {\n        var compoundMask,\n            allParts = {},\n            innerDrag,\n            closer,\n            visualGuides = {};\n\n        /**\n         * ============================================\n         * Definition of Mask & Overlay component types\n         * ============================================\n         */\n\n        /**\n         * Create a mask component. They are used for masking (obviously) but also resizing the compound mask\n         * @param {Object} maskConfig\n         * @param {String} maskConfig.id\n         * @param {Function} maskConfig.place - size and position the mask according to the transform model\n         * @param {Function} maskConfig.placeOverlay - size and position the overlay according to the transform model\n         * @param {Function} maskConfig.beforeResize - used to set the resize limit depending on which edge the resizing occurs\n         * @param {Function} maskConfig.onResize - how the resize affect the transform model\n         * @param {Object} maskConfig.edges - Interact configuration to specify which edges can be used for resizing\n         * @param {Number} maskConfig.minWidth\n         * @param {Number} maskConfig.minHeight\n         */\n        function createMask(maskConfig) {\n            var mask,\n                maskAPI = {\n                    place: maskConfig.place,\n                    placeOverlay: maskConfig.placeOverlay,\n\n                    styleResizableEdges: function styleResizableEdges() {\n                        var $element = this.getElement();\n                        _.forOwn(this.config.edges, function (isResizable, edgeId) {\n                            if (isResizable) {\n                                $element.addClass('border-' + edgeId);\n                            }\n                        });\n                    }\n                };\n\n            mask = componentFactory(maskAPI, maskConfig);\n            makeResizable(mask);\n            makeStackable(mask, stackingOptions);\n\n            return mask\n                .on('render', function() {\n                    var $element = this.getElement();\n\n                    this.styleResizableEdges();\n\n                    $element\n                        .addClass('line-reader-mask ' + maskConfig.id)\n                        .on('mousedown', function() {\n                            bringAllToFront();\n                        });\n\n                    // uncomment this to see what's going on with masks:\n                    // $element.css({ border: '1px solid olive'});\n                })\n                .on('resizestart', function () {\n                    innerDrag.hide();\n                    closer.hide();\n                    invokeOnOverlays('hide');\n                    invokeOnMasks('setState', ['resizing', true]);\n                })\n                .on('beforeresize', maskConfig.beforeResize || _.noop)\n                .on('resize', maskConfig.onResize || _.noop)\n                .on('resizeend', function () {\n                    applyTransformsToOverlays();\n                    applyTransformsToInnerDrag();\n                    applyTransformsToCloser();\n\n                    invokeOnMasks('setState', ['resizing', false]);\n                    invokeOnOverlays('show');\n                    innerDrag.show();\n                    closer.show();\n                })\n                .init();\n        }\n\n\n        /**\n         * Create a overlay component. Overlay are invisible and are used for dragging.\n         * When clicked, the whole mask is hidden and only the overlay is displayed, after being resized to fit the whole mask surface\n         * this allows for performance improvement as well as giving the dragged element proper dragging boundaries.\n         * Also, visual guides are added, like a fake inner window, during the drag\n         * @param {Object} overlayConfig\n         * @param {String} overlayConfig.id\n         */\n        function createOverlay(overlayConfig) {\n            var overlay,\n                overlayAPI = {\n                    transformOverlay: function transformOverlay() {\n                        var $element = this.getElement();\n\n                        this._sizeBackup = this.getSize();\n                        this._posBackup = this.getPosition();\n\n                        this.setSize(dimensions.outerWidth, dimensions.outerHeight)\n                            .moveTo(position.outerX, position.outerY);\n                        $element.addClass('moving');\n\n                        this.setState('transformed', true);\n                    },\n\n                    restoreOverlay: function restoreOverlay() {\n                        var $element = this.getElement();\n\n                        if (this.is('transformed')) {\n\n                            this.setSize(this._sizeBackup.width, this._sizeBackup.height)\n                                .moveTo(this._posBackup.x, this._posBackup.y);\n                            $element.removeClass('moving');\n\n                            this._sizeBackup = null;\n                            this._posBackup = null;\n\n                            this.setState('transformed', false);\n                        }\n                    },\n\n                    appendVisualGuides: function appendVisualGuides() {\n                        var $element = this.getElement(),\n                            borderWidth = 1, // this mirror the $lrBorderWidth css variable\n                            borderOffset = borderWidth * 2;\n\n                        $element.append(visualGuides.$maskBg);\n                        $element.append(visualGuides.$innerWindow);\n\n                        visualGuides.$maskBg.css({\n                            width:  dimensions.outerWidth - borderOffset,\n                            height: dimensions.outerHeight - borderOffset,\n                            'border-top-width':     dimensions.topHeight - borderOffset,\n                            'border-right-width':   dimensions.rightWidth - borderOffset,\n                            'border-bottom-width':  dimensions.bottomHeight - borderOffset,\n                            'border-left-width':    dimensions.leftWidth - borderOffset\n                        });\n\n                        visualGuides.$innerWindow.css({\n                            width:  dimensions.innerWidth,\n                            height: dimensions.innerHeight,\n                            left:   dimensions.leftWidth - borderOffset,\n                            top:    dimensions.topHeight - borderOffset\n                        });\n                    },\n\n                    removeVisualGuides: function removeVisualGuides() {\n                        visualGuides.$maskBg.remove();\n                        visualGuides.$innerWindow.remove();\n                    }\n                };\n\n            overlay = componentFactory(overlayAPI, overlayConfig);\n            makeDraggable(overlay);\n            makeStackable(overlay, stackingOptions);\n\n            return overlay\n                .on('render', function() {\n                    var self = this,\n                        $element = this.getElement(),\n                        // captures touch and mouse\n                        // also fixes issue with IE not capturing 'mousedown' etc\n                        pointerEventsPrefix = window.PointerEvent ? 'pointer' : 'mouse';\n\n\n                    $element\n                        .addClass('line-reader-overlay ' + overlayConfig.id)\n                        .on(pointerEventsPrefix + 'down', function() {\n                            bringAllToFront();\n                            self.transformOverlay();\n                        })\n                        .on(pointerEventsPrefix + 'up', function() {\n                            self.restoreOverlay();\n                        });\n\n                    // uncomment this to see what's going on with overlays:\n                    // $element.css({ opacity: 0.5, 'background-color': 'yellow', border: '1px solid brown '});\n                })\n                .on('dragstart', function() {\n                    innerDrag.hide();\n                    closer.hide();\n                    invokeOnMasks('hide');\n                    this.appendVisualGuides();\n                })\n                .on('dragmove', function moveAllPartsTogether(xOffsetRelative, yOffsetRelative) {\n                    // update the transform model\n                    position.outerX += xOffsetRelative;\n                    position.outerY += yOffsetRelative;\n                    position.innerX += xOffsetRelative;\n                    position.innerY += yOffsetRelative;\n                })\n                .on('dragend', function() {\n                    this.removeVisualGuides();\n                    // although they are already display, calling show() again on the overlays\n                    // will force their z-Index at the top of the stack\n                    invokeOnAll('show');\n                    innerDrag.show();\n                    closer.show();\n\n                    // apply the new transform model\n                    applyTransforms();\n                })\n                .init();\n        }\n\n\n        /**\n         * ==========================\n         * Inner Drag Handle & Closer\n         * ==========================\n         */\n\n        /**\n         * This handle allows to drag the inner window\n         */\n        function createInnerDragHandle() {\n            // uncomment this (and a few lines below) if debugging is needed:\n            // var $boundingBox = $('<div>').css({ position: 'fixed', 'box-sizing': 'border-box', border: '1px solid red' });\n\n            innerDrag = componentFactory();\n\n            makeStackable(innerDrag, stackingOptions);\n            makeDraggable(innerDrag, {\n                dragRestriction: function dragRestriction() {\n                    var fixedXY = allParts.nw.mask.getElement().offset(),\n                        rect;\n\n                    rect = {\n                        x: fixedXY.left + constrains.minWidth,\n                        y: fixedXY.top + (constrains.minHeight + dimensions.innerHeight + options.resizeHandleSize),\n                        width: dimensions.outerWidth - (constrains.minWidth * 2 ),\n                        height: dimensions.outerHeight -\n                            (dimensions.innerHeight + constrains.minHeight + constrains.minBottomHeight - options.innerDragHeight)\n                    };\n\n                    // uncomment to see what's going on:\n                    // allParts.ne.mask.getContainer().append($boundingBox);\n                    // $boundingBox.css({ width: rect.width, height: rect.height, top: rect.y, left: rect.x });\n\n                    return rect;\n                }\n            })\n                .on('render', function() {\n                    var $element = this.getElement(),\n                        $dragIcon = $('<div>', {\n                            'class': 'icon icon-move'\n                        });\n\n                    $element.addClass('line-reader-inner-drag');\n                    $element.append($dragIcon);\n                    $element.on('mousedown', function(e) {\n                        e.stopPropagation();\n                        bringAllToFront();\n                    });\n                })\n                .on('dragstart', function() {\n                    closer.hide();\n                    invokeOnOverlays('hide');\n                    invokeOnMasks('setState', ['resizing', true]);\n                })\n                .on('dragmove', function(xOffsetRelative, yOffsetRelative) {\n                    position.innerX += xOffsetRelative;\n                    position.innerY += yOffsetRelative;\n\n                    dimensions.leftWidth += xOffsetRelative;\n                    dimensions.topHeight += yOffsetRelative;\n\n                    dimensions.rightWidth   -= xOffsetRelative;\n                    dimensions.bottomHeight -= yOffsetRelative;\n\n                    applyTransformsToMasks();\n                })\n                .on('dragend', function() {\n                    invokeOnOverlays('show');\n                    innerDrag.bringToFront();\n                    closer.show();\n                    invokeOnMasks('setState', ['resizing', false]);\n\n                    applyTransformsToOverlays();\n                })\n                .init();\n        }\n\n        /**\n         * Close button for the compound mask\n         */\n        function createCloser() {\n            closer = componentFactory();\n\n            makeStackable(closer, stackingOptions);\n            makePlaceable(closer)\n                .on('render', function() {\n                    var self = this,\n                        $element = this.getElement(),\n                        $closeIcon = $('<div>', {\n                            'class': 'icon icon-result-nok'\n                        });\n\n                    $element.append($closeIcon);\n                    $element.addClass('line-reader-closer');\n\n                    $element.on('mousedown', function() {\n                        bringAllToFront();\n                    });\n\n                    $element.on('click', function(e) {\n                        e.stopPropagation();\n                        self.trigger('click');\n                    });\n                })\n                .init();\n        }\n\n        /**\n         * =================\n         * Utility functions\n         * =================\n         */\n        function bringAllToFront() {\n            invokeOnAll('bringToFront');\n            innerDrag.bringToFront();\n            closer.bringToFront();\n        }\n\n        function invokeOnAll(fn, args) {\n            invokeOnMasks(fn, args);\n            invokeOnOverlays(fn, args);\n        }\n\n        function invokeOnMasks(fn, args) {\n            invokeOn('mask', fn, args);\n        }\n\n        function invokeOnOverlays(fn, args) {\n            invokeOn('overlay', fn, args);\n        }\n\n        /**\n         * Invoke a method on all compound mask parts, whether mask or overlays\n         * @param {String} target - mask | overlay\n         * @param {String} fn - the name of the method to invoke\n         * @param {*[]} args - arguments passed on invoke\n         */\n        function invokeOn(target, fn, args) {\n            _.forOwn(allParts, function(part) {\n                if (_.isObject(part[target]) && _.isFunction(part[target][fn])) {\n                    part[target][fn].apply(part[target], args);\n                }\n            });\n        }\n\n        /**\n         * =================================\n         * Transform model related functions\n         * =================================\n         */\n\n        function applyTransforms() {\n            applyTransformsToMasks();\n            applyTransformsToOverlays();\n            applyTransformsToInnerDrag();\n            applyTransformsToCloser();\n        }\n\n        function applyTransformsToMasks() {\n            invokeOnMasks('place');\n        }\n\n        function applyTransformsToOverlays() {\n            _.forOwn(allParts, function(part) {\n                part.mask.placeOverlay(part.overlay);\n            });\n        }\n\n        function applyTransformsToInnerDrag() {\n            if (innerDrag) {\n                innerDrag\n                    .setSize(dimensions.innerWidth, options.innerDragHeight)\n                    .moveTo(\n                        position.innerX,\n                        position.innerY + dimensions.innerHeight + options.resizeHandleSize\n                    );\n            }\n        }\n\n        function applyTransformsToCloser() {\n            if (closer) {\n                closer\n                    .setSize(\n                        constrains.minWidth - options.resizeHandleSize,\n                        constrains.minHeight - options.resizeHandleSize\n                    )\n                    .moveTo(\n                        position.outerX + dimensions.outerWidth - constrains.minWidth + 3, // manual adjustment so it looks better\n                        position.outerY + options.resizeHandleSize\n                    );\n            }\n        }\n\n        /**\n         * Check that the given transform model respect the current constrains.\n         * If not, correct them\n         */\n        function correctTransforms() {\n            if (dimensions.topHeight < constrains.minHeight) {\n                dimensions.topHeight = constrains.minHeight;\n                position.innerY = position.outerY + constrains.minHeight;\n            }\n            if (dimensions.innerHeight < constrains.minHeight) {\n                dimensions.innerHeight = constrains.minHeight;\n            }\n            if (dimensions.bottomHeight < constrains.minBottomHeight) {\n                dimensions.bottomHeight = constrains.minBottomHeight;\n            }\n            dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + dimensions.bottomHeight;\n\n            if (dimensions.leftWidth < constrains.minWidth) {\n                dimensions.leftWidth = constrains.minWidth;\n                position.innerX = position.outerX + constrains.minWidth;\n            }\n            if (dimensions.innerWidth < constrains.minWidth) {\n                dimensions.innerWidth = constrains.minWidth;\n            }\n            if (dimensions.rightWidth < constrains.minWidth) {\n                dimensions.rightWidth = constrains.minWidth;\n            }\n            dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + dimensions.rightWidth;\n        }\n\n        /**\n         * Update the transform model during a resize affecting the top height\n         * @param {Number} newHeight\n         * @param {Number} newY\n         * @param {Boolean} fromTop - if the resize occurs from the top\n         */\n        function setTopHeight(newHeight, newY, fromTop) {\n            dimensions.topHeight = newHeight;\n\n            if (fromTop) {\n                dimensions.outerHeight = newHeight + dimensions.innerHeight + dimensions.bottomHeight;\n                position.outerY = newY;\n            } else {\n                dimensions.innerHeight = dimensions.outerHeight - newHeight - dimensions.bottomHeight;\n                position.innerY = position.outerY + newHeight;\n            }\n        }\n\n        /**\n         * Update the transform model during a resize affecting the right width\n         * @param {Number} newWidth\n         * @param {Number} newX\n         * @param {Boolean} fromLeft - if the resize occurs from the left\n         */\n        function setRightWidth(newWidth, newX, fromLeft) {\n            dimensions.rightWidth = newWidth;\n\n            if (fromLeft) {\n                dimensions.innerWidth = newX - position.innerX;\n            } else {\n                dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + newWidth;\n            }\n        }\n\n        /**\n         * Update the transform model during a resize affecting the bottom height\n         * @param {Number} newHeight\n         * @param {Number} newY\n         * @param {Boolean} fromTop - if the resize occurs from the top\n         */\n        function setBottomHeight(newHeight, newY, fromTop) {\n            dimensions.bottomHeight = newHeight;\n\n            if (fromTop) {\n                dimensions.innerHeight = newY - position.innerY;\n                dimensions.bottomHeight = newHeight;\n            } else {\n                dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + newHeight;\n            }\n        }\n\n        /**\n         * Update the transform model during a resize affecting the left width\n         * @param {Number} newWidth\n         * @param {Number} newX\n         * @param {Boolean} fromLeft - if the resize occurs from the left\n         */\n        function setLeftWidth(newWidth, newX, fromLeft) {\n            dimensions.leftWidth = newWidth;\n\n            if (fromLeft) {\n                dimensions.outerWidth = newWidth + dimensions.innerWidth + dimensions.rightWidth;\n                position.outerX = newX;\n            } else {\n                dimensions.innerWidth = dimensions.outerWidth - newWidth - dimensions.rightWidth;\n                position.innerX = position.outerX + newWidth;\n            }\n        }\n\n\n        /**\n         * ======================================\n         * Mask parts and other elements creation\n         * ======================================\n         */\n\n        function createCompoundMask() {\n\n            // North\n            createPart({\n                id: 'n',\n                edges: { top: true, right: false, bottom: true, left: false },\n\n                // move and dimension the mask\n                place: function place() {\n                    this.moveTo(\n                        position.innerX,\n                        position.outerY\n                    ).setSize(\n                        dimensions.innerWidth,\n                        dimensions.topHeight\n                    );\n                },\n\n                // move and dimension the overlay\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                // set a resize limit whenever resize happens on an inner edge (here, the top inner edge, eg. the bottom of the mask),\n                // so the min/max width/height limit for \"inner component\" is respected\n                beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n                    this.config.maxHeight = (fromTop)\n                        ? null\n                        : dimensions.topHeight + (dimensions.innerHeight - constrains.minHeight);\n                },\n\n                // set the new transform values (dimension and position) resulting from the current mask resize, and apply them\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setTopHeight(height, y, fromTop);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // North-east\n            createPart({\n                id: 'ne',\n                edges: { top: true, right: true, bottom: false, left: false },\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX + dimensions.innerWidth,\n                        position.outerY\n                    ).setSize(\n                        dimensions.rightWidth,\n                        dimensions.topHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setTopHeight(height, y, fromTop);\n                    setRightWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // East\n            createPart({\n                id: 'e',\n                edges: { top: false, right: true, bottom: false, left: true },\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX + dimensions.innerWidth,\n                        position.innerY\n                    ).setSize(\n                        dimensions.rightWidth,\n                        dimensions.innerHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y - options.resizeHandleSize\n                    ).setSize(\n                        size.width - (options.resizeHandleSize * 2),\n                        size.height + (options.resizeHandleSize * 2)\n                    );\n                },\n\n                beforeResize: function beforeResize(width, height, fromLeft) {\n                    this.config.maxWidth = (fromLeft)\n                        ? dimensions.rightWidth + (dimensions.innerWidth - constrains.minWidth)\n                        : null;\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x) {\n                    setRightWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // South east\n            createPart({\n                id: 'se',\n                edges: { top: false, right: true, bottom: true, left: false },\n                minHeight: constrains.minBottomHeight,\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX + dimensions.innerWidth,\n                        position.innerY + dimensions.innerHeight\n                    ).setSize(\n                        dimensions.rightWidth,\n                        dimensions.bottomHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setRightWidth(width, x, fromLeft);\n                    setBottomHeight(height, y, fromTop);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // South\n            createPart({\n                id: 's',\n                edges: { top: true, right: false, bottom: true, left: false },\n                minHeight: constrains.minBottomHeight,\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX ,\n                        position.innerY + dimensions.innerHeight\n                    ).setSize(\n                        dimensions.innerWidth,\n                        dimensions.bottomHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n                    this.config.maxHeight = (fromTop)\n                        ? dimensions.bottomHeight + (dimensions.innerHeight - constrains.minHeight)\n                        : null;\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setBottomHeight(height, y, fromTop);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // South-west\n            createPart({\n                id: 'sw',\n                edges: { top: false, right: false, bottom: true, left: true },\n                minHeight: constrains.minBottomHeight,\n\n                place: function place() {\n                    this.moveTo(\n                        position.outerX,\n                        position.innerY + dimensions.innerHeight\n                    ).setSize(\n                        dimensions.leftWidth,\n                        dimensions.bottomHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setBottomHeight(height, y, fromTop);\n                    setLeftWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // West\n            createPart({\n                id: 'w',\n                edges: { top: false, right: true, bottom: false, left: true },\n\n                place: function place() {\n                    this.moveTo(\n                        position.outerX,\n                        position.innerY\n                    ).setSize(\n                        dimensions.leftWidth,\n                        dimensions.innerHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y - options.resizeHandleSize\n                    ).setSize(\n                        size.width - (options.resizeHandleSize * 2),\n                        size.height + (options.resizeHandleSize * 2)\n                    );\n                },\n\n                beforeResize: function beforeResize(width, height, fromLeft) {\n                    this.config.maxWidth = (fromLeft)\n                        ? null\n                        : dimensions.leftWidth + (dimensions.innerWidth - constrains.minWidth);\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x) {\n                    setLeftWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // North-west\n            createPart({\n                id: 'nw',\n                edges: { top: true, right: false, bottom: false, left: true },\n\n                place: function place() {\n                    this.moveTo(\n                        position.outerX,\n                        position.outerY\n                    ).setSize(\n                        dimensions.leftWidth,\n                        dimensions.topHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setTopHeight(height, y, fromTop);\n                    setLeftWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n        }\n\n        function createPart(partConfig) {\n            allParts[partConfig.id] = {\n                mask: createMask(_.assign({}, constrains, partConfig)),\n                overlay: createOverlay(partConfig)\n            };\n        }\n\n\n        function createVisualGuides() {\n            visualGuides.$maskBg = $('<div>', {\n                'class': 'mask-bg'\n            });\n            visualGuides.$innerWindow = $('<div>', {\n                'class': 'inner-window'\n            });\n        }\n\n\n        /**\n         * =========================\n         * The compoundMask instance\n         * =========================\n         */\n\n        dimensions  = _.defaults(dimensions || {}, defaultDimensions);\n        position    = _.defaults(position   || {}, defaultPosition);\n        options     = _.defaults(options    || {}, defaultOptions);\n\n        constrains = {\n            minWidth:           (options.resizeHandleSize * 2) + options.dragMinWidth,\n            minHeight:          (options.resizeHandleSize * 2) + options.dragMinHeight,\n            minBottomHeight:    (options.resizeHandleSize * 2) + options.innerDragHeight\n        };\n\n        compoundMask = {\n            init: function init() {\n                var self = this;\n\n                this.setTransforms(dimensions, position);\n\n                createCompoundMask();\n                createVisualGuides();\n                createInnerDragHandle();\n                createCloser();\n\n                closer.on('click', function() {\n                    self.hide();\n                    self.trigger('close');\n                });\n\n                return this;\n            },\n\n            render: function render($container) {\n                invokeOnAll('render', [$container]);\n                innerDrag.render($container);\n                closer.render($container);\n                applyTransforms();\n                return this;\n            },\n\n            destroy: function destroy() {\n                invokeOnAll('destroy');\n                visualGuides = null;\n                innerDrag = null;\n                closer = null;\n                return this;\n            },\n\n            show: function show() {\n                invokeOnAll('show');\n                innerDrag.show();\n                closer.show();\n                this.setState('hidden', false);\n                return this;\n            },\n\n            hide: function hide() {\n                invokeOnAll('hide');\n                innerDrag.hide();\n                closer.hide();\n                this.setState('hidden', true);\n                return this;\n            },\n\n            /**\n             * Allow updating the transform model\n             * @param {Object} dim\n             * @param {Number} dim.outerWidth - overall mask width\n             * @param {Number} dim.outerHeight - overall mask height\n             * @param {Number} dim.innerWidth - inner window width\n             * @param {Number} dim.innerHeight - inner window height\n             * @param {Number} pos\n             * @param {Number} pos.outerX - overall mask x\n             * @param {Number} pos.outerY - overall mask y\n             * @param {Number} pos.innerX - inner window x\n             * @param {Number} pos.innerY - inner window y\n             */\n            setTransforms: function setTransforms(dim, pos) {\n                dimensions  = _.defaults(dim || {}, dimensions);\n                position    = _.defaults(pos || {}, position);\n\n                // automatically complete the dimensions\n                dimensions.topHeight    = pos.innerY - pos.outerY;\n                dimensions.rightWidth   = dim.outerWidth - (pos.innerX - pos.outerX) - dim.innerWidth;\n                dimensions.bottomHeight = dim.outerHeight - (pos.innerY - pos.outerY) - dim.innerHeight;\n                dimensions.leftWidth    = pos.innerX - pos.outerX;\n\n                correctTransforms();\n                applyTransforms();\n            },\n\n            getDimensions: function getDimensions() {\n                return dimensions;\n            },\n\n            getPosition: function getPosition() {\n                return position;\n            },\n\n            getParts: function getParts() {\n                return allParts;\n            }\n        };\n\n        statifier(compoundMask);\n        eventifier(compoundMask);\n\n        return compoundMask;\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Line Reader\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/lineReader/plugin',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/plugins/tools/lineReader/compoundMask'\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, compoundMaskFactory) {\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'line-reader';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Options for the compoundMask factory\n     * @type {Object}\n     */\n    var maskOptions = {\n        dragMinWidth: 7,\n        dragMinHeight: 7,\n        resizeHandleSize: 7,\n        innerDragHeight: 20\n    };\n\n    var dimensions,\n        position;\n\n    /**\n     * These functions are a first effort to place the mask on the first line on the item\n     * They make a lot of assumptions:\n     * - the item starts with a text\n     * - the padding is set on the .qti-item container\n     * - the padding is consistent with the minWidth/minHeight configuration of the mask\n     * - and some other...\n     * @param {jQuery} $container - where the mask is appended\n     */\n    function getDimensions($container) {\n        var $qtiContent = $container.find('#qti-content'),\n            $qtiItem = $qtiContent.find('.qti-item'),\n\n            lineHeight = Math.ceil(parseFloat($qtiContent.css('line-height'))) || 20; // reasonable default line height\n\n        return {\n            outerWidth:     $qtiItem.width() + (maskOptions.resizeHandleSize * 4) + (maskOptions.dragMinWidth * 2),\n            outerHeight:    175, // reasonable default height\n            innerWidth:     $qtiItem.width(),\n            innerHeight:    lineHeight\n        };\n    }\n    function getPosition($container) {\n        var $qtiContent = $container.find('#qti-content'),\n            $qtiItem = $qtiContent.find('.qti-item'),\n\n            itemPosition = $qtiItem.position() || {},\n\n            paddingLeft = parseInt($qtiItem.css('padding-left'), 10),\n            paddingTop = parseInt($qtiItem.css('padding-top'), 10),\n\n            textPadding = 3, // this is to let the text breathe a bit\n\n            innerX = parseInt(itemPosition.left, 10) + paddingLeft - textPadding,\n            innerY = parseInt(itemPosition.top, 10) + paddingTop - textPadding;\n\n        return {\n            outerX: innerX - (maskOptions.resizeHandleSize * 2) - maskOptions.dragMinWidth,\n            outerY: 0,\n            innerX: innerX,\n            innerY: innerY\n        };\n    }\n\n    function containerWidthHasChanged($container) {\n        var newDimensions = getDimensions($container);\n        return newDimensions.outerWidth !== dimensions.outerWidth;\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this,\n\n                testRunner = this.getTestRunner(),\n                testData = testRunner.getTestData() || {},\n                testConfig = testData.config || {},\n                pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {},\n                $container = testRunner.getAreaBroker().getContentArea().parent();\n\n            this.compoundMask = compoundMaskFactory(maskOptions)\n                .init()\n                .render($container)\n                .on('close', function() {\n                    closeMask();\n                })\n                .hide();\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-lineReader\n                return !!options.lineReader;\n            }\n\n            function toggleButton() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function toggleMask() {\n                if (self.compoundMask.getState('hidden')) {\n                    if (containerWidthHasChanged($container)) {\n                        transformMask($container);\n                    }\n                    openMask();\n                } else {\n                    closeMask();\n                }\n            }\n\n            function openMask() {\n                self.compoundMask.show();\n                self.trigger('start');\n                self.button.turnOn();\n            }\n\n            function closeMask() {\n                if (! self.compoundMask.getState('hidden')) {\n                    self.compoundMask.hide();\n                }\n                self.trigger('end');\n                self.button.turnOff();\n            }\n\n            function transformMask($maskContainer) {\n                dimensions = getDimensions($maskContainer);\n                position = getPosition($maskContainer);\n                self.compoundMask.setTransforms(\n                    _.clone(dimensions),\n                    _.clone(position)\n                );\n            }\n\n            // create button\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Line Reader'),\n                icon: 'insert-horizontal-line',\n                control: 'line-reader',\n                text: __('Line Reader')\n            });\n\n            // attach user events\n            this.button\n                .on('click', function(e) {\n                    e.preventDefault();\n                    testRunner.trigger(actionPrefix + 'toggle');\n                });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger(actionPrefix + 'toggle');\n                    }, { avoidInput: true, prevent: true });\n                }\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', toggleButton)\n                .on('renderitem', function() {\n                    transformMask($container);\n                })\n                .on('enabletools renderitem', function () {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function () {\n                    self.disable();\n                    closeMask();\n                })\n                .on(actionPrefix + 'toggle', function () {\n                    if (isEnabled()) {\n                        toggleMask();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.compoundMask.destroy();\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.button.hide();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"magnifier\\\">\\n    <div class=\\\"level\\\">\";\n  if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    <div class=\\\"overlay\\\"></div>\\n    <div class=\\\"inner\\\"></div>\\n    <div class=\\\"controls close\\\">\\n        <a href=\\\"#\\\" class=\\\"closeMagnifier\\\" data-control=\\\"closeMagnifier\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close Magnifier\", options) : helperMissing.call(depth0, \"__\", \"Close Magnifier\", options)))\n    + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n    </div>\\n    <div class=\\\"controls zoom\\\">\\n        <a href=\\\"#\\\" class=\\\"control\\\"  data-control=\\\"zoomOut\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify less\", options) : helperMissing.call(depth0, \"__\", \"Magnify less\", options)))\n    + \"\\\"><span class=\\\"icon-remove\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"control\\\" data-control=\\\"zoomIn\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify more\", options) : helperMissing.call(depth0, \"__\", \"Magnify more\", options)))\n    + \"\\\"><span class=\\\"icon-add\\\"></span></a>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel',[\n    'jquery',\n    'lodash',\n    'ui/movableComponent',\n    'tpl!taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel'\n], function ($, _, movableComponent, magnifierPanelTpl) {\n    'use strict';\n\n    /**\n     * The screen pixel ratio\n     * @type {Number}\n     */\n    var screenRatio = window.screen.width / window.screen.height;\n\n    /**\n     * Standard debounce delay for heavy process\n     * @type {Number}\n     */\n    var debounceDelay = 50;\n\n    /**\n     * Standard scrolling throttling for the scrolling\n     * It can be lower than the debounce delay as it is lighter in process and it improves the user experience\n     * @type {Number}\n     */\n    var scrollingDelay = 20;\n\n    /**\n     * The default base size\n     * @type {Number}\n     */\n    var defaultBaseSize = 116;\n\n    /**\n     * The minimum zoom level\n     * @type {Number}\n     */\n    var defaultLevelMin = 2;\n\n    /**\n     * The maximum zoom level\n     * @type {Number}\n     */\n    var defaultLevelMax = 8;\n\n    /**\n     * The default zoom level\n     * @type {Number}\n     */\n    var defaultLevel = defaultLevelMin;\n\n    /**\n     * Some default values\n     * @type {Object}\n     */\n    var defaultConfig = {\n        level: defaultLevel,\n        levelMin: defaultLevelMin,\n        levelMax: defaultLevelMax,\n        levelStep: .5,\n        baseSize: defaultBaseSize,\n        width: defaultBaseSize * defaultLevel,\n        height: defaultBaseSize * defaultLevel / screenRatio,\n        minWidth: defaultBaseSize * defaultLevelMin,\n        minHeight: defaultBaseSize * defaultLevelMin / screenRatio,\n        maxRatio: .5,\n        stackingScope: 'test-runner'\n    };\n\n    /**\n     * Creates a magnifier panel component\n     * @param {Object} config\n     * @param {Number} [config.level] - The default zoom level\n     * @param {Number} [config.levelMin] - The minimum allowed zoom level\n     * @param {Number} [config.levelMax] - The maximum allowed zoom level\n     * @param {Number} [config.levelStep] - The level increment applied when using the controls + and -\n     * @param {Number} [config.baseSize] - The base size used to assign the width and the height according to the zoom level\n     * @param {Number} [config.maxRatio] - The ratio for the maximum size regarding the size of the window\n     * @returns {magnifierPanel} the component (initialized)\n     */\n    function magnifierPanelFactory(config) {\n        var initConfig = _.defaults(config || {}, defaultConfig);\n        var zoomLevelMin = parseFloat(initConfig.levelMin);\n        var zoomLevelMax = parseFloat(initConfig.levelMax);\n        var zoomLevelStep = parseFloat(initConfig.levelStep);\n        var zoomLevel = adjustZoomLevel(initConfig.level);\n        var maxRatio = parseFloat(initConfig.maxRatio);\n        var baseSize = parseInt(initConfig.baseSize, 10);\n        var zoomSize = baseSize * zoomLevel;\n        var $initTarget = null;\n        var controls = null;\n        var observer = null;\n        var targetWidth, targetHeight, dx, dy;\n        var scrolling = [];\n\n        /**\n         * @typedef {Object} magnifierPanel\n         */\n        var magnifierPanel = movableComponent({\n            /**\n             * Gets the current zoom level\n             * @returns {Number}\n             */\n            getZoomLevel: function getZoomLevel() {\n                return zoomLevel;\n            },\n\n            /**\n             * Gets the targeted content the magnifier will zoom\n             * @returns {jQuery}\n             */\n            getTarget: function getTarget() {\n                return controls && controls.$target;\n            },\n\n            /**\n             * Sets the targeted content the magnifier will zoom\n             * @param {jQuery} $newTarget\n             * @returns {magnifierPanel}\n             * @fires targetchange\n             * @fires update\n             */\n            setTarget: function setTarget($newTarget) {\n                if (controls) {\n                    controls.$target = $newTarget;\n                    controls.$viewTarget = null;\n\n                    setScrollingListener();\n\n                    /**\n                     * @event magnifierPanel#targetchange\n                     * @param {jQuery} $target\n                     */\n                    this.trigger('targetchange', controls.$target);\n\n                    this.update();\n                } else {\n                    $initTarget = $newTarget;\n                }\n\n                return this;\n            },\n\n            /**\n             * Sets the zoom level of the magnifier\n             * @param {Number} level\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomTo: function zoomTo(level) {\n                if (level && _.isFinite(level)) {\n                    zoomLevel = adjustZoomLevel(level);\n                }\n\n                applyZoomLevel();\n                showZoomLevel();\n                updateMaxSize();\n                updateZoom();\n\n                /**\n                 * @event magnifierPanel#zoom\n                 * @param {Number} zoomLevel\n                 */\n                this.trigger('zoom', zoomLevel);\n\n                return this;\n            },\n\n            /**\n             * Increments the zoom level of the magnifier\n             * @param {Number} step\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomBy: function zoomBy(step) {\n                if (step && _.isFinite(step)) {\n                    this.zoomTo(zoomLevel + parseFloat(step));\n                }\n                return this;\n            },\n\n            /**\n             * Zoom-in using the configured level step\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomIn: function zoomIn() {\n                return this.zoomBy(zoomLevelStep);\n            },\n\n            /**\n             * Zoom-out using the configured level step\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomOut: function zoomOut() {\n                return this.zoomBy(-zoomLevelStep);\n            },\n\n            /**\n             * Places the magnifier sight at a particular position on the target content\n             * @param {Number} x\n             * @param {Number} y\n             * @returns {magnifierPanel}\n             */\n            zoomAt: function zoomAt(x, y) {\n                var position;\n                if (controls) {\n                    position = this.translate(x, y);\n                    controls.$inner.css({\n                        top: -position.top,\n                        left: -position.left\n                    });\n                }\n            },\n\n            /**\n             * Translates screen coordinates to zoom coordinates\n             * @param {Number} x\n             * @param {Number} y\n             * @returns {Object}\n             */\n            translate: function translate(x, y) {\n                return {\n                    top: translateMagnifier(y, targetHeight, this.config.height),\n                    left: translateMagnifier(x, targetWidth, this.config.width)\n                };\n            },\n\n            /**\n             * Updates the magnifier with the target content\n             * @returns {magnifierPanel}\n             * @fires update\n             */\n            update: function update() {\n                if (controls && controls.$target) {\n                    controls.$clone = controls.$target.clone().removeAttr('id');\n                    controls.$clone.find('iframe').remove();\n                    controls.$clone.find('[name],[id],[data-serial]').removeAttr('name id data-serial');\n                    controls.$inner.empty().append(controls.$clone);\n\n                    applySize();\n                    applyZoomLevel();\n                    updateZoom();\n                    updateMaxSize();\n                    applyScrolling();\n\n                    /**\n                     * @event magnifierPanel#update\n                     */\n                    this.trigger('update');\n                }\n\n                return this;\n            }\n        }, defaultConfig);\n\n        /**\n         * Will update the magnifier content with the actual content\n         * @type {Function}\n         */\n        var updateMagnifier = _.debounce(_.bind(magnifierPanel.update, magnifierPanel), debounceDelay);\n\n        /**\n         * Will update the magnifier content with the scrolling position\n         * @type {Function}\n         */\n        var scrollingListenerCallback = _.throttle(function (event) {\n\n            var $target = $(event.target);\n            var scrollingTop = event.target.scrollTop;\n            var scrollLeft = event.target.scrollLeft;\n            var scrollId, scrollData;\n\n            //check if the element is already known as a scrollable element\n            if (controls && controls.$clone && $target.data('magnifier-scroll')) {\n\n                scrollId = $target.data('magnifier-scroll');\n                scrollData = _.find(scrolling, {id: scrollId});\n                scrollData.scrollTop = scrollingTop;\n                scrollData.scrollLeft = scrollLeft;\n\n                //if in clone, scroll it\n                scrollInClone(scrollData);\n\n            } else {\n                //if the element is not yet identified as a scrollable element, tag it and register its id\n                scrollId = _.uniqueId('scrolling_');\n                $target.attr('data-magnifier-scroll', scrollId);\n                scrolling.push({\n                    id: scrollId,\n                    scrollTop: scrollingTop,\n                    scrollLeft: scrollLeft\n                });\n\n                //update all\n                magnifierPanel.update();\n            }\n\n        }, scrollingDelay);\n\n        /**\n         * Scroll an element in the clone\n         *\n         * @param {Object} scrollData\n         * @param {String} scrollData.id\n         * @param {Number} [scrollData.scrollTop]\n         * @param {Number} [scrollData.scrollLeft]\n         */\n        function scrollInClone(scrollData) {\n            var $clonedTarget;\n            if (controls && controls.$clone && scrollData && scrollData.id) {\n                $clonedTarget = controls.$clone.find('[data-magnifier-scroll=' + scrollData.id + ']');\n                if ($clonedTarget.length) {\n                    if (_.isNumber(scrollData.scrollTop)) {\n                        $clonedTarget[0].scrollTop = scrollData.scrollTop;\n                    }\n                    if (_.isNumber(scrollData.scrollLeft)) {\n                        $clonedTarget[0].scrollLeft = scrollData.scrollLeft;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Initializes the listener for scrolling event and transfer the scrolling\n         */\n        function setScrollingListener() {\n            window.addEventListener('scroll', scrollingListenerCallback, true);\n        }\n\n        /**\n         * Stops the listener for scrolling event\n         */\n        function removeScrollingListener() {\n            window.removeEventListener('scroll', scrollingListenerCallback, true);\n        }\n\n        /**\n         * Applies scrolling programmatically from the recorded list of elements to be scrolled\n         */\n        function applyScrolling() {\n            _.forEach(scrolling, scrollInClone);\n        }\n\n        /**\n         * Adjusts a provided zoom level to fit the constraints\n         * @param {Number|String} level\n         * @returns {Number}\n         */\n        function adjustZoomLevel(level) {\n            return Math.max(zoomLevelMin, Math.min(parseFloat(level), zoomLevelMax));\n        }\n\n        /**\n         * Applies the zoom level to the content\n         */\n        function applyZoomLevel() {\n            if (controls) {\n                controls.$inner.css({\n                    transform: 'scale(' + zoomLevel + ')'\n                });\n            }\n        }\n\n        /**\n         * Shows the zoom level using a CSS animation\n         */\n        function showZoomLevel() {\n            var $newZoomLevel;\n            if (controls) {\n                $newZoomLevel = controls.$zoomLevel.clone(true).html(zoomLevel);\n                controls.$zoomLevel.before($newZoomLevel).remove();\n                controls.$zoomLevel = $newZoomLevel;\n            }\n        }\n\n        /**\n         * Updates the max size according to the window's size\n         */\n        function updateMaxSize() {\n            var $window = $(window);\n            magnifierPanel.config.maxWidth = $window.width() * maxRatio;\n            magnifierPanel.config.maxHeight = $window.height() * maxRatio;\n        }\n\n        /**\n         * Forwards the size of the target to the cloned content\n         */\n        function applySize() {\n            if (controls && controls.$clone) {\n                targetWidth = controls.$target.width();\n                targetHeight = controls.$target.height();\n\n                controls.$clone\n                    .width(targetWidth)\n                    .height(targetHeight);\n            }\n        }\n\n        /**\n         * Place the zoom sight at the right place inside the magnifier\n         */\n        function updateZoom() {\n            var position;\n            if (controls && controls.$target) {\n                position = magnifierPanel.getPosition();\n\n                position.x += dx + controls.$target.scrollLeft();\n                position.y += dy + controls.$target.scrollTop();\n\n                magnifierPanel.zoomAt(position.x, position.y);\n            }\n        }\n\n        /**\n         * Creates the observer that will react to DOM changes to update the magnifier\n         */\n        function createObserver() {\n            observer = new window.MutationObserver(updateMagnifier);\n        }\n\n        /**\n         * Starts to observe the DOM of the magnifier target\n         */\n        function startObserver() {\n            if (controls && controls.$target) {\n                observer.observe(controls.$target.get(0), {\n                    childList: true,        // Set to true if additions and removals of the target node's child elements (including text nodes) are to be observed.\n                    attributes: true,       // Set to true if mutations to target's attributes are to be observed.\n                    characterData: true,    // Set to true if mutations to target's data are to be observed.\n                    subtree: true           // Set to true if mutations to target and target's descendants are to be observed.\n                });\n            }\n            setScrollingListener();\n        }\n\n        /**\n         * Stops to observe the DOM of the magnifier target\n         */\n        function stopObserver() {\n            observer.disconnect();\n            removeScrollingListener();\n        }\n\n        /**\n         * Translates a screen coordinate into the magnifier\n         * @param {Number} coordinate\n         * @param {Number} actualSize\n         * @param {Number} magnifierSize\n         * @returns {Number}\n         */\n        function translateMagnifier(coordinate, actualSize, magnifierSize) {\n            var delta = 0;\n            var ratio = zoomLevel;\n\n            if (actualSize) {\n                delta = ((actualSize * (zoomLevel - 1)) / 2);\n                ratio = (actualSize * zoomLevel - magnifierSize) / (actualSize - magnifierSize);\n            }\n\n            return coordinate * ratio - delta;\n        }\n\n        /**\n         * Gets the top element from a particular absolute point.\n         * @param {Number} x - the page X-coordinate of the point\n         * @param {Number} y - the page Y-coordinate of the point\n         * @returns {HTMLElement}\n         */\n        function getElementFromPoint(x, y) {\n            var el;\n\n            if (controls) {\n                controls.$overlay.addClass('hidden');\n            }\n\n            el = document.elementFromPoint(x, y);\n\n            if (controls) {\n                controls.$overlay.removeClass('hidden');\n            }\n\n            return el;\n        }\n\n        /**\n         * Find the related node in the target. The both trees must have the same content.\n         * @param {jQuery|HTMLElement} node - the node for which find a relation\n         * @param {jQuery|HTMLElement} root - the root of the tree that contains the actual node\n         * @param {jQuery|HTMLElement} target - the root of the tree that could contains the related node\n         * @returns {jQuery}\n         */\n        function findSourceNode(node, root, target) {\n            var $node = $(node);\n            var $root = $(root);\n            var $target = $(target);\n            var indexes = [$node.index()];\n\n            // compute map of node's parents indexes\n            $node.parents().each(function () {\n                var $this = $(this);\n                if (!$this.is($root)) {\n                    indexes.push($this.index());\n                } else {\n                    return false;\n                }\n            });\n\n            // the last index is related to the root, so ignore it\n            indexes.pop();\n\n            // now try to find the same node using the path provided by the indexes map\n            if (indexes.length) {\n                $node = $target;\n                _.forEachRight(indexes, function (index) {\n                    $node = $node.children().eq(index);\n                    if (!$node.length) {\n                        return false;\n                    }\n                });\n            } else {\n                // nothing to search for...\n                $node = $();\n            }\n            return $node;\n        }\n\n        initConfig.width = zoomSize;\n        initConfig.height = zoomSize / screenRatio;\n        initConfig.minWidth = baseSize * zoomLevelMin;\n        initConfig.minHeight = baseSize * zoomLevelMin / screenRatio;\n\n        magnifierPanel\n            .setTemplate(magnifierPanelTpl)\n            .on('render', function () {\n                var self = this;\n                var $component = this.getElement();\n\n                this.setState('hidden', true);\n\n                // compute the padding of the magnifier content\n                dx = ($component.outerWidth() - $component.width()) / 2;\n                dy = ($component.outerHeight() - $component.height()) / 2;\n\n                controls = {\n                    $target: $initTarget,\n                    $inner: $('.inner', $component),\n                    $zoomLevel: $('.level', $component),\n                    $overlay: $('.overlay', $component)\n                };\n                $initTarget = null;\n\n                // click on zoom-in or zoom-out controls\n                $component.on('click touchstart', '.zoom', function (event) {\n                    var $button = $(event.target).closest('.control');\n                    var action = $button.data('control');\n\n                    event.preventDefault();\n                    if (action && self[action]) {\n                        self[action]();\n                    }\n                });\n\n                // click on close controls\n                $component.on('click touchstart', '.closeMagnifier', function (event) {\n                    event.preventDefault();\n                    self.hide();\n                    self.trigger('close');\n                });\n\n                // interact through the magnifier glass with the zoomed content\n                $component.on('click touchstart', '.overlay', function (event) {\n                    if (!self.is('noclick')) {\n                        findSourceNode(\n                            getElementFromPoint(event.pageX, event.pageY),\n                            controls.$inner,\n                            controls.$target\n                        ).click().focus();\n                    } else {\n                        // was a 'dragend' click, just ignore\n                        self.setState('noclick', false);\n                    }\n                });\n\n                createObserver();\n                updateMaxSize();\n                applyZoomLevel();\n            })\n            .on('dragstart resizestart', function () {\n                // prevent the 'dragend' click to be understood as an actual click\n                this.setState('noclick', true);\n            })\n            .on('move resize', function () {\n                updateZoom();\n            })\n            .on('show', function () {\n                updateMagnifier();\n                startObserver();\n            })\n            .on('hide', function () {\n                stopObserver();\n            })\n            .on('resize', function () {\n                updateMaxSize();\n            })\n            .on('destroy', function () {\n                stopObserver();\n                $initTarget = null;\n                controls = null;\n                observer = null;\n            })\n            .init(initConfig);\n\n        return magnifierPanel;\n    }\n\n    return magnifierPanelFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/magnifier/magnifier',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel'\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, magnifierPanelFactory) {\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'magnifier';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultOptions = {\n        zoomMin: 2,    // Smallest magnification factor\n        zoomMax: 8,    // Biggest magnification factor\n        zoomStep: .5   // Increment between min an max\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {}, defaultOptions);\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n            var magnifierPanel = null;\n\n            /**\n             * Creates the magnifier panel on demand\n             * @returns {magnifierPanel}\n             * @fires plugin-magnifier-create.magnifier\n             */\n            function getMagnifierPanel() {\n                var $container;\n\n                if (!magnifierPanel) {\n                    $container = testRunner.getAreaBroker().getContainer();\n\n                    magnifierPanel = magnifierPanelFactory({\n                        levelMin: pluginConfig.zoomMin,\n                        levelMax: pluginConfig.zoomMax,\n                        levelStep: pluginConfig.zoomStep\n                    })\n                        .on('show', function () {\n                            /**\n                             * @event plugin-magnifier-show.magnifier\n                             */\n                            self.trigger('magnifier-show');\n                        })\n                        .on('hide', function () {\n                            /**\n                             * @event plugin-magnifier-hide.magnifier\n                             */\n                            self.trigger('magnifier-hide');\n                        })\n                        .on('zoom', function (level) {\n                            /**\n                             * @event plugin-magnifier-zoom.magnifier\n                             * @param {Number} zoomLevel\n                             */\n                            self.trigger('magnifier-zoom', level);\n                        })\n                        .on('close', function () {\n                            hideMagnifier();\n                        })\n                        .setTarget($container)\n                        .render($container.parent());\n\n                    /**\n                     * @event plugin-magnifier-create.magnifier\n                     */\n                    self.trigger('magnifier-create');\n                }\n                return magnifierPanel;\n            }\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-magnifier\n                return !!options.magnifier;\n            }\n\n            /**\n             * Shows/hides the plugin GUI according to context\n             */\n            function togglePlugin() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            /**\n             * Shows/hides the magnifier\n             */\n            function toggleMagnifier() {\n                if (self.getState('enabled')) {\n                    if (self.getState('active')) {\n                        hideMagnifier();\n                    } else {\n                        showMagnifier();\n                    }\n                }\n            }\n\n            /**\n             * Opens the magnifier panel\n             * @fires plugin-magnifier-show.magnifier\n             */\n            function showMagnifier() {\n                getMagnifierPanel();\n\n                if (magnifierPanel.is('hidden')) {\n                    magnifierPanel.show();\n                }\n                self.button.turnOn();\n                testRunner.trigger('plugin-open.' + pluginName);\n\n                self.setState('active', true);\n            }\n\n            /**\n             * Closes the magnifier panel\n             * @fires plugin-magnifier-hide.magnifier\n             */\n            function hideMagnifier() {\n                self.setState('active', false);\n\n                self.button.turnOff();\n                testRunner.trigger('plugin-close.' + pluginName);\n\n                if (magnifierPanel && !magnifierPanel.is('hidden')) {\n                    magnifierPanel.hide();\n                }\n            }\n\n            // build element\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control: 'magnify',\n                title: __('Displays a customisable magnifier'),\n                text: __('Magnifying Glass'),\n                icon: 'find'\n            });\n\n            // attach behavior\n            this.button.on('click', function (event) {\n                event.preventDefault();\n                testRunner.trigger(actionPrefix + 'toggle');\n            });\n\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function (command, key) {\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key);\n                    }, {\n                        avoidInput: true\n                    });\n                });\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n            // runner life cycle\n                .on('loaditem', function () {\n                    togglePlugin();\n                    self.disable();\n                })\n                .on('renderitem', function () {\n                    if (magnifierPanel) {\n                        magnifierPanel\n                            .update()\n                            .zoomTo(pluginConfig.zoomMin);\n                    }\n                })\n                .on('enabletools renderitem', function () {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function () {\n                    if (self.getState('active')) {\n                        hideMagnifier();\n                    }\n                    self.disable();\n                })\n                .on('destroy', function () {\n                    if (magnifierPanel) {\n                        magnifierPanel.destroy();\n                    }\n                    magnifierPanel = null;\n                })\n\n                // commands that controls the magnifier\n                .on(actionPrefix + 'toggle', function () {\n                    if (isEnabled()) {\n                        toggleMagnifier();\n                    }\n                })\n                .on(actionPrefix + 'in', function () {\n                    if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n                        getMagnifierPanel().zoomIn();\n                    }\n                })\n                .on(actionPrefix + 'out', function () {\n                    if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n                        getMagnifierPanel().zoomOut();\n                    }\n                })\n                .on(actionPrefix + 'close', function () {\n                    if (self.getState('active')) {\n                        hideMagnifier();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + pluginName);\n        },\n\n        /**\n         * Enables the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disables the button\n         */\n        disable: function disable() {\n            this.button.disable();\n        },\n\n        /**\n         * Shows the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hides the button\n         */\n        hide: function hide() {\n            this.button.hide();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/textToSpeech/textToSpeech', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"text-to-speech hidden\\\">\\n    <div class=\\\"action click-to-speak\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Click to speak\", options) : helperMissing.call(depth0, \"__\", \"Click to speak\", options)))\n    + \"\\\"><span class=\\\"icon-click-to-speak\\\"></span></div>\\n\\n    <div class=\\\"action play\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Play\", options) : helperMissing.call(depth0, \"__\", \"Play\", options)))\n    + \"\\\"><span class=\\\"icon-play\\\"></span></div>\\n    <div class=\\\"action pause\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Pause\", options) : helperMissing.call(depth0, \"__\", \"Pause\", options)))\n    + \"\\\"><span class=\\\"icon-pause\\\"></span></div>\\n\\n    <div class=\\\"action stop\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Stop\", options) : helperMissing.call(depth0, \"__\", \"Stop\", options)))\n    + \"\\\"><span class=\\\"icon-stop\\\"></span></div>\\n\\n    <div class=\\\"action settings\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Settings\", options) : helperMissing.call(depth0, \"__\", \"Settings\", options)))\n    + \"\\\">\\n        <span class=\\\"icon-settings\\\"></span>\\n        <div class=\\\"settings-menu\\\">\\n            <div class=\\\"option volume\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Volume\", options) : helperMissing.call(depth0, \"__\", \"Volume\", options)))\n    + \"\\\">\\n                <span class=\\\"icon-volume\\\"></span>\\n                <div class=\\\"slider-container\\\">\\n                    <div class=\\\"slider\\\"></div>\\n                </div>\\n                <div class=\\\"hover-container\\\"></div>\\n            </div>\\n            <div class=\\\"option speed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Speech speed\", options) : helperMissing.call(depth0, \"__\", \"Speech speed\", options)))\n    + \"\\\">\\n                <span class=\\\"icon-speed\\\"></span>\\n                <div class=\\\"slider-container\\\">\\n                    <div class=\\\"slider\\\"></div>\\n                </div>\\n                <div class=\\\"hover-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/tools/textToSpeech/textToSpeech',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\ndefine('taoQtiTest/runner/plugins/tools/textToSpeech/textToSpeech',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/tools/textToSpeech/textToSpeech',\n    'css!taoQtiTest/runner/plugins/tools/textToSpeech/textToSpeech',\n    'nouislider'\n], function (\n    $,\n    _,\n    __,\n    componentFactory,\n    tpl\n) {\n    'use strict';\n\n    /**\n     * The factory\n     * @param {jQuery} [options.$contentArea = '$(body)']\n     * @param {Boolean} [options.enableClickToSpeak = false]\n     * @param {Array} [options.ignoreEls = ['header', '.left-bar', '.right-bar', '.modal', 'footer', '.action-bar', '.sts-scope', '.media-container']]\n     * @param {String} [options.toolbarUrl = '//taotoolbar.speechstream.net/tao/configQA.js']\n     * @param {Object} [config]\n     * @returns {ui/component}\n     */\n    return function factory(options, config) {\n        var component;\n        var texthelpMapping = {\n            properties: {\n                pageCompleteCallback:    'eba_page_complete_callback',\n                texthelpSpeechStream:    'TexthelpSpeechStream',\n                volumeValue:             'eba_volume_value'\n            },\n            functions: {\n                barDynamicStart:         '$rw_barDynamicStart',\n                barCacheInit:            '$rw_barCacheInit',\n                barInit:                 '$rw_barInit',\n                cachePage:               '$rw_cachePage',\n                disableSpeech:           '$rw_disableSpeech',\n                enableClickToSpeak:      '$rw_enableClickToSpeak',\n                enableContinuousReading: '$rw_enableContinuousReading',\n                enableSpeech:            '$rw_enableSpeech',\n                event_pause:             '$rw_event_pause',\n                event_play:              '$rw_event_play',\n                getSpeed:                '$rw_getSpeed',\n                getVoice:                '$rw_getVoice',\n                hasReachedEnd:           '$rw_hasReachedEnd',\n                isPaused:                '$rw_isPaused',\n                isSpeaking:              '$rw_isSpeaking',\n                isTextSelectedForPlay:   '$rw_isTextSelectedForPlay',\n                isUsingMathjax:          '$rw_isUsingMathjax',\n                setSpeedValue:           '$rw_setSpeedValue',\n                setUsingMath:            '$rw_setUsingMath',\n                setUsingMathjax:         '$rw_setUsingMathjax',\n                setUsingMaths:           '$rw_setUsingMaths',\n                setVolumeValue:          '$rw_setVolumeValue',\n                stopSpeech:              '$rw_stopSpeech',\n                tagSentences:            '$rw_tagSentences',\n                userParameters:          '$rw_userParameters'\n            }\n        };\n        var speed;\n        var volume;\n\n        _.assign(options || {}, {\n            contentArea: $('body'),\n            enableClickToSpeak: false,\n            ignoreEls: ['header', '.left-bar', '.right-bar', '.modal', 'footer', '.action-bar', '.sts-scope', '.media-container'],\n            toolbarUrl: '//taotoolbar.speechstream.net/tao/configQA.js'\n        });\n\n        component = componentFactory({\n            /**\n             * Execute texthelp function\n             * @param {String} action\n             * @param {...} arguments\n             */\n            _exec: function _exec(action) {\n                var args = [].slice.call(arguments, 1);\n                var fn = window[texthelpMapping.functions[action]];\n\n                if (fn && _.isFunction(fn)) {\n                    return fn.apply(this, args);\n                }\n            },\n\n            /**\n             * Get texthelp property\n             * @param {String} property\n             */\n            _get: function _get(property) {\n                return window[texthelpMapping.properties[property]];\n            },\n\n            /**\n             * Set texthelp property\n             * @param {String} property\n             * @param {*} value\n             */\n            _set: function _set(property, value) {\n                var prop = texthelpMapping.properties[property];\n\n                if (prop) {\n                    return window[prop] = value;\n                }\n            },\n\n            /**\n             * Initialize texthelp\n             */\n            _init: function _init() {\n                var self = this;\n\n                // Initialize texthelp\n                this._exec('barDynamicStart');\n                this._exec('barInit');\n\n                // Set some default texthelp options\n                this._exec('enableClickToSpeak', options.enableClickToSpeak);\n                this._exec('setSpeedValue', speed);\n                this._exec('setVolumeValue', volume);\n\n                // Set texthelp callbacks\n                // todo: page complete isn't fired by texthelp (something to do with caching)\n                this._set('pageCompleteCallback', function () {\n                    self.trigger('stop');\n                });\n\n                return this;\n            },\n\n            /**\n             * Re-initialize texthelp\n             */\n            updateTexthelpCache: function updateTexthelpCache(deliveryId, itemId) {\n                var tss = this._get('texthelpSpeechStream');\n\n                tss.g_strBookId = deliveryId;\n                tss.g_strPageId = itemId;\n\n                this._exec('tagSentences', options.$contentArea.selector);\n\n                return this;\n            },\n\n            /**\n             * Enable texthelp\n             */\n            enable: function enable() {\n                this._exec('enableSpeech');\n                return this;\n            },\n\n            /**\n             * Disable texthelp\n             */\n            disable: function disable() {\n                this._exec('disableSpeech');\n                return this;\n            },\n\n            /**\n             * Play\n             */\n            play: function play() {\n                if (!this._exec('isSpeaking') || this._exec('isPaused')) {\n                    this._exec('event_play');\n                    this.trigger('play');\n                }\n\n                return this;\n            },\n\n            /**\n             * Pause\n             */\n            pause: function pause() {\n                this._exec('event_pause');\n                this.trigger('pause');\n\n                return this;\n            },\n\n            /**\n             * Stop\n             */\n            stop: function stop() {\n                this._exec('stopSpeech');\n                this.trigger('stop');\n\n                return this;\n            },\n\n            /**\n             * Speech speed\n             */\n            setSpeed: function setSpeed(e, value) {\n                speed = +value;\n\n                this._exec('setSpeedValue', speed);\n                this.trigger('setSpeed', speed);\n\n                return this;\n            },\n\n            /**\n             * Volume\n             */\n            setVolume: function setVolume(e, value) {\n                volume = +value;\n\n                this._exec('setVolumeValue', volume);\n                this.trigger('setVolume', volume);\n\n                return this;\n            },\n\n            /**\n             * Click to pronounce\n             */\n            clickToSpeak: function clickToSpeak() {\n                options.enableClickToSpeak = !options.enableClickToSpeak;\n\n                this._exec('enableClickToSpeak', options.enableClickToSpeak);\n                this._exec('enableContinuousReading', !options.enableClickToSpeak); // continuous reading is off when click to speak is on\n                this.trigger('clickToSpeak');\n\n                return this;\n            }\n        }, {\n            // defaults\n        })\n        .setTemplate(tpl)\n        .on('init', function () {\n            var self = this;\n\n            speed = 40; // default speed\n            volume = 40; // default volume\n\n            // we have to mark some blocks as ignored to prevent TTS accessing it\n            $(options.ignoreEls.join(',')).attr('ignore', true);\n\n            require([options.toolbarUrl], function () {\n                var tss = self._get('texthelpSpeechStream');\n\n                require([\"//\" + tss.g_strServer + \"/SpeechStream/v\" + tss.g_strBuild + \"/texthelpMain.js\"], function () {\n                    self._init();\n                });\n            });\n        })\n        .init(config)\n        .on('render', function () {\n            var $this = this.getElement();\n\n            // prevents clicks from removing highlighted text\n            $this.on('mousedown', function (e) {\n                e.preventDefault();\n                return false;\n            });\n\n            // Action clicks\n            $this.find('.action').on('click', function (e) {\n                var $action = $(this);\n\n                // prevents disabled actions from being triggered\n                if ($action.hasClass('disabled')) {\n                    e.stopImmediatePropagation();\n                }\n\n                // hides settings menu when another action clicked\n                if (!$action.closest('.settings').length) {\n                    $this.find('.settings').removeClass('active');\n                    $this.find('.settings > .settings-menu').hide();\n                }\n            });\n\n            // Show/hide settings menu\n            $this.find('.settings').on('click', function () {\n                $(this).toggleClass('active');\n                $this.find('.settings-menu').toggle();\n            });\n\n            // Settings menu\n            $this.find('.settings > .settings-menu')\n            .on('click', function (e) { // prevent child elements triggering a click on settings menu\n                e.stopPropagation();\n            })\n            .hide(); // Hide settings menu to begin\n\n            // Hide/show volume and speed sliders\n            $this.find('.settings > .settings-menu > .option')\n            .on('hover', function () {\n                $(this).find('.slider-container').show();\n            })\n            .on('mouseleave', function () {\n                $(this).find('.slider-container').hide();\n            });\n\n            // Hide slider to begin\n            $this.find('.settings > .settings-menu > .option > .slider-container').hide();\n\n            // Text to speech actions\n            $this.find('.click-to-speak').on('click', this.clickToSpeak);\n            $this.find('.play')          .on('click', this.play);\n            $this.find('.pause')         .on('click', this.pause)       .hide();\n            $this.find('.stop')          .on('click', this.stop);\n\n            // Settings menu's volume slider action\n            $this.find('.settings > .settings-menu > .volume .slider')\n            .noUiSlider({\n                animate: true,\n                connected: true,\n                range: {\n                    min: 0,\n                    max: 100\n                },\n                start: volume,\n                step: 10\n            })\n            .on('change', this.setVolume);\n\n            // Settings menu's speed slider\n            $this.find('.settings > .settings-menu > .speed .slider')\n            .noUiSlider({\n                animate: true,\n                connected: true,\n                range: {\n                    min: 0,\n                    max: 100\n                },\n                start: speed,\n                step: 10\n            })\n            .on('change', this.setSpeed);\n        })\n        .on('clickToSpeak', function () {\n            var $el = this.getElement();\n\n            if (options.enableClickToSpeak) {\n                $el.find('.click-to-speak').addClass('active');\n                $el.find('.play').addClass('disabled').show();\n                $el.find('.pause').addClass('disabled').hide();\n                options.$contentArea.css('cursor', 'pointer');\n            } else {\n                $el.find('.click-to-speak').removeClass('active');\n                $el.find('.play').removeClass('disabled').show();\n                $el.find('.pause').removeClass('disabled').hide();\n                options.$contentArea.css('cursor', 'default');\n            }\n        })\n        .on('play', function () {\n            var $el = this.getElement();\n\n            $el.find('.play').hide();\n            $el.find('.pause').show();\n        })\n        .on('pause', function () {\n            var $el = this.getElement();\n\n            $el.find('.play').show();\n            $el.find('.pause').hide();\n        })\n        .on('stop', function () {\n            var $el = this.getElement();\n\n            $el.find('.play').show();\n            $el.find('.pause').hide();\n        });\n\n        return component;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\ndefine('taoQtiTest/runner/plugins/tools/textToSpeech/plugin',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'ui/stacker',\n    'taoQtiTest/runner/plugins/tools/textToSpeech/textToSpeech',\n], function (\n    $,\n    _,\n    __,\n    pluginFactory,\n    hider,\n    stackerFactory,\n    ttsFactory\n) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     * @returns {Object}\n     */\n    return pluginFactory({\n\n        /**\n         * Plugin name\n         * @type {String}\n         */\n        name: 'textToSpeech',\n\n        /**\n         * Initialize plugin\n         * @returns {this}\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            this.ttsButton = this.getAreaBroker().getToolbox().createEntry({\n                control: 'tts',\n                icon: 'headphones',\n                text: __('Text to Speech'),\n                title: __('Text to Speech')\n            })\n            .on('render', function () {\n                var stacker = stackerFactory('test-runner');\n\n                self.tts = ttsFactory({\n                    $contentArea: testRunner.getAreaBroker().getContentArea()\n                })\n                .render(self.ttsButton.getElement())\n                .disable() // disable & hide by default\n                .hide();\n\n                stacker.autoBringToFront(self.tts.getElement());\n            })\n            .on('click', function (e) {\n                var ttsEl = self.tts.getElement();\n\n                // prevent action if the click is made inside the tts controls which is a sub part of the button\n                if ($(e.target).closest(ttsEl).length) {\n                    return;\n                }\n\n                hider.toggle(ttsEl);\n\n                if (ttsEl.hasClass('hidden')) {\n                    self.tts.disable();\n                } else {\n                    self.tts.enable();\n                }\n            })\n            .disable() // disable & hide by default\n            .hide();\n\n            testRunner\n            .on('loaditem', function () {\n                self.disable();\n                self.ttsButton.hide();\n            })\n            .on('enabletools', function () {\n                self.enable();\n            })\n            .on('renderitem', function () {\n                var context = testRunner.getTestContext();\n                var config = testRunner.getConfig();\n\n                if (context.options.textToSpeech) {\n                    self.enable();\n                    self.ttsButton.show();\n\n                    self.tts.updateTexthelpCache(\n                        config.serviceCallId,\n                        this.itemRunner._item.attributes.identifier\n                    );\n                }\n            })\n            .on('disabletools unloaditem', function () {\n                self.disable();\n            });\n\n            return this;\n        },\n\n        /**\n         * Enable plugin\n         */\n        enable: function enable() {\n            if (this.tts) {\n                this.tts.enable();\n            }\n\n            if (this.ttsButton) {\n                this.ttsButton.enable();\n            }\n        },\n\n        /**\n         * Disable plugin\n         */\n        disable: function disable() {\n            if (this.tts) {\n                this.tts.disable();\n            }\n\n            if (this.ttsButton) {\n                this.ttsButton.disable();\n            }\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n *\n * @author dieter <dieter@taotesting.com>\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\ndefine('taoQtiTest/runner/plugins/tools/zoom',[\n    'jquery',\n    'i18n',\n    'ui/hider',\n    'ui/transformer',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin'\n], function ($, __, hider, transformer, shortcut, namespaceHelper, pluginFactory){\n    'use strict';\n\n    /**\n     * The standard zoom level, in percentage\n     * @type {Number}\n     */\n    var standard = 100;\n\n    /**\n     * Zoom-In/Zoom-Out steps\n     * @type {Number}\n     */\n    var increment = 10;\n\n    /**\n     * The zoom boundaries, in percentage\n     * @type {Object}\n     */\n    var threshold = {\n        lower: 10,\n        upper: 200\n    };\n\n    /**\n     * Sets the zoom level\n     * @param {jQuery} $target\n     * @param {Number} level - Zoom percentage\n     */\n    var setZoomLevel = function($target, level) {\n        transformer.setTransformOrigin($target, '0 0');\n        transformer.scale($target, level / 100);\n    };\n\n    /**\n     * Restores the standard zoom level\n     * @param {jQuery} $target\n     */\n    var resetZoom = function($target) {\n        transformer.reset($target);\n    };\n\n    /**\n     * Forces a browser repaint\n     * Solution from http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes?answertab=votes#tab-top\n     * @param {jQuery} $target\n     */\n    var forceRepaint = function($target) {\n        var sel = $target[0];\n        if (sel) {\n            sel.style.display = 'none';\n            sel.offsetHeight; // no need to store this anywhere, the reference is enough\n            sel.style.display = '';\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'zoom',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isConfigured() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-zoom\n                return !!options.zoom;\n            }\n\n            /**\n             * Is zoom activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isConfigured()) {//allow zoom\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function zoomAction(dir) {\n\n                var inc = increment * dir;\n                var el, sx, sy, before, after, margin;\n\n                if (self.$zoomTarget) {\n                    el = self.$zoomTarget[0];\n\n                    before = el.getBoundingClientRect();\n\n                    sx = self.$container.scrollLeft();\n                    sy = self.$container.scrollTop();\n\n                    self.zoom = Math.max(threshold.lower, Math.min(threshold.upper, self.zoom + inc));\n\n                    if (self.zoom === standard) {\n                        resetZoom(self.$zoomTarget);\n                    } else {\n                        setZoomLevel(self.$zoomTarget, self.zoom);\n                    }\n\n                    // force a browser repaint to fix a scrollbar issue with WebKit\n                    forceRepaint(self.$zoomTarget);\n\n                    after = el.getBoundingClientRect();\n\n                    sx = Math.max(0, sx + (after.width - before.width) / 2);\n                    sy = Math.max(0, sy + (after.height - before.height) / 2);\n\n                    self.$container.scrollLeft(sx).scrollTop(sy);\n                }\n            }\n\n            function zoomIn() {\n                if (self.getState('enabled') !== false) {\n                    zoomAction(1);\n                }\n            }\n\n            function zoomOut() {\n                if (self.getState('enabled') !== false) {\n                    zoomAction(-1);\n                }\n            }\n\n            //build element (detached)\n            this.buttonZoomOut = this.getAreaBroker().getToolbox().createEntry({\n                control : 'zoomOut',\n                title : __('Zoom out'),\n                icon : 'remove'\n            });\n\n            this.buttonZoomIn = this.getAreaBroker().getToolbox().createEntry({\n                control : 'zoomIn',\n                title : __('Zoom in'),\n                icon : 'add'\n            });\n\n            //attach behavior\n            this.buttonZoomIn.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger('tool-zoomin');\n            });\n\n            //attach behavior\n            this.buttonZoomOut.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger('tool-zoomout');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.in) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.in, this.getName(), true), function () {\n                        testRunner.trigger('tool-zoomin');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n\n                if (pluginShortcuts.out) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.out, this.getName(), true), function () {\n                        testRunner.trigger('tool-zoomout');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', function (){\n                    self.zoom = standard;\n\n                    togglePlugin();\n                    self.disable();\n                })\n                .on('renderitem', function (){\n                    self.$container = $('#qti-content');\n                    self.$zoomTarget = $('.qti-item');\n\n                    self.enable();\n                })\n                .on('enabletools', function() {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                })\n                .on('tool-zoomin', zoomIn)\n                .on('tool-zoomout', zoomOut);\n        },\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + this.getName());\n        },\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.buttonZoomIn.enable();\n            this.buttonZoomOut.enable();\n        },\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.buttonZoomIn.disable();\n            this.buttonZoomOut.disable();\n        },\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.buttonZoomIn.show();\n            this.buttonZoomOut.show();\n        },\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.buttonZoomIn.hide();\n            this.buttonZoomOut.hide();\n        }\n    });\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.test-runner-scope .content-wrapper p.key-navigation-group,.test-runner-scope .content-wrapper div.key-navigation-group{padding:5px !important}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction){border-width:1px !important;border-style:solid;border-color:transparent}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction).focusin{border-color:#0e5d91 !important;outline:none}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction).qti-interaction .qti-choice.key-navigation-highlight{background:#e7eff4 !important}.test-runner-scope .content-wrapper span.key-navigation-group{border:none !important}.test-runner-scope .content-wrapper span.key-navigation-group.focusin{outline:solid #0e5d91 1px !important;outline-offset:1px}.test-runner-scope .test-sidebar .key-navigation-group.focusin{background:#e7eff4}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight .qti-navigator-tab{border-width:2px}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus{outline:none}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus .qti-navigator-tab{border-top-color:#222 !important;border-left-color:#222 !important;border-right-color:#222 !important}.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight{padding-left:8px;border-left:solid 2px #222}.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight .key-navigation-highlight:focus{outline:none}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group.focusin{-webkit-box-shadow:0 0 6px 2px #3e7da7;-moz-box-shadow:0 0 6px 2px #3e7da7;-ms-box-shadow:0 0 6px 2px #3e7da7;-o-box-shadow:0 0 6px 2px #3e7da7;box-shadow:0 0 6px 2px #3e7da7}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus{margin-bottom:0;border-bottom-color:#e7eff4 !important;outline:none}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus.active{border-bottom-color:transparent !important;background:#e7eff4 !important}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus:not(.active):not(:active) .li-inner{color:#e7eff4}header .settings-menu .key-navigation-group{padding-right:5px}header .settings-menu .key-navigation-group.focusin{background-color:rgba(14,93,145,0.5);padding-bottom:10px}header .settings-menu .key-navigation-highlight:focus{height:54px;color:white !important;border-bottom:solid 2px white !important}\\n\\n/*# sourceMappingURL=key-navigation.css.map */.text-to-speech{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;background-color:#f3f1ef;bottom:37px;box-shadow:0 0 15px 1px rgba(0,0,0,0.2);color:#222;left:-2px;padding:2px;position:absolute;width:146px}.text-to-speech>.action{background-color:#f3f1ef;display:inline-block;height:28px;position:relative;width:32px}.text-to-speech>.action>span{color:#222;font-size:15px !important;padding:0 !important;vertical-align:middle;left:0px}.text-to-speech>.action>.settings-menu{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;background-color:#f3f1ef;bottom:30px;box-shadow:0 0 15px 1px rgba(0,0,0,0.2);left:-1px;padding:2px;position:absolute}.text-to-speech>.action>.settings-menu>.option{background-color:#f3f1ef;height:30px;position:relative;width:30px}.text-to-speech>.action>.settings-menu>.option>span{color:#222;font-size:15px;padding:0;vertical-align:middle;left:0px}.text-to-speech>.action>.settings-menu>.option>span.icon-volume{left:1px}.text-to-speech>.action>.settings-menu>.option>.slider-container{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;background-color:#f3f1ef;height:12px;left:26px;margin:8px;padding:2px;position:relative;top:-22px;width:80px}.text-to-speech>.action>.settings-menu>.option>.slider-container .noUi-horizontal{height:6px}.text-to-speech>.action>.settings-menu>.option>.slider-container .noUi-horizontal .noUi-handle{top:-7px}.text-to-speech>.action>.settings-menu>.option>.hover-container{height:44px;left:20px;position:absolute;top:-8px;width:106px;z-index:-1}.text-to-speech>.action>.settings-menu>.option:hover{background-color:#f3f1ef}.text-to-speech>.action>.settings-menu>.option:hover>span{color:#9c9c9c}.text-to-speech>.action:hover{background-color:#f3f1ef}.text-to-speech>.action:hover>span{color:#9c9c9c}.text-to-speech>.action.active{background-color:#a4a9b1}.text-to-speech>.action.active>span{color:#4e4e4e}.text-to-speech>.action.disabled{background-color:#f3f1ef !important}.text-to-speech>.action.disabled>span{color:#d3d3d3}\\n\\n/*# sourceMappingURL=textToSpeech.css.map */');\n"]}