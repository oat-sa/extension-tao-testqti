{"version":3,"sources":["../../loader/bootstrap.js","../../core/format.js","../../util/urlParser.js","../../core/promise.js","../../core/logger/api.js","../../core/logger.js","../../core/router.js","../../lib/uuid.js","../../core/eventifier.js","../../ui/component/css/components!css","../../ui/component.js","../../util/regexEscape.js","../../util/wrapLongWords.js","../../util/encode.js","../../ui/feedback.js","../../util/url.js","../../core/moduleLoader.js","../../core/providerLoader.js","../../core/pluginLoader.js","../../core/providerRegistry.js","../../core/delegator.js","../../core/communicator.js","../../core/collections.js","../../core/promiseQueue.js","../../core/store/localstorage.js","../../core/store/indexeddb.js","../../core/store/memory.js","../../core/store.js","../../core/tokenStore.js","../../core/tokenHandler.js","../../core/connectivity.js","css!taoQtiTestCss/new-test-runner","../controller/runner/runner.js","onLayerEnd0.js","module-create.js","/Users/bartlomiejmarszal/www/nccer/nccer-deploy/tao/views/build/config-wrap-end-default.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","define('core/format',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var pattern = /(%[sdj])/g;\n    /**\n     * Enables you to format strings/message, using the pattern:\n     *  - %s : string\n     *  - %d : number\n     *  - %j : json\n     *\n     * @example format('Resize %s to %d%', 'width', 100); //returns Resize width to 100%\n     * @exports core/format\n     * @param {String} message - the message to format\n     * @param {...String|Number|Object} [replacements] -  the replacements arguments in the order defined in the message\n     * @returns {String} the formatted message\n     */\n\n    function format (message) {\n      var replacements = Array.prototype.slice.call(arguments, 1);\n      return _.reduce(message.match(pattern), function (acc, match, index) {\n        var replacement = '';\n\n        if (undefined !== replacements[index]) {\n          switch (match) {\n            case '%d':\n              replacement = Number(replacements[index]);\n              break;\n\n            case '%j':\n              try {\n                replacement = JSON.stringify(replacements[index]).replace(/\"/g, '');\n              } catch (e) {}\n\n              break;\n\n            default:\n              replacement = replacements[index];\n              break;\n          }\n\n          message = message.replace(match, replacement);\n        }\n\n        return message;\n      }, message);\n    }\n\n    return format;\n\n});\n\n","define('util/urlParser',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n    var urlParts = ['hash', 'host', 'hostname', 'pathname', 'port', 'protocol', 'search'];\n    /**\n     * Parse an URL and gives you access to its parts\n     * @exports urlParser\n     * @constructor\n     * @param {String} url\n     */\n\n    function UrlParser(url) {\n      var detachedAnchor;\n      this.url = url; //use the parser within the browser DOM engine\n      //thanks to https://gist.github.com/jlong/2428561\n\n      detachedAnchor = document.createElement('a');\n      detachedAnchor.href = url;\n      this.data = _.pick(detachedAnchor, urlParts);\n      this.params = UrlParser.extractParams(this.data.search);\n    }\n    /**\n     * Get an object that represents query params from the search string\n     * @memberOf UrlParser\n     * @param {String} search\n     * @returns {Object} key : value\n     */\n\n\n    UrlParser.extractParams = function (search) {\n      var params = {};\n      search.replace(/^\\?/, '').replace(/([^=&]+)=([^&]*)/g, function (m, key, value) {\n        params[decodeURIComponent(key)] = decodeURIComponent(value);\n      });\n      return params;\n    };\n    /**\n     * Get a part of the url\n     * @memberOf UrlParser\n     * @param {string} what - in 'hash', 'host', 'hostname', 'pathname', 'port', 'protocol', 'search'\n     * @returns {String|Boolean} the requested url part or false\n     */\n\n\n    UrlParser.prototype.get = function (what) {\n      return _.contains(urlParts, what) ? this.data[what] : false;\n    };\n    /**\n     * Get an object that represents the URL's query params\n     * @memberOf UrlParser\n     * @returns {Object} key : value\n     */\n\n\n    UrlParser.prototype.getParams = function () {\n      return this.params;\n    };\n    /**\n     * Replace  the parameter set\n     * @memberOf UrlParser\n     * @param {Object} params - of key:value\n     */\n\n\n    UrlParser.prototype.setParams = function (params) {\n      if (_.isObject(params)) {\n        this.params = params;\n      }\n    };\n    /**\n     * Add a new parameter\n     * @memberOf UrlParser\n     * @param {String} key\n     * @param {String} value\n     */\n\n\n    UrlParser.prototype.addParam = function (key, value) {\n      if (key) {\n        this.params[key] = value;\n      }\n    };\n    /**\n     * Get each paths chunk\n     * @memberOf UrlParser\n     * @returns {Array} - the paths\n     */\n\n\n    UrlParser.prototype.getPaths = function () {\n      return this.data.pathname.replace(/^\\/|\\/$/g, '').split('/');\n    };\n    /**\n     * Get the URL\n     * @param {Array} [exclude} - url parts to exclude in hosts, params and hash\n     * @returns {String} the url\n     */\n\n\n    UrlParser.prototype.getUrl = function (exclude) {\n      var url = '';\n      exclude = exclude || [];\n\n      if (this.data) {\n        if (this.data.hostname && !_.contains(exclude, 'host')) {\n          url += (this.data.protocol ? this.data.protocol : 'http:') + '//' + this.data.hostname.replace(/\\/$/, ''); //the value of the port seems to be different regardign the browser, so we prevent adding port if not usual\n\n          if (this.data.port && this.data.port !== 80 && this.data.port !== '80' && this.data.port !== '0') {\n            url += ':' + this.data.port;\n          }\n        }\n\n        if (!/\\/$/.test(url) && !/^\\//.test(this.data.pathname)) {\n          url += '/';\n        }\n\n        url += this.data.pathname; //there is always a path\n\n        if (this.params && !_.contains(exclude, 'params')) {\n          url += '?';\n\n          _.forEach(this.params, function (value, key) {\n            url += encodeURIComponent(key) + '=' + encodeURIComponent(value) + '&';\n          });\n\n          url = url.substring(0, url.length - 1);\n        }\n\n        if (this.data.hash && !_.contains(exclude, 'hash')) {\n          url += this.data.hash;\n        }\n      }\n\n      return url;\n    };\n    /**\n     * Get the URL without parameters, hash and file if\n     * @returns {String} the url\n     */\n\n\n    UrlParser.prototype.getBaseUrl = function () {\n      var baseUrl = this.getUrl(['params', 'hash']);\n      var paths = this.getPaths();\n      var lastPart = paths[paths.length - 1]; //remove if trailing path token is a file\n\n      if (paths.length > 0 && /\\.[a-z]+$/.test(lastPart)) {\n        baseUrl = baseUrl.replace(lastPart, '').replace(/\\/\\/$/, '/');\n      }\n\n      return baseUrl;\n    };\n    /**\n     * is the current URL in the same domain than the one in paramter\n     * based on Cross Origin Resource Sharing rules.\n     * @memberOf UrlParser\n     * @param {String|UrlParser} [url = window.location] - to compare with\n     * @returns {Boolean} true if same domain\n     * @throws {TypeError} with wrong parameters\n     */\n\n\n    UrlParser.prototype.sameDomain = function (url) {\n      var parsedUrl;\n\n      if (typeof url === 'undefined') {\n        parsedUrl = new UrlParser(window.location);\n      }\n\n      if (typeof url === 'string') {\n        parsedUrl = new UrlParser(url);\n      }\n\n      if (url instanceof UrlParser) {\n        parsedUrl = url;\n      }\n\n      if (!(parsedUrl instanceof UrlParser)) {\n        throw new TypeError('Invalid url format');\n      }\n\n      return this.get('protocol') === 'data:' || parsedUrl.get('protocol') === 'data:' || this.get('protocol') === parsedUrl.get('protocol') && this.get('hostname') === parsedUrl.get('hostname') && this.get('port') === parsedUrl.get('port');\n    };\n    /**\n     * @deprecated badly named\n     * @see {UrlParser.sameDomain} instead\n     */\n\n\n    UrlParser.prototype.checkCORS = UrlParser.prototype.sameDomain;\n\n    return UrlParser;\n\n});\n\n","define('core/promise',[],function () { 'use strict';\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2015-2019 Open Assessment Technologies SA\n\t */\n\n\treturn Promise;\n\n});\n\n","define('core/logger/api',['lodash', 'core/format', 'core/promise'], function (_, format, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    format = format && format.hasOwnProperty('default') ? format['default'] : format;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * The default level\n     */\n\n    var defaultLevel = 'info';\n    var levels = {\n      fatal: 60,\n      // The service/app is going to stop or become unusable now. An operator should definitely look into this soon.\n      error: 50,\n      // Fatal for a particular request, but the service/app continues servicing other requests. An operator should look at this soon(ish).\n      warn: 40,\n      // A note on something that should probably be looked at by an operator eventually.\n      info: 30,\n      // Detail on regular operation.\n      debug: 20,\n      // Anything else, i.e. too verbose to be included in \"info\" level.\n      trace: 10 // Logging from external libraries used by your app or very detailed application logging.\n\n    };\n    /**\n     * Major version of the node-bunyan package (for compat)\n     */\n\n    var bunyanVersion = 0;\n    /**\n     * Where messages dwells\n     */\n\n    var logQueue = [];\n    /**\n     * Get the actual level as a string,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {String} the level\n     */\n\n    var getLevel = function getLevel(level) {\n      if (typeof level === 'undefined' || _.isString(level) && !_.has(levels, level)) {\n        return defaultLevel;\n      }\n\n      if (_.isNumber(level)) {\n        return _.findKey(levels, function (l) {\n          return l === level;\n        }) || defaultLevel;\n      }\n\n      return level;\n    };\n    /**\n     * Get the actual level as a number,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {Number} the level\n     */\n\n\n    var getLevelNum = function getLevelNum(level) {\n      if (_.isString(level) && _.has(levels, level)) {\n        return levels[level];\n      }\n\n      if (_.isNumber(level) && _.contains(levels, level)) {\n        return level;\n      }\n\n      return levels[defaultLevel];\n    };\n    /**\n     * Check whether the given level is above the minimum level threshold\n     * @param {String|Number} minlevel- the minimum level\n     * @param {String|Number} [level] - the level to check\n     * @returns {Boolean}\n     */\n\n\n    var checkMinLevel = function checkMinLevel(minLevel, level) {\n      return getLevelNum(level) >= getLevelNum(minLevel);\n    };\n    /**\n     * Creates a logger instance\n     *\n     * @param {String} name - each logger instance MUST have a name\n     * @param {String|Number} [minLevel] - the minimum logging level\n     * @param {Object} [fields] - fields to add to all records\n     *\n     * @returns {logger} a new logger instance\n     */\n\n\n    var loggerFactory = function loggerFactory(name, minLevel, fields) {\n      var baseRecord;\n      var logger;\n\n      if (!_.isString(name) || _.isEmpty(name)) {\n        throw new TypeError('A logger needs a name');\n      }\n\n      if (_.isPlainObject(minLevel) && typeof field === 'undefined') {\n        fields = minLevel;\n        minLevel = defaultLevel;\n      }\n\n      baseRecord = _.defaults(fields || {}, {\n        name: name,\n        pid: 1,\n        // only for compat\n        hostname: navigator.userAgent\n      });\n      /**\n       * Exposes a log method and one by log level, like logger.trace()\n       *\n       * @typedef logger\n       */\n\n      logger = {\n        /**\n         * Log messages by delegating to the provider\n         *\n         * @param {String|Number} level - the log level\n         * @param {Object} [recordFields] - fields to add to the log record\n         * @param {String|Error} message - the message to log\n         * @param {...String} [rest] - rest parameters if the message is formatted\n         * @returns {logger} chains\n         */\n        log: function log(level, recordFields, message) {\n          var record;\n          var err;\n          var rest = [];\n          var time = new Date().toISOString(); //without providers or not the level, we don't log.\n\n          if (loggerFactory.providers === false || !checkMinLevel(minLevel || defaultLevel, level)) {\n            return;\n          }\n\n          if (_.isString(recordFields) || recordFields instanceof Error) {\n            message = recordFields;\n            recordFields = {};\n            rest = [].slice.call(arguments, 2);\n          } else {\n            rest = [].slice.call(arguments, 3);\n          }\n\n          record = {\n            level: getLevel(level),\n            v: bunyanVersion,\n            time: time\n          };\n\n          if (checkMinLevel(levels.error, level) || message instanceof Error) {\n            if (message instanceof Error) {\n              err = message;\n            } else {\n              message = _.isObject(message) ? JSON.stringify(message) : message;\n              err = new Error(message);\n            }\n\n            record.msg = err.message;\n            record.err = err;\n          } else {\n            record.msg = format.apply(null, [message].concat(rest));\n          }\n\n          _.merge(record, baseRecord, recordFields);\n\n          logQueue.push(record);\n          loggerFactory.flush();\n          return this;\n        },\n\n        /**\n         * Get/set the default level of the logger\n         * @param {String|Number} [level] - set the default level\n         * @returns {String|logger} the default level as a getter or chains as a setter\n         */\n        level: function level(value) {\n          if (typeof value !== 'undefined') {\n            //update the partial function\n            minLevel = getLevelNum(value);\n            return this;\n          }\n\n          return getLevel(minLevel);\n        },\n\n        /**\n         * Fork the current logger to create a child logger :\n         * same config + child fields\n         *\n         * @param {Object} [childFields] - specialized child fields\n         * @return {logger} the child logger\n         */\n        child: function child(childFields) {\n          return loggerFactory(name, minLevel, _.defaults(childFields, baseRecord));\n        }\n      }; //augment the logger by each level\n\n      return _.reduce(levels, function reduceLogLevel(target, level, levelName) {\n        target[levelName] = _.partial(logger.log, level);\n        return target;\n      }, logger);\n    };\n    /**\n     * Exposes the levels\n     * @type {Object}\n     */\n\n\n    loggerFactory.levels = levels;\n    /**\n     * The list of providers bound to the logger.\n     * @type {Boolean|Array} false means we don't log, array even empty we keep the logs\n     */\n\n    loggerFactory.providers = false;\n    /**\n     * Load providers from AMD modules\n     * @param {Object} providerConfigs - provider's modules to load and register\n     * @returns {Promise} resolves once modules are registered\n     */\n\n    loggerFactory.load = function load(providerConfigs) {\n      var self = this;\n      var modules = [];\n      this.providers = [];\n      return new Promise(function (resolve, reject) {\n        //we can load the loggers dynamically\n        _.forEach(providerConfigs, function (providerConfig, providerName) {\n          modules.push(providerName);\n        });\n\n        require(modules, function () {\n          var loadedProviders = [].slice.call(arguments);\n\n          _.forEach(loadedProviders, function (provider, moduleKey) {\n            try {\n              self.register(provider, providerConfigs[modules[moduleKey]]);\n            } catch (err) {\n              reject(err);\n            }\n          }); //flush messages that arrived before the providers are there\n\n\n          self.flush();\n          resolve();\n        }, reject);\n      });\n    };\n    /**\n     * A logger provider provides with a way to log\n     * @typedef {Object} loggerProvider\n     * @property {Function} log - called with the message in parameter\n     * @param {Object} providerConfig - provider's config\n     * @throws TypeError\n     */\n\n\n    loggerFactory.register = function register(provider, providerConfig) {\n      if (!_.isPlainObject(provider) || !_.isFunction(provider.log)) {\n        throw new TypeError('A log provider is an object with a log method');\n      } //propogate checkMinLevel function\n\n\n      provider.checkMinLevel = checkMinLevel;\n\n      if (_.isFunction(provider.setConfig)) {\n        provider.setConfig(providerConfig);\n      }\n\n      this.providers = this.providers || [];\n      this.providers.push(provider);\n    };\n    /**\n     * Flush the messages queue into the providers\n     */\n\n\n    loggerFactory.flush = function flush() {\n      if (_.isArray(this.providers) && this.providers.length > 0) {\n        _.forEach(logQueue, function (message) {\n          //forward to the providers\n          _.forEach(loggerFactory.providers, function (provider) {\n            provider.log.call(provider, message);\n          });\n        }); //clear the queue\n\n\n        logQueue = [];\n      }\n    };\n    /**\n     * Change the default level for all loggers\n     * @param {String|Number} [level] - set the default level\n     * @returns {String} the defined level\n     */\n\n\n    loggerFactory.setDefaultLevel = function setDefaultLevel(level) {\n      defaultLevel = getLevel(level);\n      return defaultLevel;\n    };\n\n    return loggerFactory;\n\n});\n\n","define('core/logger',['lodash', 'module', 'core/logger/api'], function (_, module, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * The default configuration if nothing\n     * is found on the module config\n     */\n\n    var defaultConfig = {\n      level: loggerFactory.levels.warn,\n      loggers: {\n        'core/logger/console': {\n          level: 'warn'\n        }\n      }\n    }; //the logger providers are configured through the AMD module config\n\n    var config = _.defaults(module.config() || {}, defaultConfig);\n\n    var logger = loggerFactory('core/logger');\n    loggerFactory.setDefaultLevel(config.level);\n    loggerFactory.load(config.loggers);\n    /**\n     * Catch uncaught errors\n     * @param msg - error message\n     * @param url - current url\n     * @param line - line number\n     * @param col - column number\n     * @param error - error object (not all browsers support).\n     * @return {boolean}\n     */\n\n    window.onerror = function (msg, url, line, col, error) {\n      logger.error(\"Caught[via window.onerror]: '\" + msg + \"' from \" + url + ':' + line + ':' + col);\n    };\n    /**\n     * Expose explicitely an direct way to activate log levels\n     * @param {String|Number} level - the new log level\n     * @returns {String} the defined level\n     */\n\n\n    window.setTaoLogLevel = function setTaoLogLevel(level) {\n      return loggerFactory.setDefaultLevel(level);\n    }; //exposes the API\n\n    return loggerFactory;\n\n});\n\n","define('core/router',['lodash', 'context', 'util/urlParser', 'core/logger', 'core/promise'], function (_, context, UrlParser, loggerFactory, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    context = context && context.hasOwnProperty('default') ? context['default'] : context;\n    UrlParser = UrlParser && UrlParser.hasOwnProperty('default') ? UrlParser['default'] : UrlParser;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n    var logger = loggerFactory('router');\n    /**\n     * The router helps you to execute a controller when an URL maps a defined route.\n     *\n     * The routes are defined by extension, into the module {extension}/controller/routes\n     * @see http://forge.taotesting.com/projects/tao/wiki/Front_js\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     * @exports router\n     */\n\n    var router = {\n      /**\n       * Routing dispatching: execute the controller for the given URL.\n       * If more than one URL is provided, we try to dispatch until a valid routing if found\n       * (used mainly for forward/redirects).\n       *\n       * @param {Array|String} url - the urls to try to dispatch\n       * @param {Function} cb - a callback executed once dispatched\n       */\n      dispatch: function dispatch(urls, cb) {\n        var self = this;\n\n        if (!_.isArray(urls)) {\n          urls = [urls];\n        }\n\n        return Promise.all(urls.map(function (url) {\n          return self.dispatchUrl(url);\n        })).then(function () {\n          if (_.isFunction(cb)) {\n            cb();\n          }\n        }).catch(function (err) {\n          logger.error(err);\n        });\n      },\n\n      /**\n       * Parse an URL and extract MVC route\n       * @param {String} url - the URL to parse\n       * @returns {Object} the route structure\n       */\n      parseMvcUrl: function parseMvcUrl(url) {\n        var route = null;\n        var parser;\n        var paths;\n\n        if (_.isString(url) && !_.isEmpty(url)) {\n          parser = new UrlParser(url);\n          paths = parser.getPaths();\n\n          if (paths.length >= 3) {\n            route = {\n              action: paths[paths.length - 1],\n              module: paths[paths.length - 2],\n              extension: paths[paths.length - 3],\n              params: parser.getParams()\n            };\n          }\n        }\n\n        return route;\n      },\n\n      /**\n       * If in production mode, we load the extension bundle\n       * @param {Object} route\n       * @param {String} route.extension\n       * @returns {Promise} once loaded\n       */\n      loadRouteBundle: function loadRouteBundle(route) {\n        //only for bundle mode and route which are not TAO (self contained)\n        if (route && route.extension && context.bundle && route.extension !== 'tao') {\n          return new Promise(function (resolve) {\n            var routeBundle = route.extension + '/loader/' + route.extension + '.min';\n\n            window.require([routeBundle], resolve, function (err) {\n              //do not break in case of error, module loading will take over\n              logger.warn('Unable to load ' + routeBundle + ' : ' + err.message);\n              resolve();\n            });\n          });\n        }\n\n        return Promise.resolve();\n      },\n\n      /**\n       * Loads the extension routes\n       *\n       * @param {Object} route\n       * @param {String} route.extension\n       * @returns {Promise<Object>} resolves with the routes data\n       */\n      loadRoute: function loadRoute(route) {\n        if (route && route.extension) {\n          return new Promise(function (resolve, reject) {\n            var routeModule = route.extension === 'tao' ? 'controller/routes' : route.extension + '/controller/routes'; //loads the routing for the current extensino\n\n            window.require([routeModule], resolve, reject);\n          });\n        }\n\n        return Promise.resolve();\n      },\n\n      /**\n       * Dispatch the given URL :\n       *  - get the URL route\n       *  - load the route bundle\n       *  - load the routes routing\n       *  - load the route's controllers\n       *  - execute the start method of those controllers\n       * @param {String} url - the\n       */\n      dispatchUrl: function dispatchUrl(url) {\n        var self = this; //parse the URL\n\n        var route = this.parseMvcUrl(url);\n        logger.debug('Dispatch URL ' + url);\n        return this.loadRouteBundle(route).then(function () {\n          return self.loadRoute(route);\n        }).then(function (routes) {\n          var moduleRoutes;\n          var dependencies = [];\n          var styles = [];\n          var moduleConfig = {};\n          var action;\n\n          var mapStyle = function mapStyle(style) {\n            return 'css!' + route.extension + 'Css/' + style;\n          };\n\n          if (routes && routes[route.module]) {\n            //get the dependencies for the current context\n            moduleRoutes = routes[route.module]; //resolve controller dependencies\n\n            if (moduleRoutes.deps) {\n              dependencies = dependencies.concat(moduleRoutes.deps);\n            }\n\n            if (moduleRoutes.css) {\n              styles = _.isArray(moduleRoutes.css) ? moduleRoutes.css : [moduleRoutes.css];\n              dependencies = dependencies.concat(_.map(styles, mapStyle));\n            } //resolve actions dependencies\n\n\n            if (moduleRoutes.actions && moduleRoutes.actions[route.action] || moduleRoutes[route.action]) {\n              action = moduleRoutes.actions[route.action] || moduleRoutes[route.action];\n\n              if (_.isString(action) || _.isArray(action)) {\n                dependencies = dependencies.concat(action);\n              }\n\n              if (action.deps) {\n                dependencies = dependencies.concat(action.deps);\n              }\n\n              if (action.css) {\n                styles = _.isArray(action.css) ? action.css : [action.css];\n                dependencies = dependencies.concat(_.map(styles, mapStyle));\n              }\n            } //alias controller/ to extension/controller\n\n\n            dependencies = _.map(dependencies, function (dep) {\n              return /^controller/.test(dep) && route.extension !== 'tao' ? route.extension + '/' + dep : dep;\n            }); //URL parameters are given by default to the required module (through module.confid())\n\n            if (!_.isEmpty(route.params)) {\n              _.forEach(dependencies, function (dependency) {\n                //inject parameters using the curent requirejs contex. This rely on a private api...\n                moduleConfig[dependency] = _.merge(_.clone(window.requirejs.s.contexts._.config.config[dependency] || {}), route.params);\n              });\n\n              window.requirejs.config({\n                config: moduleConfig\n              });\n            }\n          }\n\n          return dependencies;\n        }).then(function (dependencies) {\n          if (dependencies && dependencies.length) {\n            logger.debug('Load controllers : ' + dependencies.join(', ')); //loads module and action's dependencies and start the controllers.\n\n            return new Promise(function (resolve, reject) {\n              window.require(dependencies, function () {\n                _.forEach(arguments, function (dependency) {\n                  if (dependency && _.isFunction(dependency.start)) {\n                    dependency.start();\n                  }\n                });\n\n                logger.debug(arguments.length + ' controllers started');\n                resolve();\n              }, reject);\n            });\n          }\n        });\n      }\n    };\n\n    return router;\n\n});\n\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('lib/uuid',factory) :\n    (global = global || self, global.uuid = factory());\n}(this, function () { 'use strict';\n\n    /**\n     * UUID generator\n     *\n     * This is a modified version of Robert Kieffer's Math.uuid\n     * from http://www.broofa.com/2008/09/javascript-uuid-function/\n     *\n     * It differs in three ways from the original work:\n     * - uuid is no longer attached to the Math object\n     * - script is now written in require.js style\n     * - alternative implementations have been removed\n     *\n     * Additionally the usage examples have been adapted to reflect these changes.\n     *\n     * Original credits:\n     * Math.uuid.js (v1.4)\n     * http://www.broofa.com\n     * mailto:robert@broofa.com\n     *\n     * Copyright (c) 2010 Robert Kieffer\n     * Dual licensed under the MIT and GPL licenses.\n     *\n     */\n\n    // Private array of chars to use\n    var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n\n    /**\n        * Generate a random uuid\n        *\n        * USAGE: uuid(length, radix)\n        *   length - the desired number of characters\n        *   radix  - the number of allowable values for each character.\n        *\n        * EXAMPLES:\n        *   // No arguments  - returns RFC4122, version 4 ID\n        *   >>> uuid()\n        *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n        *\n        *   // One argument - returns ID of the specified length\n        *   >>> uuid(15)     // 15 character ID (default base=62)\n        *   \"VcydxgltxrVZSTV\"\n        *\n        *   // Two arguments - returns ID of the specified length, and radix. (Radix must be <= 62)\n        *   >>> uuid(8, 2)  // 8 character ID (base=2)\n        *   \"01001010\"\n        *   >>> uuid(8, 10) // 8 character ID (base=10)\n        *   \"47473046\"\n        *   >>> uuid(8, 16) // 8 character ID (base=16)\n        *   \"098F4D35\"\n        *\n        * @param len\n        * @param radix\n        * @returns {*}\n        * @private\n        */\n    var uuid = function (len, radix) {\n        var chars = CHARS, uuid = [], i, r;\n        radix = radix || chars.length;\n\n        // Compact form\n        if (len) {\n            for (i = 0; i < len; i++) {\n                uuid[i] = chars[0 | Math.random() * radix];\n            }\n        }\n        // rfc4122 form\n        else {\n\n            // rfc4122 requires these characters\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n            uuid[14] = '4';\n\n            // Fill in random data.  At i === 19 set the high bits of clock sequence as\n            // per rfc4122, sec. 4.1.5\n            for (i = 0; i < 36; i++) {\n                if (!uuid[i]) {\n                    r = 0 | Math.random() * 16;\n                    uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\n                }\n            }\n        }\n\n        return uuid.join('');\n    };\n\n    return uuid;\n\n}));\n\n","define('core/eventifier',['lodash', 'core/promise', 'lib/uuid', 'core/logger'], function (_, Promise, uuid, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * All events have a namespace, this one is the default\n     */\n\n    var defaultNs = '@';\n    /**\n     * Namespace that targets all event\n     */\n\n    var globalNs = '*';\n    /**\n     * Create a logger\n     */\n\n    var eventifierLogger = loggerFactory('core/eventifier');\n    /**\n     * Get the list of events from an eventName string (ie, separated by spaces)\n     * @param {String} eventNames - the event strings\n     * @returns {String[]} the event list (no empty, no duplicate)\n     */\n\n    function getEventNames(eventNames) {\n      if (!_.isString(eventNames) || _.isEmpty(eventNames)) {\n        return [];\n      }\n\n      return _(eventNames.split(/\\s/g)).compact().uniq().value();\n    }\n    /**\n     * Get the name part of an event name: the 'foo' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the name part\n     */\n\n\n    function getName(eventName) {\n      if (eventName.indexOf('.') > -1) {\n        return eventName.substr(0, eventName.indexOf('.'));\n      }\n\n      return eventName;\n    }\n    /**\n     * Get the namespace part of an event name: the 'bar' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the namespace, that defaults to defaultNs\n     */\n\n\n    function getNamespace(eventName) {\n      if (eventName.indexOf('.') > -1) {\n        return eventName.substr(eventName.indexOf('.') + 1);\n      }\n\n      return defaultNs;\n    }\n    /**\n     * Creates a new EventHandler object structure\n     * @returns {Object} the handler structure\n     */\n\n\n    function getHandlerObject() {\n      return {\n        before: [],\n        between: [],\n        after: []\n      };\n    }\n    /**\n     * Makes the target an event emitter by delegating calls to the event API.\n     * @param {Object} [target] - the target object, a new plain object is created when omited.\n     * @returns {Object} the target for conveniance\n     */\n\n\n    function eventifier(target) {\n      var targetName;\n      var logger;\n      var stoppedEvents; //it stores all the handlers under ns/name/[handlers]\n\n      var eventHandlers = {};\n      /**\n       * Get the handlers for an event type\n       * @param {String} eventName - the event name, namespace included\n       * @param {String} [type='between'] - the type of event in before, between and after\n       * @returns {Function[]} the handlers\n       */\n\n      var getHandlers = function getHandlers(eventName, type) {\n        var name = getName(eventName);\n        var ns = getNamespace(eventName);\n        type = type || 'between';\n        eventHandlers[ns] = eventHandlers[ns] || {};\n        eventHandlers[ns][name] = eventHandlers[ns][name] || getHandlerObject();\n        return eventHandlers[ns][name][type];\n      };\n      /**\n       * The API itself is just a placeholder, all methods will be delegated to a target.\n       */\n\n\n      var eventApi = {\n        /**\n         * Attach an handler to an event.\n         * Calling `on` with the same eventName multiple times add callbacks: they\n         * will all be executed.\n         *\n         * @example target.on('foo', function(bar){ console.log('Cool ' + bar) } );\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        on: function on(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName).push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * Remove ALL handlers for an event.\n         *\n         * @example remove ALL\n         * target.off('foo');\n         *\n         * @example remove targeted namespace\n         * target.off('foo.bar');\n         *\n         * @example remove all handlers by namespace\n         * target.off('.bar');\n         *\n         * @example remove all namespaces, keep non namespace\n         * target.off('.*');\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @returns {Object} the target object\n         */\n        off: function off(eventNames) {\n          _.forEach(getEventNames(eventNames), function (eventName) {\n            var name = getName(eventName);\n            var ns = getNamespace(eventName);\n            var offNamespaces;\n\n            if (ns && !name) {\n              if (ns === globalNs) {\n                offNamespaces = {};\n                offNamespaces[defaultNs] = eventHandlers[defaultNs];\n                eventHandlers = offNamespaces;\n              } else {\n                //off the complete namespace\n                eventHandlers[ns] = {};\n              }\n            } else {\n              _.forEach(eventHandlers, function (nsHandlers, namespace) {\n                if (nsHandlers[name] && (ns === defaultNs || ns === namespace)) {\n                  nsHandlers[name] = getHandlerObject();\n                }\n              });\n            }\n          });\n\n          return this;\n        },\n\n        /**\n         * Remove ALL registered handlers\n         *\n         * @example remove ALL\n         * target.removeAllListeners();\n         *\n         * @this the target\n         * @returns {Object} the target object\n         */\n        removeAllListeners: function removeAllListeners() {\n          // full erase\n          eventHandlers = {};\n          return this;\n        },\n\n        /**\n         * Trigger an event.\n         *\n         * @example target.trigger('foo', 'Awesome');\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event to trigger, or multiple events separated by a space\n         * @returns {Object} the target object\n         */\n        trigger: function trigger(eventNames) {\n          var self = this;\n          var args = [].slice.call(arguments, 1);\n          stoppedEvents = {};\n\n          _.forEach(getEventNames(eventNames), function (eventName) {\n            var ns = getNamespace(eventName);\n            var name = getName(eventName); //check which ns needs to be executed and then merge the handlers to be executed\n\n            var mergedHandlers = _(eventHandlers).filter(function (nsHandlers, namespace) {\n              return nsHandlers[name] && (ns === defaultNs || ns === namespace || namespace === globalNs);\n            }).reduce(function (acc, nsHandlers) {\n              acc.before = acc.before.concat(nsHandlers[name].before);\n              acc.between = acc.between.concat(nsHandlers[name].between);\n              acc.after = acc.after.concat(nsHandlers[name].after);\n              return acc;\n            }, getHandlerObject());\n\n            logger.trace({\n              event: eventName,\n              args: args\n            }, 'trigger %s', eventName);\n\n            if (mergedHandlers) {\n              triggerAllHandlers(mergedHandlers, name, ns);\n            }\n          });\n\n          function triggerAllHandlers(allHandlers, name, ns) {\n            var event = {\n              name: name,\n              namespace: ns\n            };\n\n            if (allHandlers.before.length) {\n              triggerBefore(allHandlers.before, event).then(function () {\n                triggerBetween(allHandlers, event);\n              }).catch(function (err) {\n                logHandlerStop('before', event, err);\n              });\n            } else {\n              triggerBetween(allHandlers, event);\n            }\n          }\n\n          function triggerBefore(handlers, event) {\n            var pHandlers,\n                beforeArgs = args.slice(); // .before() handlers will get a special 'event' object as their first parameter\n\n            beforeArgs.unshift(event);\n            pHandlers = handlers.map(function (handler) {\n              // .before() handlers use to return false to cancel the call stack\n              // to maintain backward compatibility, we treat this case as a rejected Promise\n              var value = shouldStop(event.name) ? false : handler.apply(self, beforeArgs);\n              return value === false ? Promise.reject() : value;\n            });\n            return Promise.all(pHandlers);\n          }\n\n          function triggerBetween(allHandlers, event) {\n            if (shouldStop(event.name)) {\n              logHandlerStop('before', event); // .stopEvent() has been called in an async .before() callback\n            } else {\n              // trigger the event handlers\n              triggerHandlers(allHandlers.between, event).then(function () {\n                triggerAfter(allHandlers.after, event);\n              }).catch(function (err) {\n                logHandlerStop('on', event, err);\n              });\n            }\n          }\n\n          function triggerAfter(handlers, event) {\n            if (shouldStop(event.name)) {\n              logHandlerStop('on', event); // .stopEvent() has been called in an async .on() callback\n            } else {\n              triggerHandlers(handlers, event).then(function () {\n                if (shouldStop(event.name)) {\n                  logHandlerStop('after', event); // .stopEvent() has been called in an async .after() callback\n                }\n              }).catch(function (err) {\n                logHandlerStop('after', event, err);\n              });\n            }\n          }\n\n          function triggerHandlers(handlers, event) {\n            var pHandlers;\n            pHandlers = handlers.map(function (handler) {\n              return shouldStop(event.name) ? Promise.reject() : handler.apply(self, args);\n            });\n            return Promise.all(pHandlers);\n          }\n\n          function logHandlerStop(stoppedIn, event, err) {\n            if (err instanceof Error) {\n              logger.error(err);\n            }\n\n            logger.trace({\n              err: err,\n              event: event.name,\n              stoppedIn: stoppedIn\n            }, event.name + ' handlers stopped');\n          }\n\n          function shouldStop(name) {\n            return stoppedEvents[name];\n          }\n\n          return this;\n        },\n\n        /**\n         * Register a callback that is executed before the given event name\n         * Provides an opportunity to cancel the execution of the event if one of the returned value is false\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        before: function before(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName, 'before').push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * Register a callback that is executed after the given event name\n         * The handlers will all be executed, no matter what\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        after: function after(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName, 'after').push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * If triggered into an sync handler, this immediately cancels the execution of all following handlers\n         * regardless of their category\n         * If triggered asynchronously, this will only cancel the next category of handlers:\n         * - .on() and .after() if triggered during a .before() handler\n         * - .after() if triggered during a .on() handler\n         * - nothing if triggered during a .after() handler\n         * In an async context, you can also reject a Promise with the same results\n         *\n         * @param {string} name - of the event to stop\n         */\n        stopEvent: function stopEvent(name) {\n          if (_.isString(name) && !_.isEmpty(name.trim())) {\n            stoppedEvents[name.trim()] = true;\n          }\n        },\n\n        /**\n         * Spread events to another eventifier object.\n         * So when an event is triggered on the current target,\n         * it get's triggered on the destination too.\n         *\n         * Be careful, the forward will be triggered only if the event reach the `on` steps\n         * (it can be canceled by a before).\n         *\n         * @param {eventifier} destination - the destination emitter\n         * @param {String|String[]} eventNames - the list of events to forward\n         * @returns {Object} target - chains\n         */\n        spread: function spread(destination, eventNames) {\n          var self = this;\n\n          if (destination && _.isFunction(destination.trigger)) {\n            if (_.isString(eventNames)) {\n              eventNames = getEventNames(eventNames);\n            }\n\n            _.forEach(eventNames, function (eventName) {\n              self.on(eventName, function forwardEventTo() {\n                var args = [eventName].concat([].slice.call(arguments));\n                destination.trigger.apply(destination, args);\n              });\n            });\n          }\n\n          return this;\n        }\n      };\n      target = target || {}; //try to get something that looks like a name, an id or generate one only for logging purposes\n\n      targetName = target.name || target.id || target.serial || uuid(6); //create a child logger per eventifier\n\n      logger = eventifierLogger.child({\n        target: targetName\n      });\n\n      _(eventApi).functions().forEach(function (method) {\n        if (_.isFunction(target[method])) {\n          eventifierLogger.warn('The target object has already a method named ' + method, target);\n        }\n\n        target[method] = function delegate() {\n          var args = [].slice.call(arguments);\n          return eventApi[method].apply(target, args);\n        };\n      });\n\n      return target;\n    }\n\n    return eventifier;\n\n});\n\n","\ndefine('css!ui/component/css/components',[],function(){});\n","define('ui/component',['jquery', 'lodash', 'core/eventifier', 'handlebars', 'i18n', 'lib/dompurify/purify', 'css!ui/component/css/components.css'], function ($$1, _, eventifier, Handlebars, __, DOMPurify, components_css) { 'use strict';\n\n  $$1 = $$1 && $$1.hasOwnProperty('default') ? $$1['default'] : $$1;\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n    return \"<div class=\\\"component\\\"></div>\";\n    });\n  function defaultTpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n   */\n  var _slice = [].slice;\n  /**\n   * Handles the resize of the component regarding the config set\n   */\n\n  function delegatedResize() {\n    var width = this.config.width;\n    var height = this.config.height;\n    var $container = this.getContainer();\n    var $element = this.getElement();\n\n    if ($container) {\n      if ('auto' === width) {\n        width = $container.width();\n      }\n\n      if ('auto' === height) {\n        height = $container.height();\n      }\n    }\n\n    if ($element) {\n      if (_.isNumber(width)) {\n        $element.css({\n          width: \"\".concat(width, \"px\")\n        });\n      }\n\n      if (_.isNumber(height)) {\n        $element.css({\n          height: \"\".concat(height, \"px\")\n        });\n      }\n    }\n\n    this._width = width;\n    this._height = height;\n  }\n  /**\n   * Builds a component from a base skeleton\n   * @param {Object} [specs] - Some extra methods to assign to the component instance\n   * @param {Object} [defaults] - Some default config entries\n   * @returns {component}\n   */\n\n\n  function component(specs, defaults) {\n    // the template is a private property\n    var componentTpl = defaultTpl; //contains the states of the components\n\n    var componentState = {}; //where the component is added\n\n    var $container; // base skeleton\n\n    /**\n     * @typedef {Object} Component\n     */\n\n    var componentApi = {\n      /**\n       * Initializes the component\n       * @param {Object} config\n       * @param {jQuery|HTMLElement|String} [config.renderTo] - An optional container in which renders the component\n       * @param {Boolean} [config.replace] - When the component is appended to its container, clears the place before\n       * @param {Number|String} [config.width] - The width in pixels, or 'auto' to use the container's width\n       * @param {Number|String} [config.height] - The height in pixels, or 'auto' to use the container's height\n       * @returns {component}\n       * @fires component#init\n       */\n      init: function init(config) {\n        this.config = _(config || {}).omit(function (value) {\n          return value === null || typeof value === 'undefined';\n        }).defaults(defaults || {}).value();\n        componentState = {};\n        /**\n         * Executes extra init tasks\n         * @event component#init\n         */\n\n        this.trigger('init');\n\n        if (this.config.renderTo) {\n          $container = $$1(this.config.renderTo);\n          this.render();\n        }\n\n        return this;\n      },\n\n      /**\n       * Uninstalls the component\n       * @returns {component}\n       * @fires component#destroy\n       */\n      destroy: function destroy() {\n        /**\n         * Executes extra destroy tasks\n         * @event component#destroy\n         */\n        this.trigger('destroy');\n\n        if (this.$component) {\n          this.$component.remove();\n        }\n\n        this.$component = null;\n        componentState = {};\n        return this;\n      },\n\n      /**\n       * Renders the component\n       * @param {jQuery|HTMLElement|String} [container] - where the component is rendered\n       * @returns {component}\n       * @fires component#render\n       */\n      render: function render(container) {\n        if (container) {\n          $container = $$1(container);\n        }\n\n        this.$component = $$1(componentTpl(this.config));\n\n        if ($container) {\n          if (this.config.replace) {\n            $container.empty();\n          }\n\n          $container.append(this.$component);\n        }\n\n        this.setState('rendered', true);\n        delegatedResize.call(this);\n        /**\n         * Executes extra render tasks\n         * @event component#render\n         * @param {jQuery} $component\n         */\n\n        this.trigger('render', this.$component);\n        return this;\n      },\n\n      /**\n       * Sets the component's size\n       * @param {Number|String} width - The width in pixels, or 'auto' to use the container's width\n       * @param {Number|String} height - The height in pixels, or 'auto' to use the container's height\n       * @returns {component}\n       * @fires component#setsize\n       */\n      setSize: function setSize(width, height) {\n        this.config.width = width;\n        this.config.height = height;\n\n        if (this.is('rendered')) {\n          delegatedResize.call(this);\n        }\n        /**\n         * Executes extra resize tasks\n         * @event component#setsize\n         * @param {Number|String} width\n         * @param {Number|String} height\n         */\n\n\n        this.trigger('setsize', width, height);\n        return this;\n      },\n\n      /**\n       * Get the component's size\n       * @returns {Object}\n       * @fires component#setsize\n       */\n      getSize: function getSize() {\n        if (this.is('rendered')) {\n          return {\n            width: this._width || 0,\n            height: this._height || 0\n          };\n        }\n      },\n\n      /**\n       * Get the component rendered size\n       * @param {Boolean} includeMargin - include the margins in the returned size\n       * @returns {{width: number, height: number}}\n       */\n      getOuterSize: function getOuterSize(includeMargin) {\n        var $component;\n\n        if (this.is('rendered')) {\n          $component = this.getElement();\n          includeMargin = includeMargin || false;\n          return {\n            width: Math.round($component.outerWidth(includeMargin)),\n            height: Math.round($component.outerHeight(includeMargin))\n          };\n        }\n      },\n\n      /**\n       * Shows the component\n       * @returns {component}\n       * @fires component#show\n       */\n      show: function show() {\n        /**\n         * Executes extra tasks on show\n         * @event component#show\n         * @param {component} component\n         */\n        this.trigger('show', this);\n        return this.setState('hidden', false);\n      },\n\n      /**\n       * Hides the component\n       * @returns {component}\n       * @fires component#hide\n       */\n      hide: function hide() {\n        /**\n         * Executes extra tasks on hide\n         * @event component#hide\n         * @param {component} component\n         */\n        this.trigger('hide', this);\n        return this.setState('hidden', true);\n      },\n\n      /**\n       * Enables the component\n       * @returns {component}\n       * @fires component#enable\n       */\n      enable: function enable() {\n        /**\n         * Executes extra tasks on enable\n         * @event component#enable\n         * @param {component} component\n         */\n        this.trigger('enable', this);\n        return this.setState('disabled', false);\n      },\n\n      /**\n       * Disables the component\n       * @returns {component}\n       * @fires component#disable\n       */\n      disable: function disable() {\n        /**\n         * Executes extra tasks on disable\n         * @event component#disable\n         * @param {component} component\n         */\n        this.trigger('disable', this);\n        return this.setState('disabled', true);\n      },\n\n      /**\n       * Checks if the component has a particular state\n       * @param {String} state\n       * @returns {Boolean}\n       */\n      is: function is(state) {\n        return !!componentState[state];\n      },\n\n      /**\n       * Sets the component to a particular state\n       * @param {String} state\n       * @param {Boolean} flag\n       * @returns {component}\n       * @fires component#state\n       */\n      setState: function setState(state, flag) {\n        flag = !!flag;\n        componentState[state] = flag;\n\n        if (this.$component) {\n          this.$component.toggleClass(state, flag);\n        }\n        /**\n         * Executes extra tasks on state change\n         * @event component#state\n         * @param {String} state\n         * @param {Boolean} flag\n         * @param {component} component\n         */\n\n\n        this.trigger('state', state, flag, this);\n        return this;\n      },\n\n      /**\n       * Gets the underlying DOM element\n       * @returns {jQuery}\n       */\n      getContainer: function getContainer() {\n        return $container;\n      },\n\n      /**\n       * Gets the underlying DOM element\n       * @returns {jQuery}\n       */\n      getElement: function getElement() {\n        return this.$component;\n      },\n\n      /**\n       * Gets the template used to render this component\n       * @returns {Function}\n       */\n      getTemplate: function getTemplate() {\n        return componentTpl;\n      },\n\n      /**\n       * Sets the template used to render this component\n       * @param {Function} template\n       * @returns {componentApi}\n       * @fires component#template\n       */\n      setTemplate: function setTemplate(template) {\n        var tpl = template || defaultTpl;\n        componentTpl = tpl; // ensure the template is defined as a function\n\n        if (!_.isFunction(componentTpl)) {\n          componentTpl = function componentTpl() {\n            return tpl;\n          };\n        }\n        /**\n         * Executes extra tasks on template change\n         * @event component#template\n         * @param {function} componentTpl\n         */\n\n\n        this.trigger('template', componentTpl);\n        return this;\n      },\n\n      /**\n       * Get the component's configuration\n       */\n      getConfig: function getConfig() {\n        return this.config || defaults || {};\n      }\n    }; // let's extend the instance with extra methods\n\n    if (specs) {\n      _(specs).functions().forEach(function (method) {\n        componentApi[method] = function delegate() {\n          return specs[method].apply(componentApi, _slice.call(arguments));\n        };\n      });\n    }\n\n    return eventifier(componentApi);\n  }\n\n  return component;\n\n});\n\n","define('util/regexEscape',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * Escapes -\\/\\\\^$*+?.()|[\\]{} inside a string. Use when\n     * concatenating a string for usage in new RegExp().\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n    function regexEscape (s) {\n      return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    return regexEscape;\n\n});\n\n","define('util/wrapLongWords',['util/regexEscape'], function (regexEscape) { 'use strict';\n\n    regexEscape = regexEscape && regexEscape.hasOwnProperty('default') ? regexEscape['default'] : regexEscape;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n    /**\n     * Builds a chunked term from a too long one.\n     *\n     * Internet Explorer will not insert a line-break before a period or a colon (and possibly other characters),\n     * even when they're preceded by a space. To address this chunks starting with one of the problematic characters\n     * will have this removed and it will be appended to the previous chunk.\n     *\n     * @param longWord\n     * @param chunkExp\n     * @returns {string}\n     */\n\n    var getCutTerm = function getCutTerm(longWord, chunkExp) {\n      var cutTerms = longWord.match(chunkExp),\n          i = cutTerms.length,\n          oldFirst = '',\n          newFirst = '',\n          offenders = ['.', ':', ';'];\n\n      while (i--) {\n        newFirst = cutTerms[i].charAt(0);\n\n        if (offenders.indexOf(newFirst) > -1) {\n          cutTerms[i] = cutTerms[i].substr(1);\n        }\n\n        if (offenders.indexOf(oldFirst) > -1) {\n          cutTerms[i] = cutTerms[i] + oldFirst;\n        }\n\n        oldFirst = newFirst;\n      }\n\n      return cutTerms.join(' ');\n    };\n    /**\n     * Wrap very long strings after n characters\n     *\n     * @param str\n     * @param threshold number of characters to break after\n     * @returns {string}\n     */\n\n\n    function wrapLongWords(str, threshold) {\n      // add whitespaces to provoke line breaks before HTML tags\n      str = str.toString().replace(/([\\w])</g, '$1 <');\n      var chunkExp = new RegExp('.{1,' + threshold + '}', 'g'),\n          longWords = str.match(new RegExp('[\\\\S]{' + threshold + ',}', 'g')) || [],\n          i = longWords.length,\n          cut;\n\n      while (i--) {\n        cut = getCutTerm(longWords[i], chunkExp);\n        str = str.replace(new RegExp(regexEscape(longWords[i]), 'g'), cut);\n      }\n\n      return str;\n    }\n\n    return wrapLongWords;\n\n});\n\n","define('util/encode',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n    var _reQuot = /\"/g;\n    var _reApos = /'/g;\n    /**\n     * Encodes an HTML string to be safely displayed without code interpretation\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n\n    var encodeHTML = function encodeHTML(html) {\n      // @see http://tinyurl.com/ko75kph\n      return document.createElement('a').appendChild(document.createTextNode(html)).parentNode.innerHTML;\n    };\n    /**\n     * Encodes an HTML string to be safely use inside an attribute\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n\n\n    var encodeAttribute = function encodeAttribute(html) {\n      // use replaces chain instead of unified replace with map for performances reasons\n      // @see http://jsperf.com/htmlencoderegex/68\n      return encodeHTML(html).replace(_reQuot, '&quot;').replace(_reApos, '&apos;');\n    };\n    /**\n     * Encodes a Unicode string to Base64.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n\n\n    function encodeBase64(str) {\n      // first we use encodeURIComponent to get percent-encoded UTF-8,\n      // then we convert the percent encodings into raw bytes which\n      // can be fed into btoa.\n      return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n        return String.fromCharCode('0x' + p1);\n      }));\n    }\n    /**\n     * Decodes a Base64 string to Unicode string.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n\n\n    function decodeBase64(str) {\n      // Going backwards: from bytestream, to percent-encoding, to original string.\n      return decodeURIComponent(Array.prototype.map.call(atob(str), function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n    }\n\n    var encode = {\n      html: encodeHTML,\n      attribute: encodeAttribute,\n      encodeBase64: encodeBase64,\n      decodeBase64: decodeBase64\n    };\n\n    return encode;\n\n});\n\n","define('ui/feedback',['jquery', 'lodash', 'core/format', 'ui/component', 'util/wrapLongWords', 'util/encode', 'handlebars', 'i18n', 'lib/dompurify/purify'], function ($$1, _, format, component, wrapLongWords, encode, Handlebars, __, DOMPurify) { 'use strict';\n\n  $$1 = $$1 && $$1.hasOwnProperty('default') ? $$1['default'] : $$1;\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  format = format && format.hasOwnProperty('default') ? format['default'] : format;\n  component = component && component.hasOwnProperty('default') ? component['default'] : component;\n  wrapLongWords = wrapLongWords && wrapLongWords.hasOwnProperty('default') ? wrapLongWords['default'] : wrapLongWords;\n  encode = encode && encode.hasOwnProperty('default') ? encode['default'] : encode;\n  Handlebars = Handlebars && Handlebars.hasOwnProperty('default') ? Handlebars['default'] : Handlebars;\n  __ = __ && __.hasOwnProperty('default') ? __['default'] : __;\n  DOMPurify = DOMPurify && DOMPurify.hasOwnProperty('default') ? DOMPurify['default'] : DOMPurify;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function Helpers0 (hb) {\n    //register a i18n helper\n    hb.registerHelper('__', function (key) {\n      return __(key);\n    });\n    /**\n     * Register dompurify helper\n     *\n     * https://github.com/cure53/DOMPurify\n     * with config SAFE_FOR_TEMPLATES: true\n     * to make output safe for template systems\n     */\n\n    hb.registerHelper('dompurify', function (context) {\n      return DOMPurify.sanitize(context);\n    });\n    /**\n     * Register join helper\n     *\n     * Example :\n     * var values = {a:v1, b:v2, c:v3};\n     * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n     * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n     */\n\n    hb.registerHelper('join', function (arr, keyValueGlue, fragmentGlue, wrapper) {\n      var fragments = [];\n      keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n      fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n      wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n      _.forIn(arr, function (value, key) {\n        var fragment = '';\n\n        if (value !== null || value !== undefined) {\n          if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          } else if (_typeof(value) === 'object') {\n            value = _.values(value).join(' ');\n          }\n        } else {\n          value = '';\n        }\n\n        if (keyValueGlue !== undefined) {\n          fragment += key + keyValueGlue;\n        }\n\n        fragment += wrapper + value + wrapper;\n        fragments.push(fragment);\n      });\n\n      return fragments.join(fragmentGlue);\n    }); //register a classic \"for loop\" helper\n    //it also adds a local variable \"i\" as the index in each iteration loop\n\n    hb.registerHelper('for', function (startIndex, stopIndex, increment, options) {\n      var ret = '';\n      startIndex = parseInt(startIndex);\n      stopIndex = parseInt(stopIndex);\n      increment = parseInt(increment);\n\n      for (var i = startIndex; i < stopIndex; i += increment) {\n        ret += options.fn(_.extend({}, this, {\n          i: i\n        }));\n      }\n\n      return ret;\n    });\n    hb.registerHelper('equal', function (var1, var2, options) {\n      if (var1 == var2) {\n        return options.fn(this);\n      } else {\n        return options.inverse(this);\n      }\n    }); // register a \"get property\" helper\n    // it gets the named property from the provided context\n\n    hb.registerHelper('property', function (name, context) {\n      return context[name] || '';\n    }); // register an 'includes' helper\n    // it checks if value is in array\n\n    hb.registerHelper('includes', function (haystack, needle, options) {\n      if (_.contains(haystack, needle)) {\n        return options.fn(this);\n      }\n    });\n  }\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    \n    return \"popup\";\n    }\n\n    buffer += \"<div id=\\\"\";\n    if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" class=\\\"feedback feedback-\";\n    if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \" \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.popup), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\">\\n    <span class=\\\"icon-\";\n    if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"></span>\\n    <div>\\n        \";\n    stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, (depth0 && depth0.msg), options) : helperMissing.call(depth0, \"dompurify\", (depth0 && depth0.msg), options));\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n    </div>\\n    <span title=\\\"\"\n      + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close message\", options) : helperMissing.call(depth0, \"__\", \"Close message\", options)))\n      + \"\\\" class=\\\"icon-close\\\" data-close=\\\":parent .feedback\\\"></span>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n   *\n   */\n\n  var defaultContainerSelector = '#feedback-box'; //keep a reference to ALL alive feedback\n\n  var currents = []; //available levels\n\n  var levels = ['info', 'success', 'warning', 'danger', 'error'];\n  var defaultOptions = {\n    timeout: {\n      info: 2000,\n      success: 2000,\n      warning: 4000,\n      danger: 4000,\n      error: 8000\n    },\n    // Note: value depends on font, font-weight and such.\n    // 40 is pretty good in the current setup but will\n    // never be exact with a non-proportional font.\n    wrapLongWordsAfter: 40,\n    //by default HTML content is encoded\n    encodeHtml: true,\n    //change the display (absolute or in the flow)\n    popup: true\n  };\n  /**\n   * Creates a feedback object.\n   *\n   * @exports ui/feedback\n   * @param {jQUeryElement} [$container] - only to specify another container\n   * @param {Object} [config] - change the config\n   * @param {Object|Number} [config.timeout] - either one for every level or per level timeout in ms\n   * @param {Number} [config.wrapLongWordsAfter] - add a space in the middle of very long word to enable wrap lines\n   * @param {Boolean} [config.encodeHtml] - weither the message is html encoded\n   * @param {Boolean} [config.popup] - displays the message as a popup or in the flow\n   * @returns {feedback} the feedback object\n   * @throws {TypeError} without a container\n   */\n\n  var feedbackFactory = function feedbackFactory($container, config) {\n    var feedback;\n\n    if (!$container || !$container.length) {\n      $container = $$1(defaultContainerSelector);\n    }\n\n    if (!$container.length) {\n      throw new TypeError('The feedback needs to belong to an existing container');\n    }\n    /**\n     * @typedef {Object} feedback - the feedback component\n     */\n\n\n    feedback = component({\n      /**\n       * Creates a message, not displayed.\n       * @param {String} [level = 'info'] - the message level\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      message: function message(level, msg, params, options) {\n        var displayedMessage = msg;\n\n        if (!level || !_.contains(levels, level)) {\n          level = 'info';\n        } //parameterized messages\n\n\n        if (_.isPlainObject(params)) {\n          options = params;\n          params = [];\n        }\n\n        this.config = _.defaults(options || {}, this.config);\n        this.config.level = level; // encode plain text string to html\n\n        if (this.config.encodeHtml) {\n          displayedMessage = encode.html(displayedMessage);\n        } // wrap long words\n\n\n        if (this.config.wrapLongWordsAfter) {\n          displayedMessage = wrapLongWords(displayedMessage, this.config.wrapLongWordsAfter);\n        } //apply strf like format parameters\n\n\n        if (_.isArray(params) && params.length) {\n          displayedMessage = format.apply(format, [displayedMessage].concat(params));\n        }\n\n        this.config.msg = displayedMessage;\n        return this;\n      },\n\n      /**\n       * Opens an info message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      info: function info(msg, params, options) {\n        return this.message('info', msg, params, options).open();\n      },\n\n      /**\n       * Opens an success message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      success: function success(msg, params, options) {\n        return this.message('success', msg, params, options).open();\n      },\n\n      /**\n       * Opens an warning message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      warning: function warning(msg, params, options) {\n        return this.message('warning', msg, params, options).open();\n      },\n\n      /**\n       * Opens an danger message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      danger: function danger(msg, params, options) {\n        return this.message('danger', msg, params, options).open();\n      },\n\n      /**\n       * Opens an error message\n       * @param {String} msg - the message to display\n       * @param {Array} [params] - parameters for the message format (%s,%d,%j)\n       * @param {Object} [options] - specify the config\n       * @returns {feedback} chains\n       */\n      error: function error(msg, params, options) {\n        return this.message('error', msg, params, options).open();\n      },\n\n      /**\n       * Opens the message (and close previous one)\n       * ! Method kept for backward compat with previous version !\n       * @returns {feedback} chains\n       */\n      open: function open() {\n        //close others\n        _(currents).reject(this).invoke('close'); //and display\n\n\n        return this.display();\n      },\n\n      /**\n       * Closes the message\n       * ! Method kept for backward compat with previous version !\n       * @returns {feedback} chains\n       */\n      close: function close() {\n        if (this.is('rendered')) {\n          this.destroy();\n        }\n      },\n\n      /**\n       * Displays the message (does the render)\n       * ! Method kept for backward compat with previous version !\n       * @returns {feedback} chains\n       */\n      display: function display() {\n        if (this.is('rendered')) {\n          this.show();\n        } else {\n          this.render($container);\n        }\n\n        return this;\n      }\n    }, defaultOptions);\n    return feedback.setTemplate(tpl).on('init', function () {\n      this.config.id = 'feedback-' + (currents.length + 1);\n      currents.push(this); //for backward compat\n\n      $container.trigger('create.feedback');\n    }).on('render', function () {\n      var self = this;\n      var $component = this.getElement();\n      var $closer = $$1('.icon-close', $component);\n      var timeout = _.isPlainObject(this.config.timeout) ? this.config.timeout[this.config.level] : this.config.timeout;\n      $closer.off('click').on('click', function (e) {\n        e.preventDefault();\n        self.destroy();\n      });\n\n      if (_.isNumber(timeout) && timeout > 0) {\n        _.delay(function () {\n          self.close();\n        }, timeout);\n      } //for backward compat\n\n\n      $container.trigger('display.feedback');\n    }).on('destroy', function () {\n      //for backward compat\n      $container.trigger('close.feedback');\n\n      _.remove(currents, this);\n    }).init(config);\n  };\n\n  return feedbackFactory;\n\n});\n\n","define('util/url',['lodash', 'context'], function (_, context) { 'use strict';\n\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  context = context && context.hasOwnProperty('default') ? context['default'] : context;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  var parsers = {\n    absolute: /^(?:[a-z]+:)?\\/\\//i,\n    base64: /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/,\n    query: /(?:^|&)([^&=]*)=?([^&]*)/g,\n    url: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  };\n  /**\n   * The Url util\n   * @exports util/url\n   */\n\n  var urlUtil = {\n    /*\n     * The parse method is a adaptation of parseUri from\n     * Steven Levithan <stevenlevithan.com> under the MIT License\n     */\n\n    /**\n     * Parse the given URL and create an object with each URL chunks.\n     *\n     * BE CAREFUL! This util is different from UrlParser.\n     * This one works only from the given string, when UrlParser work from window.location.\n     * It means UrlParser will resolve the host of a relative URL using the host of the current window.\n     *\n     * @param {String} url - the URL to parse\n     * @returns {Object} parsedUrl with the properties available in key below and query that contains query string key/values.\n     */\n    parse: function parse(url) {\n      var matches;\n      var keys = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'queryString', 'hash'];\n      var i = keys.length;\n      var parsed = Object.create({\n        toString: function toString() {\n          return this.source;\n        }\n      });\n      parsed.base64 = parsers.base64.test(url);\n\n      if (parsed.base64) {\n        parsed.source = url;\n      } else {\n        matches = parsers.url.exec(url);\n\n        while (i--) {\n          parsed[keys[i]] = matches[i] || '';\n        }\n\n        parsed.query = {};\n        parsed.queryString.replace(parsers.query, function ($0, $1, $2) {\n          if ($1) {\n            parsed.query[$1] = $2;\n          }\n        });\n      }\n\n      return parsed;\n    },\n\n    /**\n     * Check whether an URL is absolute\n     * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n     * @returns {Boolean|undefined} true if the url is absolute, or undefined if the URL cannot be checked\n     */\n    isAbsolute: function isAbsolute(url) {\n      //url from parse\n      if (_typeof(url) === 'object' && url.hasOwnProperty('source')) {\n        return url.source !== url.relative;\n      }\n\n      if (typeof url === 'string') {\n        return parsers.absolute.test(url);\n      }\n    },\n\n    /**\n     * Check whether an URL is relative\n     * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n     * @returns {Boolean|undefined} true if the url is relative, or undefined if the URL cannot be checked\n     */\n    isRelative: function isRelative(url) {\n      var absolute = this.isAbsolute(url);\n\n      if (typeof absolute === 'boolean') {\n        return !absolute;\n      }\n    },\n\n    /**\n     * Check whether an URL is encoded in base64\n     * @param {String|Object} url - the url to check. It can be a parsed URL (result of {@link util/url#parse})\n     * @returns {Boolean|undefined} true if the url is base64, or undefined if the URL cannot be checked\n     */\n    isBase64: function isBase64(url) {\n      if (_typeof(url) === 'object' && url.hasOwnProperty('source')) {\n        return url.base64;\n      }\n\n      if (typeof url === 'string') {\n        return parsers.base64.test(url);\n      }\n    },\n\n    /**\n     * Determine whether encoding is required to match XML standards for attributes\n     * @param {String} url\n     * @returns {String}\n     */\n    encodeAsXmlAttr: function encodeAsXmlAttr(uri) {\n      return /[<>&']+/.test(uri) ? encodeURIComponent(uri) : uri;\n    },\n\n    /**\n     * Build a URL.\n     * It does not take case about baseURL.\n     *\n     * @param {String|Array} path - the URL path. Clean concat if an array (no dupe slashes)\n     * @param {Object} [params] - params to add to the URL\n     * @returns {String} the URL\n     */\n    build: function build(path, params) {\n      var url,\n          queryString = '',\n          hasQueryString;\n\n      if (path) {\n        if (_.isString(path)) {\n          url = path;\n        }\n\n        if (_.isArray(path)) {\n          url = '';\n\n          _.forEach(path, function (chunk) {\n            if (/\\/$/.test(url) && /^\\//.test(chunk)) {\n              url += chunk.substr(1);\n            } else if (url !== '' && !/\\/$/.test(url) && !/^\\//.test(chunk)) {\n              url += '/' + chunk;\n            } else {\n              url += chunk;\n            }\n          });\n        }\n\n        if (_.isPlainObject(params)) {\n          hasQueryString = url.indexOf('?') > -1;\n          queryString = _.reduce(params, function (acc, value, key) {\n            if (!_.isEmpty(acc) || hasQueryString) {\n              acc += '&';\n            }\n\n            if (_typeof(value) === 'object' && !_.isArray(value)) {\n              _.forOwn(value, function (parameterValue, parameterName) {\n                acc += encodeURIComponent(key) + '[' + encodeURIComponent(parameterName) + ']=' + encodeURIComponent(parameterValue) + '&';\n              });\n            } else {\n              acc += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n            }\n\n            return acc;\n          }, queryString);\n\n          if (!_.isEmpty(queryString)) {\n            if (!hasQueryString) {\n              url += '?';\n            }\n\n            url += queryString;\n          }\n        }\n      }\n\n      return url;\n    },\n\n    /**\n     * Get the URL from a TAO controller route\n     * @param {String} action - The controller's action\n     * @param {String} controller - The controller's name\n     * @param {String} extension - The controller's extension\n     * @param {String} [rootUrl] - to change the root url, otherwise taken from context\n     * @param {Object} [params] - params to add to the URL\n     * @returns {String} the url\n     *\n     * @throws {TypeError} if one of the required parameter is missing or empty\n     */\n    route: function route(action, controller, extension, params, rootUrl) {\n      var routeParts = [extension, controller, action];\n\n      if (_.some(routeParts, function (value) {\n        return _.isEmpty(value) || !_.isString(value);\n      })) {\n        throw new TypeError('All parts are required to build an URL');\n      }\n\n      rootUrl = rootUrl || context && context['root_url'];\n      return this.build([rootUrl].concat(routeParts), params);\n    }\n  };\n\n  return urlUtil;\n\n});\n\n","define('core/moduleLoader',['lodash', 'core/promise'], function (_, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The data required by the modules loader\n     *\n     * @typedef {Object} moduleDefinition\n     * @property {String} module - AMD module name\n     * @property {String} bundle - AMD module name of the bundle that should contain the module\n     * @property {String} category - the module category\n     * @property {String} name - the module name\n     * @property {String|Number} [position = 'append'] - append, prepend or arbitrary position within the category\n     */\n\n    /**\n     * Creates a loader with the list of required modules\n     * @param {Object} requiredModules - A collection of mandatory modules, where the key is the category and the value are an array of loaded modules\n     * @param {Function} [validate] - A validator function, by default the module should be an object\n     * @param {Object} [specs] - Some extra methods to assign to the loader instance\n     * @returns {loader} the provider loader\n     * @throws TypeError if something is not well formatted\n     */\n\n    function moduleLoaderFactory(requiredModules, validate, specs) {\n      /**\n       * The list of loaded modules\n       */\n      var loaded = {};\n      /**\n       * Retains the AMD modules to load\n       */\n\n      var modules = {};\n      /**\n       * The modules to exclude\n       */\n\n      var excludes = [];\n      /**\n       * Bundles to require\n       */\n\n      var bundles = [];\n      /**\n       * The module loader\n       * @typedef {loader}\n       */\n\n      var loader = {\n        /**\n         * Adds a list of dynamic modules to load\n         * @param {moduleDefinition[]} moduleList - the modules to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        addList: function addList(moduleList) {\n          _.forEach(moduleList, this.add, this);\n\n          return this;\n        },\n\n        /**\n         * Adds a dynamic module to load\n         * @param {moduleDefinition} def - the module to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        add: function add(def) {\n          if (!_.isPlainObject(def)) {\n            throw new TypeError('The module definition module must be an object');\n          }\n\n          if (_.isEmpty(def.module) || !_.isString(def.module)) {\n            throw new TypeError('An AMD module must be defined');\n          }\n\n          if (_.isEmpty(def.category) || !_.isString(def.category)) {\n            var identifyProvider = def.id || def.name || def.module;\n            throw new TypeError(\"The provider '\".concat(identifyProvider, \"' must belong to a category\"));\n          }\n\n          modules[def.category] = modules[def.category] || [];\n\n          if (_.isNumber(def.position)) {\n            modules[def.category][def.position] = def.module;\n          } else if (def.position === 'prepend' || def.position === 'before') {\n            modules[def.category].unshift(def.module);\n          } else {\n            modules[def.category].push(def.module);\n          }\n\n          if (def.bundle && !_.contains(bundles, def.bundle)) {\n            bundles.push(def.bundle);\n          }\n\n          return this;\n        },\n\n        /**\n         * Appends a dynamic module\n         * @param {moduleDefinition} def - the module to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        append: function append(def) {\n          return this.add(_.merge({\n            position: 'append'\n          }, def));\n        },\n\n        /**\n         * Prepends a dynamic module to a category\n         * @param {moduleDefinition} def - the module to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        prepend: function prepend(def) {\n          return this.add(_.merge({\n            position: 'prepend'\n          }, def));\n        },\n\n        /**\n         * Removes a module from the loading stack\n         * @param {String} module - the module's module\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        remove: function remove(module) {\n          excludes.push(module);\n          return this;\n        },\n\n        /**\n         * Loads the dynamic modules : trigger the dependency resolution\n         * @param {Boolean} [loadBundles=false] - does load the bundles\n         * @returns {Promise}\n         */\n        load: function load(loadBundles) {\n          var self = this; //compute the providers dependencies\n\n          var dependencies = _(modules).values().flatten().uniq().difference(excludes).value();\n          /**\n           * Loads AMD modules and wrap then into a Promise\n           * @param {String[]} amdModules - the list of modules to require\n           * @returns {Promise} resolves with the loaded modules\n           */\n\n\n          var loadModules = function loadModules() {\n            var amdModules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n            if (_.isArray(amdModules) && amdModules.length) {\n              return new Promise(function (resolve, reject) {\n                require(amdModules, function () {\n                  for (var _len = arguments.length, loadedModules = new Array(_len), _key = 0; _key < _len; _key++) {\n                    loadedModules[_key] = arguments[_key];\n                  }\n\n                  return resolve(loadedModules);\n                }, function (err) {\n                  reject(err);\n                });\n              });\n            }\n\n            return Promise.resolve();\n          }; // 1. load bundles\n          // 2. load dependencies\n          // 3. add them to the modules list\n\n\n          return loadModules(loadBundles ? bundles : []).then(function () {\n            return loadModules(dependencies);\n          }).then(function (loadedModules) {\n            _.forEach(dependencies, function (dependency, index) {\n              var module = loadedModules[index];\n\n              var category = _.findKey(modules, function (val) {\n                return _.contains(val, dependency);\n              });\n\n              if (typeof validate === 'function' && !validate(module)) {\n                throw new TypeError(\"The module '\".concat(dependency, \"' is not valid\"));\n              }\n\n              if (_.isString(category)) {\n                loaded[category] = loaded[category] || [];\n                loaded[category].push(module);\n              }\n            });\n\n            return self.getModules();\n          });\n        },\n\n        /**\n         * Get the resolved list of modules.\n         * Load needs to be called before to have the dynamic modules.\n         * @param {String} [category] - to get the modules for a given category, if not set, we get everything\n         * @returns {Object[]} the modules\n         */\n        getModules: function getModules(category) {\n          if (_.isString(category)) {\n            return loaded[category] || [];\n          }\n\n          return _(loaded).values().flatten().uniq().value();\n        },\n\n        /**\n         * Get the module categories\n         * @returns {String[]} the categories\n         */\n        getCategories: function getCategories() {\n          return _.keys(loaded);\n        }\n      };\n      validate = _.isFunction(validate) ? validate : _.isPlainObject; //verify and add the required modules\n\n      _.forEach(requiredModules, function (moduleList, category) {\n        if (_.isEmpty(category) || !_.isString(category)) {\n          throw new TypeError('Modules must belong to a category');\n        }\n\n        if (!_.isArray(moduleList)) {\n          throw new TypeError('A list of modules must be an array');\n        }\n\n        if (!_.all(moduleList, validate)) {\n          throw new TypeError('The list does not contain valid modules');\n        }\n\n        if (loaded[category]) {\n          loaded[category] = loaded[category].concat(moduleList);\n        } else {\n          loaded[category] = moduleList;\n        }\n      }); // let's extend the instance with extra methods\n\n\n      if (specs) {\n        _(specs).functions().forEach(function (method) {\n          loader[method] = function delegate() {\n            return specs[method].apply(loader, [].slice.call(arguments));\n          };\n        });\n      }\n\n      return loader;\n    }\n\n    return moduleLoaderFactory;\n\n});\n\n","define('core/providerLoader',['lodash', 'core/moduleLoader'], function (_, moduleLoaderFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moduleLoaderFactory = moduleLoaderFactory && moduleLoaderFactory.hasOwnProperty('default') ? moduleLoaderFactory['default'] : moduleLoaderFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Checks a provider object\n     * @param provider\n     * @returns {Boolean}\n     */\n\n    function validateProvider(provider) {\n      return _.isPlainObject(provider) && _.isFunction(provider.init) && _.isString(provider.name) && !_.isEmpty(provider.name);\n    }\n    /**\n     * Creates a loader with the list of required providers\n     * @param {String: Object[]} requiredProviders - A list of mandatory providers, where the key is the category and the value are an array of providers\n     * @returns {loader} the provider loader\n     * @throws TypeError if something is not well formatted\n     */\n\n\n    function providerLoader(requiredProviders) {\n      return moduleLoaderFactory(requiredProviders, validateProvider, {\n        /**\n         * Get the resolved provider list.\n         * Load needs to be called before to have the dynamic providers.\n         * @param {String} [category] - to get the providers for a given category, if not set, we get everything\n         * @returns {Function[]} the providers\n         */\n        getProviders: function getProviders(category) {\n          return this.getModules(category);\n        }\n      });\n    }\n\n    return providerLoader;\n\n});\n\n","define('core/pluginLoader',['lodash', 'core/moduleLoader'], function (_, moduleLoaderFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moduleLoaderFactory = moduleLoaderFactory && moduleLoaderFactory.hasOwnProperty('default') ? moduleLoaderFactory['default'] : moduleLoaderFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Creates a loader with the list of required plugins\n     * @param {String: Function[]} requiredPlugins - where the key is the category and the value are an array of plugins\n     * @returns {loader} the plugin loader\n     * @throws TypeError if something is not well formated\n     */\n\n    function pluginLoaderFactory(requiredPlugins) {\n      return moduleLoaderFactory(requiredPlugins, _.isFunction, {\n        /**\n         * Get the resolved plugin list.\n         * Load needs to be called before to have the dynamic plugins.\n         * @param {String} [category] - to get the plugins for a given category, if not set, we get everything\n         * @returns {Function[]} the plugins\n         */\n        getPlugins: function getPlugins(category) {\n          return this.getModules(category);\n        }\n      });\n    }\n\n    return pluginLoaderFactory;\n\n});\n\n","define('core/providerRegistry',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Transfers the target into a a provider registry\n     * It adds two methods registerProvider() and getProvider();\n     *\n     * @param {Object} target\n     * @param {Function} [validator] - a function to validate the provider to be registered\n     *\n     * @returns {Object} the target itself\n     */\n\n    function providerRegistry(target, validator) {\n      var _providers = {};\n      target = target || {};\n      /**\n       * Registers a <i>provider</i> into the provider registry.\n       * The provider provides the behavior required by the target object.\n       *\n       * @param {String} name - the provider name will be used to select the provider while instantiating the target object\n       *\n       * @param {Object} provider - the Provider as a plain object. The target object forwards, encapsulates and delegates calls to the provider.\n       * @param {Function} provider.init - the provider initializes the target object from it's config\n       *\n       * @returns {registerProvider}\n       *\n       * @throws TypeError when a wrong provider is given or an empty name.\n       */\n\n      function registerProvider(name, provider) {\n        var valid = true; //type checking\n\n        if (!_.isString(name) || name.length <= 0) {\n          throw new TypeError('It is required to give a name to your provider.');\n        }\n\n        if (!_.isPlainObject(provider) || !_.isFunction(provider.init)) {\n          throw new TypeError('A provider is an object that contains at least an init function.');\n        }\n\n        valid = validator && _.isFunction(validator) ? validator(provider) : valid;\n\n        if (valid) {\n          _providers[name] = provider;\n        }\n\n        return this;\n      }\n      /**\n       * Gets a registered provider by its name\n       *\n       * @param {String} providerName\n       *\n       * @returns {Object} provider\n       */\n\n\n      function getProvider(providerName) {\n        var provider; //check a provider is available\n\n        if (!_providers || _.size(_providers) === 0) {\n          throw new Error('No provider registered');\n        }\n\n        if (_.isString(providerName) && providerName.length > 0) {\n          provider = _providers[providerName];\n        } else if (_.size(_providers) === 1) {\n          //if there is only one provider, then we take this one\n          providerName = _.keys(_providers)[0];\n          provider = _providers[providerName];\n        } //now we should have a provider\n\n\n        if (!provider) {\n          throw new Error('No candidate found for the provider');\n        }\n\n        return provider;\n      }\n      /**\n       * Expose the list of registered providers\n       * @return {String[]} the list of provider names\n       */\n\n\n      function getAvailableProviders() {\n        return _.keys(_providers);\n      }\n      /**\n       * Clears the registered providers\n       *\n       * @returns {registerProvider}\n       */\n\n\n      function clearProviders() {\n        _providers = {};\n        return this;\n      }\n\n      target.registerProvider = registerProvider;\n      target.getProvider = getProvider;\n      target.getAvailableProviders = getAvailableProviders;\n      target.clearProviders = clearProviders;\n      return target;\n    }\n\n    return providerRegistry;\n\n});\n\n","define('core/delegator',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var defaults = {\n      name: 'provided',\n      eventifier: true\n    };\n    var _slice = [].slice;\n    /**\n     * Creates a function that delegates api calls to an provider\n     * @param {Object} api - The api providing the calls\n     * @param {Object} provider - The provider on which delegate the calls\n     * @param {Object} [config] - An optional configuration set\n     * @param {String} [config.name] - The name of the provider\n     * @param {Boolean} [config.eventifier] - Enable the eventifier support (default: true)\n     * @param {Boolean} [config.forward] - Forward the calls to the provider instead of delegate (default: false)\n     * @param {Function} [config.defaultProvider] - An optional default delegated function called if the provider do not have the requested target.\n     * @param {Function} [config.wrapper] - An optional function that will wrap the response\n     * @param {Boolean} [config.required] - Throws exception if a delegated method is missing (default: false)\n     * @returns {delegate} - The delegate function\n     */\n\n    function delegator(api, provider, config) {\n      var extendedConfig = _.defaults(config || {}, defaults);\n\n      var eventifier = !!(extendedConfig.eventifier && api && api.trigger);\n      var context = extendedConfig.forward ? provider : api;\n      var defaultProvider = _.isFunction(extendedConfig.defaultProvider) ? extendedConfig.defaultProvider : _.noop;\n      var wrapper = _.isFunction(extendedConfig.wrapper) ? extendedConfig.wrapper : null;\n      var name = extendedConfig.name;\n\n      if (extendedConfig.required) {\n        defaultProvider = null;\n      }\n      /**\n       * Delegates a function call from the api to the provider.\n       * If the api supports eventifier, fires the related event\n       *\n       * @param {String} fnName - The name of the delegated method to call\n       * @param {Object} ... - Following parameters will be forwarded as is\n       * @returns {Object} - The delegated method must return a response\n       * @private\n       * @throws Error\n       */\n\n\n      function delegate(fnName) {\n        var response, args;\n\n        if (provider) {\n          if (_.isFunction(provider[fnName]) || defaultProvider) {\n            // need real array of params, even if empty\n            args = _slice.call(arguments, 1); // delegate the call to the provider\n\n            response = (provider[fnName] || defaultProvider).apply(context, args);\n\n            if (wrapper) {\n              response = wrapper(response);\n            } // if supported fires the method related event\n\n\n            if (eventifier) {\n              // the response has to be provided as first argument in all events\n              api.trigger.apply(api, [fnName, response].concat(args));\n            }\n          } else {\n            throw new Error('There is no method called ' + fnName + ' in the ' + name + ' provider!');\n          }\n        } else {\n          throw new Error('There is no ' + name + ' provider!');\n        }\n\n        return response;\n      }\n\n      return delegate;\n    }\n\n    return delegator;\n\n});\n\n","define('core/communicator',['lodash', 'core/promise', 'core/providerRegistry', 'core/delegator', 'core/eventifier'], function (_, Promise, providerRegistry, delegator, eventifier) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    providerRegistry = providerRegistry && providerRegistry.hasOwnProperty('default') ? providerRegistry['default'] : providerRegistry;\n    delegator = delegator && delegator.hasOwnProperty('default') ? delegator['default'] : delegator;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Some default config values\n     * @type {Object}\n     * @private\n     */\n\n    var defaults = {\n      timeout: 30 * 1000\n    };\n    /**\n     * Creates a communicator implementation.\n     * The communicator relies on a provider to execute the actions.\n     * Most of the delegated methods must return promises.\n     *\n     * Some standard channels are reserved, and must be implemented by the providers:\n     * - error: to carry on error purpose messages\n     * - malformed: to carry on malformed received messages\n     *\n     * @param {String} providerName - The name of the provider instance,\n     *                                which MUST be defined before through a `.registerProvider()` call.\n     * @param {Object} [config] - Optional config set\n     * @param {String} [config.service] - The address of the remote service to request\n     * @param {Number} [config.timeout] - The communication timeout, in milliseconds (default: 30000)\n     * @returns {communicator}\n     */\n\n    function communicatorFactory(providerName, config) {\n      /**\n       * The communicator config set\n       * @type {Object}\n       */\n      var extendedConfig = _(config || {}).defaults(defaults).value();\n      /**\n       * The communicator implementation\n       * @type {Object}\n       */\n\n\n      var communicator;\n      /**\n       * The function used to delegate the calls from the API to the provider.\n       * @type {Function}\n       */\n\n      var delegate;\n      /**\n       * The current states of the communicator\n       * @type {Object}\n       */\n\n      var states = {};\n      /**\n       * The selected communication provider\n       * @type {Object}\n       */\n\n      var provider = communicatorFactory.getProvider(providerName); // creates the implementation by setting an API and delegating calls to the provider\n\n      communicator = eventifier({\n        /**\n         * Initializes the communication implementation.\n         * Sets the `ready` state.\n         * @returns {Promise} The delegated provider's method must return a promise\n         * @fires init\n         * @fires ready\n         */\n        init: function init() {\n          var self = this;\n\n          if (this.getState('ready')) {\n            return Promise.resolve();\n          }\n\n          return delegate('init').then(function () {\n            self.setState('ready').trigger('ready');\n          });\n        },\n\n        /**\n         * Tears down the communication implementation.\n         * Clears the states.\n         * @returns {Promise} The delegated provider's method must return a promise\n         * @fires destroy\n         * @fires destroyed\n         */\n        destroy: function destroy() {\n          var self = this;\n          var stepPromise;\n\n          if (self.getState('open')) {\n            stepPromise = self.close();\n          } else {\n            stepPromise = Promise.resolve();\n          }\n\n          return stepPromise.then(function () {\n            return delegate('destroy').then(function () {\n              self.trigger('destroyed');\n              states = {};\n            });\n          });\n        },\n\n        /**\n         * Opens the connection.\n         * Sets the `open` state.\n         * @returns {Promise} The delegated provider's method must return a promise\n         * @fires open\n         * @fires opened\n         */\n        open: function open() {\n          var self = this;\n\n          if (this.getState('open')) {\n            return Promise.resolve();\n          }\n\n          return delegate('open').then(function () {\n            self.setState('open').trigger('opened');\n          });\n        },\n\n        /**\n         * Closes the connection.\n         * Clears the `open` state.\n         * @returns {Promise} The delegated provider's method must return a promise\n         * @fires close\n         * @fires closed\n         */\n        close: function close() {\n          var self = this;\n          return delegate('close').then(function () {\n            self.setState('open', false).trigger('closed');\n          });\n        },\n\n        /**\n         * Sends an messages through the communication implementation.\n         * @param {String} channel - The name of the communication channel to use\n         * @param {Object} message - The message to send\n         * @returns {Promise} The delegated provider's method must return a promise\n         * @fires send\n         * @fires sent\n         */\n        send: function send(channel, message) {\n          var self = this;\n\n          if (!this.getState('open')) {\n            return Promise.reject();\n          }\n\n          return delegate('send', channel, message).then(function (response) {\n            self.trigger('sent', channel, message, response);\n            return Promise.resolve(response);\n          });\n        },\n\n        /**\n         * Registers a listener on a particular channel\n         * @param {String} name - The name of the channel to listen\n         * @param {Function} handler - The listener callback\n         * @returns {communicator}\n         * @throws TypeError if the name is missing or the handler is not a callback\n         */\n        channel: function channel(name, handler) {\n          if (!_.isString(name) || name.length <= 0) {\n            throw new TypeError('A channel must have a name');\n          }\n\n          if (!_.isFunction(handler)) {\n            throw new TypeError('A handler must be attached to a channel');\n          }\n\n          this.on('channel-' + name, handler);\n          return this;\n        },\n\n        /**\n         * Gets the implementation config set\n         * @returns {Object}\n         */\n        getConfig: function getConfig() {\n          return extendedConfig;\n        },\n\n        /**\n         * Sets a state\n         * @param {String} name - The name of the state to set\n         * @param {Boolean} [state] - The state itself (default: true)\n         * @returns {communicator}\n         */\n        setState: function setState(name, state) {\n          if (_.isUndefined(state)) {\n            state = true;\n          }\n\n          states[name] = !!state;\n          return this;\n        },\n\n        /**\n         * Gets a state\n         * @param {String} name - The name of the state to get\n         * @returns {Boolean}\n         */\n        getState: function getState(name) {\n          return !!states[name];\n        }\n      }); // all messages comes through a message event, then each is dispatched to the right channel\n\n      communicator.on('message', function (channel, message) {\n        this.trigger('channel-' + channel, message);\n      }); // use a delegate function to make a bridge between API and provider\n\n      delegate = delegator(communicator, provider, {\n        name: 'communicator'\n      });\n      return communicator;\n    }\n\n    var communicator = providerRegistry(communicatorFactory);\n\n    return communicator;\n\n});\n\n","define('core/collections',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 Open Assessment Technologies SA\n     */\n\n    /**\n     * Wrap the ES6 Collections polyfill\n     *\n     * @deprecated use the collections types directly\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n    var collections = {\n      Map: window.Map,\n      Set: window.Set,\n      WeakMap: window.WeakMap,\n      WeakSet: window.WeakSet\n    };\n\n    return collections;\n\n});\n\n","define('core/promiseQueue',['lodash', 'core/promise', 'core/eventifier', 'lib/uuid'], function (_, Promise, eventifier, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 Open Assessment Technologies SA\n     */\n    /**\n     * Creates a new promise queue\n     * @returns {promiseQueue}\n     */\n\n    function promiseQueueFactory() {\n      //where we keep the pending promises\n      var queue = {};\n\n      var getId = function getId() {\n        var id = 'promise-' + uuid(6);\n\n        if (typeof queue[id] === 'undefined') {\n          return id;\n        }\n\n        return getId();\n      };\n      /**\n       * @typedef {promiseQueue}\n       */\n\n\n      return {\n        /**\n         * Just add another promise to the queue\n         * @param {Promise} promise\n         * @return {promiseQueue} chains\n         */\n        add: function add(promise) {\n          queue[getId()] = promise;\n          return this;\n        },\n\n        /**\n         * Get the queue values\n         * @returns {Promise[]} the array of promises in the queue\n         */\n        getValues: function getValues() {\n          return _.values(queue);\n        },\n\n        /**\n         * Empty the queue\n         * @return {promiseQueue} chains\n         */\n        clear: function clear() {\n          queue = {};\n          return this;\n        },\n\n        /**\n         * Run the given promise at the end of the queue,\n         * @param {Function} promiseFn - a function that returns a promise\n         * @returns {Promise}\n         */\n        serie: function serie(promiseFn) {\n          var id = getId(); //the actual queue to execute before running the given promise\n\n          var currentQueue = this.getValues(); //use an emitter to notify the promise fulfillment, internally.\n\n          var emitter = eventifier(); //add a waiting promise into the queue (for others who are calling the queue)\n\n          queue[id] = new Promise(function (resolve) {\n            emitter.on('fulfilled', resolve);\n          }); //wait for the queue,\n          //then run the given promise\n          //and resolve the waiting promise (for others)\n\n          return Promise.all(currentQueue).then(function () {\n            if (_.isFunction(promiseFn)) {\n              return promiseFn();\n            }\n          }).then(function (data) {\n            emitter.trigger('fulfilled');\n            delete queue[id];\n            return data;\n          }).catch(function (err) {\n            queue = {};\n            throw err;\n          });\n        }\n      };\n    }\n\n    return promiseQueueFactory;\n\n});\n\n","define('core/store/localstorage',['lodash', 'core/promise', 'core/promiseQueue', 'lib/uuid'], function (_, Promise, promiseQueue, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Prefix all databases\n     * @type {String}\n     */\n\n    var prefix = 'tao-store-';\n    /**\n     * Alias to the Storage API\n     * @type {Storage}\n     */\n\n    var storage = window.localStorage;\n    /**\n     * The name of the store that contains the index of known stores.\n     * @type {String}\n     */\n\n    var knownStoresName = 'index';\n    /**\n     * The name of the store that contains the store id\n     * @type {String}\n     */\n\n    var idStoreName = 'id';\n    var writingQueue = promiseQueue();\n    /**\n     * Set an entry into a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @param {*} value - the value to set\n     * @returns {Promise<Boolean>}\n     */\n\n    var setEntry = function setEntry(storeName, key, value) {\n      return new Promise(function (resolve, reject) {\n        try {\n          storage.setItem(prefix + storeName + '.' + key, JSON.stringify(value));\n          resolve(true);\n        } catch (ex) {\n          reject(ex);\n        }\n      });\n    };\n    /**\n     * Get an entry from a store\n     * @param {String} storeName - unprefixed store name\n     * @param {String} key - entry key\n     * @returns {Promise<*>} resolves with the value\n     */\n\n\n    var getEntry = function getEntry(storeName, key) {\n      return new Promise(function (resolve, reject) {\n        var value;\n\n        try {\n          value = storage.getItem(prefix + storeName + '.' + key);\n\n          if (value === null) {\n            resolve();\n          } else {\n            resolve(JSON.parse(value));\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      });\n    };\n    /**\n     * Gets access to the store that contains the index of known stores.\n     * @returns {Promise}\n     */\n\n\n    var getKnownStores = function getKnownStores() {\n      return getEntry(knownStoresName, 'stores');\n    };\n    /**\n     * Adds a store into the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n\n\n    var registerStore = function registerStore(storeName) {\n      return getKnownStores().then(function (stores) {\n        stores = stores || {};\n        stores[storeName] = {\n          name: storeName,\n          lastOpen: Date.now()\n        };\n        return setEntry(knownStoresName, 'stores', stores);\n      });\n    };\n    /**\n     * Removes a store from the index of known stores.\n     * @param {String} storeName\n     * @returns {Promise<Boolean>}\n     */\n\n\n    var unregisterStore = function unregisterStore(storeName) {\n      return getKnownStores().then(function (stores) {\n        stores = stores || {};\n        delete stores[storeName];\n        return setEntry(knownStoresName, 'stores', stores);\n      });\n    };\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n\n\n    var localStorageBackend = function localStorageBackend(storeName) {\n      var name;\n      var registered = false;\n\n      var openStore = function openStore() {\n        if (registered) {\n          return Promise.resolve();\n        }\n\n        return registerStore(storeName).then(function () {\n          registered = true;\n        });\n      };\n\n      if (_.isEmpty(storeName) || !_.isString(storeName)) {\n        throw new TypeError('The store name is required');\n      } //prefix all storage entries to avoid global keys confusion\n\n\n      name = prefix + storeName + '.';\n      /**\n       * The store\n       */\n\n      return {\n        /**\n         * Get an item with the given key\n         * @param {String} key\n         * @returns {Promise} with the result in resolve, undefined if nothing\n         */\n        getItem: function getItem(key) {\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              return getEntry(storeName, key);\n            });\n          });\n        },\n\n        /**\n         * Set an item with the given key\n         * @param {String} key - the item key\n         * @param {*} value - the item value\n         * @returns {Promise} with true in resolve if added/updated\n         */\n        setItem: function setItem(key, value) {\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              return setEntry(storeName, key, value);\n            });\n          });\n        },\n\n        /**\n         * Remove an item with the given key\n         * @param {String} key - the item key\n         * @returns {Promise} with true in resolve if removed\n         */\n        removeItem: function removeItem(key) {\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              storage.removeItem(name + key);\n              return true;\n            });\n          });\n        },\n\n        /**\n         * Get all store items\n         * @returns {Promise<Object>} with a collection of items\n         */\n        getItems: function getItems() {\n          var keyPattern = new RegExp('^' + name);\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              return _(storage).map(function (entry, index) {\n                return storage.key(index);\n              }).filter(function (key) {\n                return keyPattern.test(key);\n              }).reduce(function (acc, key) {\n                var value;\n                var exposedKey = key.replace(name, '');\n\n                try {\n                  value = storage.getItem(key);\n\n                  if (value !== null) {\n                    acc[exposedKey] = JSON.parse(value);\n                  }\n                } catch (ex) {\n                  acc[exposedKey] = null;\n                }\n\n                return acc;\n              }, {});\n            });\n          });\n        },\n\n        /**\n         * Clear the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        clear: function clear() {\n          var keyPattern = new RegExp('^' + name);\n          return writingQueue.serie(function () {\n            return openStore().then(function () {\n              _(storage).map(function (entry, index) {\n                return storage.key(index);\n              }).filter(function (key) {\n                return keyPattern.test(key);\n              }).forEach(function (key) {\n                storage.removeItem(key);\n              });\n\n              return true;\n            });\n          });\n        },\n\n        /**\n         * Delete the database related to the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        removeStore: function removeStore() {\n          return this.clear().then(function () {\n            return unregisterStore(storeName);\n          });\n        }\n      };\n    };\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n\n\n    localStorageBackend.removeAll = function removeAll(validate) {\n      if (!_.isFunction(validate)) {\n        validate = null;\n      }\n\n      return getKnownStores().then(function (stores) {\n        var removing = _(stores).filter(function (store, storeName) {\n          return validate ? validate(storeName, store) : true;\n        }).map(function (store) {\n          if (store && store.name) {\n            return localStorageBackend(store.name).removeStore();\n          }\n\n          return Promise.resolve();\n        }).value();\n\n        return Promise.all(removing);\n      });\n    };\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n\n\n    localStorageBackend.getAll = function getAll(validate) {\n      return getKnownStores().then(function (stores) {\n        return _(stores).filter(function (store, storeName) {\n          return validate ? validate(storeName, store) : true;\n        }).map(function (store) {\n          return store.name;\n        }).value();\n      });\n    };\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n\n\n    localStorageBackend.getStoreIdentifier = function getStoreIdentifier() {\n      var idStore = localStorageBackend(idStoreName); //we use the storeName also as the id\n\n      return idStore.getItem(idStoreName).then(function (id) {\n        if (!_.isEmpty(id)) {\n          return id;\n        }\n\n        id = uuid();\n        return idStore.setItem(idStoreName, id).then(function () {\n          return id;\n        });\n      });\n    };\n\n    return localStorageBackend;\n\n});\n\n","define('core/store/indexeddb',['lodash', 'core/promise', 'lib/uuid'], function (_, Promise, uuid) { 'use strict';\n\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n  Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n  uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var idbstore = createCommonjsModule(function (module) {\n    /*global window:false, self:false, define:false, module:false */\n\n    /**\n     * @license IDBWrapper - A cross-browser wrapper for IndexedDB\n     * Version 1.7.0\n     * Copyright (c) 2011 - 2016 Jens Arps\n     * http://jensarps.de/\n     *\n     * Licensed under the MIT (X11) license\n     */\n    (function (name, definition, global) {\n\n      if (module.exports) {\n        module.exports = definition();\n      } else {\n        global[name] = definition();\n      }\n    })('IDBStore', function () {\n\n      var defaultErrorHandler = function defaultErrorHandler(error) {\n        throw error;\n      };\n\n      var defaultSuccessHandler = function defaultSuccessHandler() {};\n\n      var defaults = {\n        storeName: 'Store',\n        storePrefix: 'IDBWrapper-',\n        dbVersion: 1,\n        keyPath: 'id',\n        autoIncrement: true,\n        onStoreReady: function onStoreReady() {},\n        onError: defaultErrorHandler,\n        indexes: [],\n        implementationPreference: ['indexedDB', 'webkitIndexedDB', 'mozIndexedDB', 'shimIndexedDB']\n      };\n      /**\n       *\n       * The IDBStore constructor\n       *\n       * @constructor\n       * @name IDBStore\n       * @version 1.7.0\n       *\n       * @param {Object} [kwArgs] An options object used to configure the store and\n       *  set callbacks\n       * @param {String} [kwArgs.storeName='Store'] The name of the store\n       * @param {String} [kwArgs.storePrefix='IDBWrapper-'] A prefix that is\n       *  internally used to construct the name of the database, which will be\n       *  kwArgs.storePrefix + kwArgs.storeName\n       * @param {Number} [kwArgs.dbVersion=1] The version of the store\n       * @param {String} [kwArgs.keyPath='id'] The key path to use. If you want to\n       *  setup IDBWrapper to work with out-of-line keys, you need to set this to\n       *  `null`\n       * @param {Boolean} [kwArgs.autoIncrement=true] If set to true, IDBStore will\n       *  automatically make sure a unique keyPath value is present on each object\n       *  that is stored.\n       * @param {Function} [kwArgs.onStoreReady] A callback to be called when the\n       *  store is ready to be used.\n       * @param {Function} [kwArgs.onError=throw] A callback to be called when an\n       *  error occurred during instantiation of the store.\n       * @param {Array} [kwArgs.indexes=[]] An array of indexData objects\n       *  defining the indexes to use with the store. For every index to be used\n       *  one indexData object needs to be passed in the array.\n       *  An indexData object is defined as follows:\n       * @param {Object} [kwArgs.indexes.indexData] An object defining the index to\n       *  use\n       * @param {String} kwArgs.indexes.indexData.name The name of the index\n       * @param {String} [kwArgs.indexes.indexData.keyPath] The key path of the index\n       * @param {Boolean} [kwArgs.indexes.indexData.unique] Whether the index is unique\n       * @param {Boolean} [kwArgs.indexes.indexData.multiEntry] Whether the index is multi entry\n       * @param {Array} [kwArgs.implementationPreference=['indexedDB','webkitIndexedDB','mozIndexedDB','shimIndexedDB']] An array of strings naming implementations to be used, in order or preference\n       * @param {Function} [onStoreReady] A callback to be called when the store\n       * is ready to be used.\n       * @example\n       // create a store for customers with an additional index over the\n       // `lastname` property.\n       var myCustomerStore = new IDBStore({\n           dbVersion: 1,\n           storeName: 'customer-index',\n           keyPath: 'customerid',\n           autoIncrement: true,\n           onStoreReady: populateTable,\n           indexes: [\n               { name: 'lastname', keyPath: 'lastname', unique: false, multiEntry: false }\n           ]\n       });\n       * @example\n       // create a generic store\n       var myCustomerStore = new IDBStore({\n           storeName: 'my-data-store',\n           onStoreReady: function(){\n               // start working with the store.\n           }\n       });\n       */\n\n      var IDBStore = function IDBStore(kwArgs, onStoreReady) {\n        if (typeof onStoreReady == 'undefined' && typeof kwArgs == 'function') {\n          onStoreReady = kwArgs;\n        }\n\n        if (Object.prototype.toString.call(kwArgs) != '[object Object]') {\n          kwArgs = {};\n        }\n\n        for (var key in defaults) {\n          this[key] = typeof kwArgs[key] != 'undefined' ? kwArgs[key] : defaults[key];\n        }\n\n        this.dbName = this.storePrefix + this.storeName;\n        this.dbVersion = parseInt(this.dbVersion, 10) || 1;\n        onStoreReady && (this.onStoreReady = onStoreReady);\n        var env = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) == 'object' ? window : self;\n        var availableImplementations = this.implementationPreference.filter(function (implName) {\n          return implName in env;\n        });\n        this.implementation = availableImplementations[0];\n        this.idb = env[this.implementation];\n        this.keyRange = env.IDBKeyRange || env.webkitIDBKeyRange || env.mozIDBKeyRange;\n        this.consts = {\n          'READ_ONLY': 'readonly',\n          'READ_WRITE': 'readwrite',\n          'VERSION_CHANGE': 'versionchange',\n          'NEXT': 'next',\n          'NEXT_NO_DUPLICATE': 'nextunique',\n          'PREV': 'prev',\n          'PREV_NO_DUPLICATE': 'prevunique'\n        };\n        this.openDB();\n      };\n      /** @lends IDBStore.prototype */\n\n\n      var proto = {\n        /**\n         * A pointer to the IDBStore ctor\n         *\n         * @private\n         * @type {Function}\n         * @constructs\n         */\n        constructor: IDBStore,\n\n        /**\n         * The version of IDBStore\n         *\n         * @type {String}\n         */\n        version: '1.7.0',\n\n        /**\n         * A reference to the IndexedDB object\n         *\n         * @type {IDBDatabase}\n         */\n        db: null,\n\n        /**\n         * The full name of the IndexedDB used by IDBStore, composed of\n         * this.storePrefix + this.storeName\n         *\n         * @type {String}\n         */\n        dbName: null,\n\n        /**\n         * The version of the IndexedDB used by IDBStore\n         *\n         * @type {Number}\n         */\n        dbVersion: null,\n\n        /**\n         * A reference to the objectStore used by IDBStore\n         *\n         * @type {IDBObjectStore}\n         */\n        store: null,\n\n        /**\n         * The store name\n         *\n         * @type {String}\n         */\n        storeName: null,\n\n        /**\n         * The prefix to prepend to the store name\n         *\n         * @type {String}\n         */\n        storePrefix: null,\n\n        /**\n         * The key path\n         *\n         * @type {String}\n         */\n        keyPath: null,\n\n        /**\n         * Whether IDBStore uses autoIncrement\n         *\n         * @type {Boolean}\n         */\n        autoIncrement: null,\n\n        /**\n         * The indexes used by IDBStore\n         *\n         * @type {Array}\n         */\n        indexes: null,\n\n        /**\n         * The implemantations to try to use, in order of preference\n         *\n         * @type {Array}\n         */\n        implementationPreference: null,\n\n        /**\n         * The actual implementation being used\n         *\n         * @type {String}\n         */\n        implementation: '',\n\n        /**\n         * The callback to be called when the store is ready to be used\n         *\n         * @type {Function}\n         */\n        onStoreReady: null,\n\n        /**\n         * The callback to be called if an error occurred during instantiation\n         * of the store\n         *\n         * @type {Function}\n         */\n        onError: null,\n\n        /**\n         * The internal insertID counter\n         *\n         * @type {Number}\n         * @private\n         */\n        _insertIdCount: 0,\n\n        /**\n         * Opens an IndexedDB; called by the constructor.\n         *\n         * Will check if versions match and compare provided index configuration\n         * with existing ones, and update indexes if necessary.\n         *\n         * Will call this.onStoreReady() if everything went well and the store\n         * is ready to use, and this.onError() is something went wrong.\n         *\n         * @private\n         *\n         */\n        openDB: function openDB() {\n          var openRequest = this.idb.open(this.dbName, this.dbVersion);\n          var preventSuccessCallback = false;\n\n          openRequest.onerror = function (error) {\n            var gotVersionErr = false;\n\n            if ('error' in error.target) {\n              gotVersionErr = error.target.error.name == 'VersionError';\n            } else if ('errorCode' in error.target) {\n              gotVersionErr = error.target.errorCode == 12;\n            }\n\n            if (gotVersionErr) {\n              this.onError(new Error('The version number provided is lower than the existing one.'));\n            } else {\n              this.onError(error);\n            }\n          }.bind(this);\n\n          openRequest.onsuccess = function (event) {\n            if (preventSuccessCallback) {\n              return;\n            }\n\n            if (this.db) {\n              this.onStoreReady();\n              return;\n            }\n\n            this.db = event.target.result;\n\n            if (typeof this.db.version == 'string') {\n              this.onError(new Error('The IndexedDB implementation in this browser is outdated. Please upgrade your browser.'));\n              return;\n            }\n\n            if (!this.db.objectStoreNames.contains(this.storeName)) {\n              // We should never ever get here.\n              // Lets notify the user anyway.\n              this.onError(new Error('Object store couldn\\'t be created.'));\n              return;\n            }\n\n            var emptyTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n            this.store = emptyTransaction.objectStore(this.storeName); // check indexes\n\n            var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n            this.indexes.forEach(function (indexData) {\n              var indexName = indexData.name;\n\n              if (!indexName) {\n                preventSuccessCallback = true;\n                this.onError(new Error('Cannot create index: No index name given.'));\n                return;\n              }\n\n              this.normalizeIndexData(indexData);\n\n              if (this.hasIndex(indexName)) {\n                // check if it complies\n                var actualIndex = this.store.index(indexName);\n                var complies = this.indexComplies(actualIndex, indexData);\n\n                if (!complies) {\n                  preventSuccessCallback = true;\n                  this.onError(new Error('Cannot modify index \"' + indexName + '\" for current version. Please bump version number to ' + (this.dbVersion + 1) + '.'));\n                }\n\n                existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n              } else {\n                preventSuccessCallback = true;\n                this.onError(new Error('Cannot create new index \"' + indexName + '\" for current version. Please bump version number to ' + (this.dbVersion + 1) + '.'));\n              }\n            }, this);\n\n            if (existingIndexes.length) {\n              preventSuccessCallback = true;\n              this.onError(new Error('Cannot delete index(es) \"' + existingIndexes.toString() + '\" for current version. Please bump version number to ' + (this.dbVersion + 1) + '.'));\n            }\n\n            preventSuccessCallback || this.onStoreReady();\n          }.bind(this);\n\n          openRequest.onupgradeneeded = function (\n          /* IDBVersionChangeEvent */\n          event) {\n            this.db = event.target.result;\n\n            if (this.db.objectStoreNames.contains(this.storeName)) {\n              this.store = event.target.transaction.objectStore(this.storeName);\n            } else {\n              var optionalParameters = {\n                autoIncrement: this.autoIncrement\n              };\n\n              if (this.keyPath !== null) {\n                optionalParameters.keyPath = this.keyPath;\n              }\n\n              this.store = this.db.createObjectStore(this.storeName, optionalParameters);\n            }\n\n            var existingIndexes = Array.prototype.slice.call(this.getIndexList());\n            this.indexes.forEach(function (indexData) {\n              var indexName = indexData.name;\n\n              if (!indexName) {\n                preventSuccessCallback = true;\n                this.onError(new Error('Cannot create index: No index name given.'));\n              }\n\n              this.normalizeIndexData(indexData);\n\n              if (this.hasIndex(indexName)) {\n                // check if it complies\n                var actualIndex = this.store.index(indexName);\n                var complies = this.indexComplies(actualIndex, indexData);\n\n                if (!complies) {\n                  // index differs, need to delete and re-create\n                  this.store.deleteIndex(indexName);\n                  this.store.createIndex(indexName, indexData.keyPath, {\n                    unique: indexData.unique,\n                    multiEntry: indexData.multiEntry\n                  });\n                }\n\n                existingIndexes.splice(existingIndexes.indexOf(indexName), 1);\n              } else {\n                this.store.createIndex(indexName, indexData.keyPath, {\n                  unique: indexData.unique,\n                  multiEntry: indexData.multiEntry\n                });\n              }\n            }, this);\n\n            if (existingIndexes.length) {\n              existingIndexes.forEach(function (_indexName) {\n                this.store.deleteIndex(_indexName);\n              }, this);\n            }\n          }.bind(this);\n        },\n\n        /**\n         * Deletes the database used for this store if the IDB implementations\n         * provides that functionality.\n         *\n         * @param {Function} [onSuccess] A callback that is called if deletion\n         *  was successful.\n         * @param {Function} [onError] A callback that is called if deletion\n         *  failed.\n         */\n        deleteDatabase: function deleteDatabase(onSuccess, onError) {\n          if (this.idb.deleteDatabase) {\n            this.db.close();\n            var deleteRequest = this.idb.deleteDatabase(this.dbName);\n            deleteRequest.onsuccess = onSuccess;\n            deleteRequest.onerror = onError;\n          } else {\n            onError(new Error('Browser does not support IndexedDB deleteDatabase!'));\n          }\n        },\n\n        /*********************\n         * data manipulation *\n         *********************/\n\n        /**\n         * Puts an object into the store. If an entry with the given id exists,\n         * it will be overwritten. This method has a different signature for inline\n         * keys and out-of-line keys; please see the examples below.\n         *\n         * @param {*} [key] The key to store. This is only needed if IDBWrapper\n         *  is set to use out-of-line keys. For inline keys - the default scenario -\n         *  this can be omitted.\n         * @param {Object} value The data object to store.\n         * @param {Function} [onSuccess] A callback that is called if insertion\n         *  was successful.\n         * @param {Function} [onError] A callback that is called if insertion\n         *  failed.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         * @example\n         // Storing an object, using inline keys (the default scenario):\n         var myCustomer = {\n             customerid: 2346223,\n             lastname: 'Doe',\n             firstname: 'John'\n         };\n         myCustomerStore.put(myCustomer, mySuccessHandler, myErrorHandler);\n         // Note that passing success- and error-handlers is optional.\n         * @example\n         // Storing an object, using out-of-line keys:\n         var myCustomer = {\n             lastname: 'Doe',\n             firstname: 'John'\n         };\n         myCustomerStore.put(2346223, myCustomer, mySuccessHandler, myErrorHandler);\n         // Note that passing success- and error-handlers is optional.\n         */\n        put: function put(key, value, onSuccess, onError) {\n          if (this.keyPath !== null) {\n            onError = onSuccess;\n            onSuccess = value;\n            value = key;\n          }\n\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null,\n              putRequest;\n          var putTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          putTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          putTransaction.onabort = onError;\n          putTransaction.onerror = onError;\n\n          if (this.keyPath !== null) {\n            // in-line keys\n            this._addIdPropertyIfNeeded(value);\n\n            putRequest = putTransaction.objectStore(this.storeName).put(value);\n          } else {\n            // out-of-line keys\n            putRequest = putTransaction.objectStore(this.storeName).put(value, key);\n          }\n\n          putRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          putRequest.onerror = onError;\n          return putTransaction;\n        },\n\n        /**\n         * Retrieves an object from the store. If no entry exists with the given id,\n         * the success handler will be called with null as first and only argument.\n         *\n         * @param {*} key The id of the object to fetch.\n         * @param {Function} [onSuccess] A callback that is called if fetching\n         *  was successful. Will receive the object as only argument.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        get: function get(key, onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null;\n          var getTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n\n          getTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          getTransaction.onabort = onError;\n          getTransaction.onerror = onError;\n          var getRequest = getTransaction.objectStore(this.storeName).get(key);\n\n          getRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          getRequest.onerror = onError;\n          return getTransaction;\n        },\n\n        /**\n         * Removes an object from the store.\n         *\n         * @param {*} key The id of the object to remove.\n         * @param {Function} [onSuccess] A callback that is called if the removal\n         *  was successful.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        remove: function remove(key, onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null;\n          var removeTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          removeTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          removeTransaction.onabort = onError;\n          removeTransaction.onerror = onError;\n          var deleteRequest = removeTransaction.objectStore(this.storeName)['delete'](key);\n\n          deleteRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          deleteRequest.onerror = onError;\n          return removeTransaction;\n        },\n\n        /**\n         * Runs a batch of put and/or remove operations on the store.\n         *\n         * @param {Array} dataArray An array of objects containing the operation to run\n         *  and the data object (for put operations).\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        batch: function batch(dataArray, onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n\n          if (Object.prototype.toString.call(dataArray) != '[object Array]') {\n            onError(new Error('dataArray argument must be of type Array.'));\n          } else if (dataArray.length === 0) {\n            return onSuccess(true);\n          }\n\n          var count = dataArray.length;\n          var called = false;\n          var hasSuccess = false;\n          var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          batchTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(hasSuccess);\n          };\n\n          batchTransaction.onabort = onError;\n          batchTransaction.onerror = onError;\n\n          var onItemSuccess = function onItemSuccess() {\n            count--;\n\n            if (count === 0 && !called) {\n              called = true;\n              hasSuccess = true;\n            }\n          };\n\n          dataArray.forEach(function (operation) {\n            var type = operation.type;\n            var key = operation.key;\n            var value = operation.value;\n\n            var onItemError = function onItemError(err) {\n              batchTransaction.abort();\n\n              if (!called) {\n                called = true;\n                onError(err, type, key);\n              }\n            };\n\n            if (type == 'remove') {\n              var deleteRequest = batchTransaction.objectStore(this.storeName)['delete'](key);\n              deleteRequest.onsuccess = onItemSuccess;\n              deleteRequest.onerror = onItemError;\n            } else if (type == 'put') {\n              var putRequest;\n\n              if (this.keyPath !== null) {\n                // in-line keys\n                this._addIdPropertyIfNeeded(value);\n\n                putRequest = batchTransaction.objectStore(this.storeName).put(value);\n              } else {\n                // out-of-line keys\n                putRequest = batchTransaction.objectStore(this.storeName).put(value, key);\n              }\n\n              putRequest.onsuccess = onItemSuccess;\n              putRequest.onerror = onItemError;\n            }\n          }, this);\n          return batchTransaction;\n        },\n\n        /**\n         * Takes an array of objects and stores them in a single transaction.\n         *\n         * @param {Array} dataArray An array of objects to store\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        putBatch: function putBatch(dataArray, onSuccess, onError) {\n          var batchData = dataArray.map(function (item) {\n            return {\n              type: 'put',\n              value: item\n            };\n          });\n          return this.batch(batchData, onSuccess, onError);\n        },\n\n        /**\n         * Like putBatch, takes an array of objects and stores them in a single\n         * transaction, but allows processing of the result values.  Returns the\n         * processed records containing the key for newly created records to the\n         * onSuccess calllback instead of only returning true or false for success.\n         * In addition, added the option for the caller to specify a key field that\n         * should be set to the newly created key.\n         *\n         * @param {Array} dataArray An array of objects to store\n         * @param {Object} [options] An object containing optional options\n         * @param {String} [options.keyField=this.keyPath] Specifies a field in the record to update\n         *  with the auto-incrementing key. Defaults to the store's keyPath.\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         *\n         */\n        upsertBatch: function upsertBatch(dataArray, options, onSuccess, onError) {\n          // handle `dataArray, onSuccess, onError` signature\n          if (typeof options == 'function') {\n            onSuccess = options;\n            onError = onSuccess;\n            options = {};\n          }\n\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          options || (options = {});\n\n          if (Object.prototype.toString.call(dataArray) != '[object Array]') {\n            onError(new Error('dataArray argument must be of type Array.'));\n          }\n\n          var keyField = options.keyField || this.keyPath;\n          var count = dataArray.length;\n          var called = false;\n          var hasSuccess = false;\n          var index = 0; // assume success callbacks are executed in order\n\n          var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          batchTransaction.oncomplete = function () {\n            if (hasSuccess) {\n              onSuccess(dataArray);\n            } else {\n              onError(false);\n            }\n          };\n\n          batchTransaction.onabort = onError;\n          batchTransaction.onerror = onError;\n\n          var onItemSuccess = function onItemSuccess(event) {\n            var record = dataArray[index++];\n            record[keyField] = event.target.result;\n            count--;\n\n            if (count === 0 && !called) {\n              called = true;\n              hasSuccess = true;\n            }\n          };\n\n          dataArray.forEach(function (record) {\n            var key = record.key;\n\n            var onItemError = function onItemError(err) {\n              batchTransaction.abort();\n\n              if (!called) {\n                called = true;\n                onError(err);\n              }\n            };\n\n            var putRequest;\n\n            if (this.keyPath !== null) {\n              // in-line keys\n              this._addIdPropertyIfNeeded(record);\n\n              putRequest = batchTransaction.objectStore(this.storeName).put(record);\n            } else {\n              // out-of-line keys\n              putRequest = batchTransaction.objectStore(this.storeName).put(record, key);\n            }\n\n            putRequest.onsuccess = onItemSuccess;\n            putRequest.onerror = onItemError;\n          }, this);\n          return batchTransaction;\n        },\n\n        /**\n         * Takes an array of keys and removes matching objects in a single\n         * transaction.\n         *\n         * @param {Array} keyArray An array of keys to remove\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        removeBatch: function removeBatch(keyArray, onSuccess, onError) {\n          var batchData = keyArray.map(function (key) {\n            return {\n              type: 'remove',\n              key: key\n            };\n          });\n          return this.batch(batchData, onSuccess, onError);\n        },\n\n        /**\n         * Takes an array of keys and fetches matching objects\n         *\n         * @param {Array} keyArray An array of keys identifying the objects to fetch\n         * @param {Function} [onSuccess] A callback that is called if all operations\n         *  were successful.\n         * @param {Function} [onError] A callback that is called if an error\n         *  occurred during one of the operations.\n         * @param {String} [arrayType='sparse'] The type of array to pass to the\n         *  success handler. May be one of 'sparse', 'dense' or 'skip'. Defaults to\n         *  'sparse'. This parameter specifies how to handle the situation if a get\n         *  operation did not throw an error, but there was no matching object in\n         *  the database. In most cases, 'sparse' provides the most desired\n         *  behavior. See the examples for details.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         * @example\n         // given that there are two objects in the database with the keypath\n         // values 1 and 2, and the call looks like this:\n         myStore.getBatch([1, 5, 2], onError, function (data) { … }, arrayType);\n          // this is what the `data` array will be like:\n          // arrayType == 'sparse':\n         // data is a sparse array containing two entries and having a length of 3:\n         [Object, 2: Object]\n         0: Object\n         2: Object\n         length: 3\n         // calling forEach on data will result in the callback being called two\n         // times, with the index parameter matching the index of the key in the\n         // keyArray.\n          // arrayType == 'dense':\n         // data is a dense array containing three entries and having a length of 3,\n         // where data[1] is of type undefined:\n         [Object, undefined, Object]\n         0: Object\n         1: undefined\n         2: Object\n         length: 3\n         // calling forEach on data will result in the callback being called three\n         // times, with the index parameter matching the index of the key in the\n         // keyArray, but the second call will have undefined as first argument.\n          // arrayType == 'skip':\n         // data is a dense array containing two entries and having a length of 2:\n         [Object, Object]\n         0: Object\n         1: Object\n         length: 2\n         // calling forEach on data will result in the callback being called two\n         // times, with the index parameter not matching the index of the key in the\n         // keyArray.\n         */\n        getBatch: function getBatch(keyArray, onSuccess, onError, arrayType) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          arrayType || (arrayType = 'sparse');\n\n          if (Object.prototype.toString.call(keyArray) != '[object Array]') {\n            onError(new Error('keyArray argument must be of type Array.'));\n          } else if (keyArray.length === 0) {\n            return onSuccess([]);\n          }\n\n          var data = [];\n          var count = keyArray.length;\n          var hasSuccess = false;\n          var result = null;\n          var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n\n          batchTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          batchTransaction.onabort = onError;\n          batchTransaction.onerror = onError;\n\n          var onItemSuccess = function onItemSuccess(event) {\n            if (event.target.result || arrayType == 'dense') {\n              data.push(event.target.result);\n            } else if (arrayType == 'sparse') {\n              data.length++;\n            }\n\n            count--;\n\n            if (count === 0) {\n              hasSuccess = true;\n              result = data;\n            }\n          };\n\n          keyArray.forEach(function (key) {\n            var onItemError = function onItemError(err) {\n              result = err;\n              onError(err);\n              batchTransaction.abort();\n            };\n\n            var getRequest = batchTransaction.objectStore(this.storeName).get(key);\n            getRequest.onsuccess = onItemSuccess;\n            getRequest.onerror = onItemError;\n          }, this);\n          return batchTransaction;\n        },\n\n        /**\n         * Fetches all entries in the store.\n         *\n         * @param {Function} [onSuccess] A callback that is called if the operation\n         *  was successful. Will receive an array of objects.\n         * @param {Function} [onError] A callback that will be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        getAll: function getAll(onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var getAllTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n          var store = getAllTransaction.objectStore(this.storeName);\n\n          if (store.getAll) {\n            this._getAllNative(getAllTransaction, store, onSuccess, onError);\n          } else {\n            this._getAllCursor(getAllTransaction, store, onSuccess, onError);\n          }\n\n          return getAllTransaction;\n        },\n\n        /**\n         * Implements getAll for IDB implementations that have a non-standard\n         * getAll() method.\n         *\n         * @param {IDBTransaction} getAllTransaction An open READ transaction.\n         * @param {IDBObjectStore} store A reference to the store.\n         * @param {Function} onSuccess A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} onError A callback that will be called if an\n         *  error occurred during the operation.\n         * @private\n         */\n        _getAllNative: function _getAllNative(getAllTransaction, store, onSuccess, onError) {\n          var hasSuccess = false,\n              result = null;\n\n          getAllTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          getAllTransaction.onabort = onError;\n          getAllTransaction.onerror = onError;\n          var getAllRequest = store.getAll();\n\n          getAllRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          getAllRequest.onerror = onError;\n        },\n\n        /**\n         * Implements getAll for IDB implementations that do not have a getAll()\n         * method.\n         *\n         * @param {IDBTransaction} getAllTransaction An open READ transaction.\n         * @param {IDBObjectStore} store A reference to the store.\n         * @param {Function} onSuccess A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} onError A callback that will be called if an\n         *  error occurred during the operation.\n         * @private\n         */\n        _getAllCursor: function _getAllCursor(getAllTransaction, store, onSuccess, onError) {\n          var all = [],\n              hasSuccess = false,\n              result = null;\n\n          getAllTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          getAllTransaction.onabort = onError;\n          getAllTransaction.onerror = onError;\n          var cursorRequest = store.openCursor();\n\n          cursorRequest.onsuccess = function (event) {\n            var cursor = event.target.result;\n\n            if (cursor) {\n              all.push(cursor.value);\n              cursor['continue']();\n            } else {\n              hasSuccess = true;\n              result = all;\n            }\n          };\n\n          cursorRequest.onError = onError;\n        },\n\n        /**\n         * Clears the store, i.e. deletes all entries in the store.\n         *\n         * @param {Function} [onSuccess] A callback that will be called if the\n         *  operation was successful.\n         * @param {Function} [onError] A callback that will be called if an\n         *  error occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        clear: function clear(onSuccess, onError) {\n          onError || (onError = defaultErrorHandler);\n          onSuccess || (onSuccess = defaultSuccessHandler);\n          var hasSuccess = false,\n              result = null;\n          var clearTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);\n\n          clearTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          clearTransaction.onabort = onError;\n          clearTransaction.onerror = onError;\n          var clearRequest = clearTransaction.objectStore(this.storeName).clear();\n\n          clearRequest.onsuccess = function (event) {\n            hasSuccess = true;\n            result = event.target.result;\n          };\n\n          clearRequest.onerror = onError;\n          return clearTransaction;\n        },\n\n        /**\n         * Checks if an id property needs to present on a object and adds one if\n         * necessary.\n         *\n         * @param {Object} dataObj The data object that is about to be stored\n         * @private\n         */\n        _addIdPropertyIfNeeded: function _addIdPropertyIfNeeded(dataObj) {\n          if (typeof dataObj[this.keyPath] == 'undefined') {\n            dataObj[this.keyPath] = this._insertIdCount++ + Date.now();\n          }\n        },\n\n        /************\n         * indexing *\n         ************/\n\n        /**\n         * Returns a DOMStringList of index names of the store.\n         *\n         * @return {DOMStringList} The list of index names\n         */\n        getIndexList: function getIndexList() {\n          return this.store.indexNames;\n        },\n\n        /**\n         * Checks if an index with the given name exists in the store.\n         *\n         * @param {String} indexName The name of the index to look for\n         * @return {Boolean} Whether the store contains an index with the given name\n         */\n        hasIndex: function hasIndex(indexName) {\n          return this.store.indexNames.contains(indexName);\n        },\n\n        /**\n         * Normalizes an object containing index data and assures that all\n         * properties are set.\n         *\n         * @param {Object} indexData The index data object to normalize\n         * @param {String} indexData.name The name of the index\n         * @param {String} [indexData.keyPath] The key path of the index\n         * @param {Boolean} [indexData.unique] Whether the index is unique\n         * @param {Boolean} [indexData.multiEntry] Whether the index is multi entry\n         */\n        normalizeIndexData: function normalizeIndexData(indexData) {\n          indexData.keyPath = indexData.keyPath || indexData.name;\n          indexData.unique = !!indexData.unique;\n          indexData.multiEntry = !!indexData.multiEntry;\n        },\n\n        /**\n         * Checks if an actual index complies with an expected index.\n         *\n         * @param {IDBIndex} actual The actual index found in the store\n         * @param {Object} expected An Object describing an expected index\n         * @return {Boolean} Whether both index definitions are identical\n         */\n        indexComplies: function indexComplies(actual, expected) {\n          var complies = ['keyPath', 'unique', 'multiEntry'].every(function (key) {\n            // IE10 returns undefined for no multiEntry\n            if (key == 'multiEntry' && actual[key] === undefined && expected[key] === false) {\n              return true;\n            } // Compound keys\n\n\n            if (key == 'keyPath' && Object.prototype.toString.call(expected[key]) == '[object Array]') {\n              var exp = expected.keyPath;\n              var act = actual.keyPath; // IE10 can't handle keyPath sequences and stores them as a string.\n              // The index will be unusable there, but let's still return true if\n              // the keyPath sequence matches.\n\n              if (typeof act == 'string') {\n                return exp.toString() == act;\n              } // Chrome/Opera stores keyPath squences as DOMStringList, Firefox\n              // as Array\n\n\n              if (!(typeof act.contains == 'function' || typeof act.indexOf == 'function')) {\n                return false;\n              }\n\n              if (act.length !== exp.length) {\n                return false;\n              }\n\n              for (var i = 0, m = exp.length; i < m; i++) {\n                if (!(act.contains && act.contains(exp[i]) || act.indexOf(exp[i] !== -1))) {\n                  return false;\n                }\n              }\n\n              return true;\n            }\n\n            return expected[key] == actual[key];\n          });\n          return complies;\n        },\n\n        /**********\n         * cursor *\n         **********/\n\n        /**\n         * Iterates over the store using the given options and calling onItem\n         * for each entry matching the options.\n         *\n         * @param {Function} onItem A callback to be called for each match\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {String} [options.order=ASC] The order in which to provide the\n         *  results, can be 'DESC' or 'ASC'\n         * @param {Boolean} [options.autoContinue=true] Whether to automatically\n         *  iterate the cursor to the next result\n         * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n         *  duplicate matches\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Boolean} [options.writeAccess=false] Whether grant write access\n         *  to the store in the onItem callback\n         * @param {Function} [options.onEnd=null] A callback to be called after\n         *  iteration has ended\n         * @param {Function} [options.onError=throw] A callback to be called\n         *  if an error occurred during the operation.\n         * @param {Number} [options.limit=Infinity] Limit the number of returned\n         *  results to this number\n         * @param {Number} [options.offset=0] Skip the provided number of results\n         *  in the resultset\n         * @param {Boolean} [options.allowItemRejection=false] Allows the onItem\n         * function to return a Boolean to accept or reject the current item\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        iterate: function iterate(onItem, options) {\n          options = mixin({\n            index: null,\n            order: 'ASC',\n            autoContinue: true,\n            filterDuplicates: false,\n            keyRange: null,\n            writeAccess: false,\n            onEnd: null,\n            onError: defaultErrorHandler,\n            limit: Infinity,\n            offset: 0,\n            allowItemRejection: false\n          }, options || {});\n          var directionType = options.order.toLowerCase() == 'desc' ? 'PREV' : 'NEXT';\n\n          if (options.filterDuplicates) {\n            directionType += '_NO_DUPLICATE';\n          }\n\n          var hasSuccess = false;\n          var cursorTransaction = this.db.transaction([this.storeName], this.consts[options.writeAccess ? 'READ_WRITE' : 'READ_ONLY']);\n          var cursorTarget = cursorTransaction.objectStore(this.storeName);\n\n          if (options.index) {\n            cursorTarget = cursorTarget.index(options.index);\n          }\n\n          var recordCount = 0;\n\n          cursorTransaction.oncomplete = function () {\n            if (!hasSuccess) {\n              options.onError(null);\n              return;\n            }\n\n            if (options.onEnd) {\n              options.onEnd();\n            } else {\n              onItem(null);\n            }\n          };\n\n          cursorTransaction.onabort = options.onError;\n          cursorTransaction.onerror = options.onError;\n          var cursorRequest = cursorTarget.openCursor(options.keyRange, this.consts[directionType]);\n          cursorRequest.onerror = options.onError;\n\n          cursorRequest.onsuccess = function (event) {\n            var cursor = event.target.result;\n\n            if (cursor) {\n              if (options.offset) {\n                cursor.advance(options.offset);\n                options.offset = 0;\n              } else {\n                var onItemReturn = onItem(cursor.value, cursor, cursorTransaction);\n\n                if (!options.allowItemRejection || onItemReturn !== false) {\n                  recordCount++;\n                }\n\n                if (options.autoContinue) {\n                  if (recordCount + options.offset < options.limit) {\n                    cursor['continue']();\n                  } else {\n                    hasSuccess = true;\n                  }\n                }\n              }\n            } else {\n              hasSuccess = true;\n            }\n          };\n\n          return cursorTransaction;\n        },\n\n        /**\n         * Runs a query against the store and passes an array containing matched\n         * objects to the success handler.\n         *\n         * @param {Function} onSuccess A callback to be called when the operation\n         *  was successful.\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {String} [options.order=ASC] The order in which to provide the\n         *  results, can be 'DESC' or 'ASC'\n         * @param {Boolean} [options.filterDuplicates=false] Whether to exclude\n         *  duplicate matches\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Function} [options.onError=throw] A callback to be called\n         *  if an error occurred during the operation.\n         * @param {Number} [options.limit=Infinity] Limit the number of returned\n         *  results to this number\n         * @param {Number} [options.offset=0] Skip the provided number of results\n         *  in the resultset\n         * @param {Function} [options.filter=null] A custom filter function to\n         *  apply to query resuts before returning. Must return `false` to reject\n         *  an item. Can be combined with keyRanges.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        query: function query(onSuccess, options) {\n          var result = [],\n              processedItems = 0;\n          options = options || {};\n          options.autoContinue = true;\n          options.writeAccess = false;\n          options.allowItemRejection = !!options.filter;\n\n          options.onEnd = function () {\n            onSuccess(result, processedItems);\n          };\n\n          return this.iterate(function (item) {\n            processedItems++;\n            var accept = options.filter ? options.filter(item) : true;\n\n            if (accept !== false) {\n              result.push(item);\n            }\n\n            return accept;\n          }, options);\n        },\n\n        /**\n         *\n         * Runs a query against the store, but only returns the number of matches\n         * instead of the matches itself.\n         *\n         * @param {Function} onSuccess A callback to be called if the opration\n         *  was successful.\n         * @param {Object} [options] An object defining specific options\n         * @param {String} [options.index=null] A name of an IDBIndex to operate on\n         * @param {IDBKeyRange} [options.keyRange=null] An IDBKeyRange to use\n         * @param {Function} [options.onError=throw] A callback to be called if an error\n         *  occurred during the operation.\n         * @returns {IDBTransaction} The transaction used for this operation.\n         */\n        count: function count(onSuccess, options) {\n          options = mixin({\n            index: null,\n            keyRange: null\n          }, options || {});\n          var onError = options.onError || defaultErrorHandler;\n          var hasSuccess = false,\n              result = null;\n          var cursorTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);\n\n          cursorTransaction.oncomplete = function () {\n            var callback = hasSuccess ? onSuccess : onError;\n            callback(result);\n          };\n\n          cursorTransaction.onabort = onError;\n          cursorTransaction.onerror = onError;\n          var cursorTarget = cursorTransaction.objectStore(this.storeName);\n\n          if (options.index) {\n            cursorTarget = cursorTarget.index(options.index);\n          }\n\n          var countRequest = cursorTarget.count(options.keyRange);\n\n          countRequest.onsuccess = function (evt) {\n            hasSuccess = true;\n            result = evt.target.result;\n          };\n\n          countRequest.onError = onError;\n          return cursorTransaction;\n        },\n\n        /**************/\n\n        /* key ranges */\n\n        /**************/\n\n        /**\n         * Creates a key range using specified options. This key range can be\n         * handed over to the count() and iterate() methods.\n         *\n         * Note: You must provide at least one or both of \"lower\" or \"upper\" value.\n         *\n         * @param {Object} options The options for the key range to create\n         * @param {*} [options.lower] The lower bound\n         * @param {Boolean} [options.excludeLower] Whether to exclude the lower\n         *  bound passed in options.lower from the key range\n         * @param {*} [options.upper] The upper bound\n         * @param {Boolean} [options.excludeUpper] Whether to exclude the upper\n         *  bound passed in options.upper from the key range\n         * @param {*} [options.only] A single key value. Use this if you need a key\n         *  range that only includes one value for a key. Providing this\n         *  property invalidates all other properties.\n         * @return {IDBKeyRange} The IDBKeyRange representing the specified options\n         */\n        makeKeyRange: function makeKeyRange(options) {\n          /*jshint onecase:true */\n          var keyRange,\n              hasLower = typeof options.lower != 'undefined',\n              hasUpper = typeof options.upper != 'undefined',\n              isOnly = typeof options.only != 'undefined';\n\n          switch (true) {\n            case isOnly:\n              keyRange = this.keyRange.only(options.only);\n              break;\n\n            case hasLower && hasUpper:\n              keyRange = this.keyRange.bound(options.lower, options.upper, options.excludeLower, options.excludeUpper);\n              break;\n\n            case hasLower:\n              keyRange = this.keyRange.lowerBound(options.lower, options.excludeLower);\n              break;\n\n            case hasUpper:\n              keyRange = this.keyRange.upperBound(options.upper, options.excludeUpper);\n              break;\n\n            default:\n              throw new Error('Cannot create KeyRange. Provide one or both of \"lower\" or \"upper\" value, or an \"only\" value.');\n          }\n\n          return keyRange;\n        }\n      };\n      /** helpers **/\n\n      var empty = {};\n\n      function mixin(target, source) {\n        var name, s;\n\n        for (name in source) {\n          s = source[name];\n\n          if (s !== empty[name] && s !== target[name]) {\n            target[name] = s;\n          }\n        }\n\n        return target;\n      }\n\n      IDBStore.prototype = proto;\n      IDBStore.version = proto.version;\n      return IDBStore;\n    }, commonjsGlobal);\n  });\n\n  /**\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n   */\n  /**\n   * Prefix all databases\n   * @type {String}\n   */\n\n  var prefix = 'tao-store-';\n  /**\n   * Access to the index of known stores.\n   * This index is needed to maintain the list of stores created by TAO, in order to apply an auto clean up.\n   * @type {Promise}\n   */\n\n  var knownStores;\n  /**\n   * The name of the store that contains the index of known stores.\n   * @type {String}\n   */\n\n  var knownStoresName = 'index';\n  /**\n   * The name of the store that contains the store id\n   * @type {String}\n   */\n\n  var idStoreName = 'id';\n  /**\n   * Check if we're using the v2 of IndexedDB\n   * @type {Boolean}\n   */\n\n  var isIndexedDB2 = typeof IDBObjectStore !== 'undefined' && 'getAll' in IDBObjectStore.prototype;\n  /**\n   * Opens a store\n   * @returns {Promise} with store instance in resolve\n   */\n\n  var openStore = function openStore(storeName) {\n    return new Promise(function (resolve, reject) {\n      var store = new idbstore({\n        dbVersion: 1,\n        storeName: storeName,\n        storePrefix: prefix,\n        keyPath: 'key',\n        autoIncrement: true,\n        onStoreReady: function onStoreReady() {\n          // auto closes when the changed version reflects a DB deletion\n          store.db.onversionchange = function onversionchange(e) {\n            if (!e || !e.newVersion) {\n              store.db.close();\n            }\n          };\n\n          resolve(store);\n        },\n        onError: reject\n      });\n    });\n  };\n  /**\n   * Sets an entry into a particular store\n   * @param store\n   * @param key\n   * @param value\n   * @returns {Promise}\n   */\n\n\n  var setEntry = function setEntry(store, key, value) {\n    return new Promise(function (resolve, reject) {\n      var entry = {\n        key: key,\n        value: value\n      };\n\n      var success = function success(returnKey) {\n        resolve(returnKey === key);\n      };\n\n      store.put(entry, success, reject);\n    });\n  };\n  /**\n   * Gets an entry from a particular store\n   * @param store\n   * @param key\n   * @returns {Promise}\n   */\n\n\n  var getEntry = function getEntry(store, key) {\n    return new Promise(function (resolve, reject) {\n      var success = function success(entry) {\n        if (!entry || typeof entry.value === 'undefined') {\n          return resolve(entry);\n        }\n\n        resolve(entry.value);\n      };\n\n      store.get(key, success, reject);\n    });\n  };\n  /**\n   * Get entries from a store\n   * @param store\n   * @returns {Promise<Object>} entries\n   */\n\n\n  var getEntries = function getEntries(store) {\n    return new Promise(function (resolve, reject) {\n      var success = function success(entries) {\n        if (!_.isArray(entries)) {\n          return resolve({});\n        }\n\n        resolve(_.reduce(entries, function (acc, entry) {\n          if (entry.key && entry.value) {\n            acc[entry.key] = entry.value;\n          }\n\n          return acc;\n        }, {}));\n      };\n\n      store.getAll(success, reject);\n    });\n  };\n  /**\n   * Remove an entry from a particular store\n   * @param store\n   * @param key\n   * @param value\n   * @returns {Promise}\n   */\n\n\n  var removeEntry = function removeEntry(store, key) {\n    return new Promise(function (resolve, reject) {\n      var success = function success(result) {\n        resolve(result !== false);\n      };\n\n      store.remove(key, success, reject);\n    });\n  };\n  /**\n   * Gets access to the store that contains the index of known stores.\n   * @returns {Promise}\n   */\n\n\n  var getKnownStores = function getKnownStores() {\n    if (!knownStores) {\n      knownStores = openStore(knownStoresName);\n    }\n\n    return knownStores;\n  };\n  /**\n   * Adds a store into the index of known stores.\n   * @param {String} storeName\n   * @returns {Promise}\n   */\n\n\n  var registerStore = function registerStore(storeName) {\n    return getKnownStores().then(function (store) {\n      return setEntry(store, storeName, {\n        name: storeName,\n        lastOpen: Date.now()\n      });\n    });\n  };\n  /**\n   * Removes a store from the index of known stores.\n   * @param {String} storeName\n   * @returns {Promise}\n   */\n\n\n  var unregisterStore = function unregisterStore(storeName) {\n    return getKnownStores().then(function (store) {\n      return removeEntry(store, storeName);\n    });\n  };\n  /**\n   * Deletes a store, then removes it from the index of known stores.\n   * @param store\n   * @param storeName\n   * @returns {Promise}\n   */\n\n\n  var deleteStore = function deleteStore(store, storeName) {\n    return new Promise(function (resolve, reject) {\n      var success = function success() {\n        unregisterStore(storeName).then(function () {\n          resolve(true);\n        }).catch(reject);\n      }; //with old implementation, deleting a store is\n      //either unsupported or buggy\n\n\n      if (isIndexedDB2) {\n        store.deleteDatabase(success, reject);\n      } else {\n        store.clear(success, reject);\n      }\n    });\n  };\n  /**\n   * Open and access a store\n   * @param {String} storeName - the store name to open\n   * @returns {Object} the store backend\n   * @throws {TypeError} without a storeName\n   */\n\n\n  var indexDbBackend = function indexDbBackend(storeName) {\n    //keep a ref of the running store\n    var innerStore;\n    /**\n     * Get the store\n     * @returns {Promise} with store instance in resolve\n     */\n\n    var getStore = function getStore() {\n      if (!innerStore) {\n        innerStore = openStore(storeName).then(function (store) {\n          return registerStore(storeName).then(function () {\n            return Promise.resolve(store);\n          });\n        });\n      }\n\n      return innerStore;\n    }; //keep a ref to the promise actually writing\n\n\n    var writePromise;\n    /**\n     * Ensure write promises are executed in series\n     * @param {Function} getWritingPromise - the function that run the promise\n     * @returns {Promise} the original one\n     */\n\n    var ensureSerie = function ensureSerie(getWritingPromise) {\n      //first promise, keep the ref\n      if (!writePromise) {\n        writePromise = getWritingPromise();\n        return writePromise;\n      } //create a wrapping promise\n\n\n      return new Promise(function (resolve, reject) {\n        //run the current request\n        var runWrite = function runWrite() {\n          var p = getWritingPromise();\n          writePromise = p; //and keep the ref\n\n          p.then(resolve).catch(reject);\n        }; //wait the previous to resolve or fail and run the current one\n\n\n        writePromise.then(runWrite).catch(runWrite);\n      });\n    };\n\n    if (_.isEmpty(storeName) || !_.isString(storeName)) {\n      throw new TypeError('The store name is required');\n    }\n    /**\n     * The store\n     */\n\n\n    return {\n      /**\n       * Get an item with the given key\n       * @param {String} key\n       * @returns {Promise} with the result in resolve, undefined if nothing\n       */\n      getItem: function getItem(key) {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return getEntry(store, key);\n          });\n        });\n      },\n\n      /**\n       * Set an item with the given key\n       * @param {String} key - the item key\n       * @param {*} value - the item value\n       * @returns {Promise} with true in resolve if added/updated\n       */\n      setItem: function setItem(key, value) {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return setEntry(store, key, value);\n          });\n        });\n      },\n\n      /**\n       * Remove an item with the given key\n       * @param {String} key - the item key\n       * @returns {Promise} with true in resolve if removed\n       */\n      removeItem: function removeItem(key) {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return removeEntry(store, key);\n          });\n        });\n      },\n\n      /**\n       * Get all store items\n       * @returns {Promise<Object>} with a collection of items\n       */\n      getItems: function getItems() {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return getEntries(store);\n          });\n        });\n      },\n\n      /**\n       * Clear the current store\n       * @returns {Promise} with true in resolve once cleared\n       */\n      clear: function clear() {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return new Promise(function (resolve, reject) {\n              var success = function success() {\n                resolve(true);\n              };\n\n              store.clear(success, reject);\n            });\n          });\n        });\n      },\n\n      /**\n       * Delete the database related to the current store\n       * @returns {Promise} with true in resolve once cleared\n       */\n      removeStore: function removeStore() {\n        return ensureSerie(function getWritingPromise() {\n          return getStore().then(function (store) {\n            return deleteStore(store, storeName);\n          });\n        });\n      }\n    };\n  };\n  /**\n   * Removes all storage\n   * @param {Function} [validate] - An optional callback that validates the store to delete\n   * @param {Function} [backend] - An optional storage handler to use\n   * @returns {Promise} with true in resolve once cleaned\n   */\n\n\n  indexDbBackend.removeAll = function removeAll(validate) {\n    if (!_.isFunction(validate)) {\n      validate = null;\n    }\n\n    return getKnownStores().then(function (store) {\n      return new Promise(function (resolve, reject) {\n        function cleanUp(entries) {\n          var all = [];\n\n          _.forEach(entries, function (entry) {\n            var storeName = entry && entry.key;\n\n            if (storeName) {\n              all.push(openStore(storeName).then(function (storeToRemove) {\n                if (!validate || validate(storeName, entry.value)) {\n                  return deleteStore(storeToRemove, storeName);\n                }\n              }));\n            }\n          });\n\n          Promise.all(all).then(resolve).catch(reject);\n        }\n\n        store.getAll(cleanUp, reject);\n      });\n    });\n  };\n  /**\n   * Get all storage\n   * @param {Function} [validate] - An optional callback that validates the store to delete\n   * @param {Function} [backend] - An optional storage handler to use\n   * @returns {Promise} with true in resolve once cleaned\n   */\n\n\n  indexDbBackend.getAll = function getAll(validate) {\n    if (!_.isFunction(validate)) {\n      validate = function valid() {\n        return true;\n      };\n    }\n\n    return getKnownStores().then(function (store) {\n      return new Promise(function (resolve, reject) {\n        store.getAll(function (entries) {\n          var storeNames = _(entries).filter(function (entry) {\n            return entry && entry.key && validate(entry.key, entry.value);\n          }).map(function (entry) {\n            return entry.key;\n          }).value();\n\n          return resolve(storeNames);\n        }, reject);\n      });\n    });\n  };\n  /**\n   * Get the identifier of the storage\n   * @returns {Promise} that resolves with the store identifier\n   */\n\n\n  indexDbBackend.getStoreIdentifier = function getStoreIdentifier() {\n    return openStore(idStoreName).then(function (store) {\n      return getEntry(store, idStoreName).then(function (id) {\n        if (!_.isEmpty(id)) {\n          return id;\n        }\n\n        id = uuid();\n        return setEntry(store, idStoreName, id).then(function () {\n          return id;\n        });\n      });\n    });\n  };\n\n  return indexDbBackend;\n\n});\n\n","define('core/store/memory',['lodash', 'core/promise', 'lib/uuid'], function (_, Promise, uuid) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * where data dwelves\n     */\n\n    var memoryStore = {};\n    /**\n     * The storage identifier\n     */\n\n    var idStore;\n    /**\n     * Open and access a store\n     * @param {String} storeName - the store name to open\n     * @returns {Object} the store backend\n     * @throws {TypeError} without a storeName\n     */\n\n    var memoryStorageBackend = function memoryStorageBackend(storeName) {\n      if (_.isEmpty(storeName) || !_.isString(storeName)) {\n        throw new TypeError('The store name is required');\n      }\n\n      memoryStore[storeName] = memoryStore[storeName] || {};\n      /**\n       * The store\n       */\n\n      return {\n        /**\n         * Get an item with the given key\n         * @param {String} key\n         * @returns {Promise} with the result in resolve, undfined if nothing\n         */\n        getItem: function getItem(key) {\n          if (!_.isPlainObject(memoryStore[storeName])) {\n            return Promise.resolve();\n          }\n\n          return Promise.resolve(memoryStore[storeName][key]);\n        },\n\n        /**\n         * Set an item with the given key\n         * @param {String} key - the item key\n         * @param {*} value - the item value\n         * @returns {Promise} with true in resolve if added/updated\n         */\n        setItem: function setItem(key, value) {\n          if (!_.isPlainObject(memoryStore[storeName])) {\n            memoryStore[storeName] = {};\n          }\n\n          memoryStore[storeName][key] = value;\n          return Promise.resolve(true);\n        },\n\n        /**\n         * Remove an item with the given key\n         * @param {String} key - the item key\n         * @returns {Promise} with true in resolve if removed\n         */\n        removeItem: function removeItem(key) {\n          memoryStore[storeName] = _.omit(memoryStore[storeName], key);\n          return Promise.resolve(typeof memoryStore[storeName][key] === 'undefined');\n        },\n\n        /**\n         * Get all store items\n         * @returns {Promise<Object>} with a collection of items\n         */\n        getItems: function getItems() {\n          return Promise.resolve(memoryStore[storeName]);\n        },\n\n        /**\n         * Clear the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        clear: function clear() {\n          memoryStore[storeName] = {};\n          return Promise.resolve(true);\n        },\n\n        /**\n         * Delete the database related to the current store\n         * @returns {Promise} with true in resolve once cleared\n         */\n        removeStore: function removeStore() {\n          memoryStore = _.omit(memoryStore, storeName);\n          return Promise.resolve(typeof memoryStore[storeName] === 'undefined');\n        }\n      };\n    };\n    /**\n     * Removes all storage\n     * @param {Function} [validate] - An optional callback that validates the store to delete\n     * @returns {Promise} with true in resolve once cleaned\n     */\n\n\n    memoryStorageBackend.removeAll = function removeAll(validate) {\n      if (!_.isFunction(validate)) {\n        validate = null;\n      }\n\n      memoryStore = _.omit(memoryStore, function (store, storeName) {\n        return validate ? validate(storeName) : true;\n      });\n      return Promise.resolve(true);\n    };\n    /**\n     * Get all stores\n     * @param {Function} [validate] - An optional callback that validates the stores to retrieve\n     * @returns {Promise<String[]>} resolves with the list of stores\n     */\n\n\n    memoryStorageBackend.getAll = function getAll(validate) {\n      var storeNames = [];\n\n      if (!_.isFunction(validate)) {\n        validate = null;\n      }\n\n      storeNames = _(memoryStore).map(function (store, storeName) {\n        return storeName;\n      }).filter(function (storeName) {\n        return validate ? validate(storeName) : true;\n      }).value();\n      return Promise.resolve(storeNames);\n    };\n    /**\n     * Get the identifier of the storage\n     * @returns {Promise} that resolves with the store identifier\n     */\n\n\n    memoryStorageBackend.getStoreIdentifier = function getStoreIdentifier() {\n      //we use the storeName also as the id\n      if (_.isEmpty(idStore)) {\n        idStore = uuid();\n      }\n\n      return Promise.resolve(idStore);\n    };\n\n    return memoryStorageBackend;\n\n});\n\n","define('core/store',['lodash', 'moment', 'module', 'core/logger', 'core/promise', 'core/store/localstorage', 'core/store/indexeddb', 'core/store/memory'], function (_, moment, module, loggerFactory, Promise, localStorageBackend, indexedDBBackend, memoryBackend) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    localStorageBackend = localStorageBackend && localStorageBackend.hasOwnProperty('default') ? localStorageBackend['default'] : localStorageBackend;\n    indexedDBBackend = indexedDBBackend && indexedDBBackend.hasOwnProperty('default') ? indexedDBBackend['default'] : indexedDBBackend;\n    memoryBackend = memoryBackend && memoryBackend.hasOwnProperty('default') ? memoryBackend['default'] : memoryBackend;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var supportsIndexedDB = false;\n    var dectectionDone = false;\n    var quotaChecked = false;\n    /**\n     * The exported store module, can be used as a function to get one store\n     * or as an object to run methods on multiple stores.\n     *\n     * @type {Function|Object}\n     */\n\n    var store;\n    /**\n     * The list of required methods exposed by a store backend\n     * @type {String[]}\n     */\n\n    var backendApi = ['removeAll', 'getAll', 'getStoreIdentifier'];\n    /**\n     * The list of required methods exposed by a store implementation\n     * @type {String[]}\n     */\n\n    var storeApi = ['getItem', 'setItem', 'removeItem', 'getItems', 'clear', 'removeStore'];\n    /**\n     * Dedicated logger\n     */\n\n    var logger = loggerFactory('core/store');\n    /**\n     * Main config\n     */\n\n    var config = _.defaults(module.config() || {}, {\n      /**\n       * Percent of used space (ie. 80% used)\n       * to consider the browser as having low space\n       * @type {Number}\n       */\n      lowSpaceRatio: 80,\n\n      /**\n       * Default duration thresholds to invalidate stores\n       *\n       * @type {Object<String>} ISO 8601  duration\n       */\n      invalidation: {\n        //candidate for invalidation if we're going over quota\n        staled: 'P2W',\n        //candidate for upfront invalidation if estimates are low\n        oldster: 'P2M'\n      }\n    });\n    /**\n     * Detect IndexedDB support.\n     * Due to a bug in Firefox private mode, we need to try to open a database to be sure it's available.\n     * @returns {Promise} that resolve the result\n     */\n\n\n    var isIndexDBSupported = function isIndexDBSupported() {\n      if (dectectionDone) {\n        return Promise.resolve(supportsIndexedDB);\n      }\n\n      return new Promise(function (resolve) {\n        var test, indexedDB;\n\n        var done = function done(result) {\n          supportsIndexedDB = !!result;\n          dectectionDone = true;\n          return resolve(supportsIndexedDB);\n        };\n\n        try {\n          indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.OIndexedDB || window.msIndexedDB;\n\n          if (!indexedDB) {\n            return done(false);\n          } //we need to try to open a db, for example FF in private browsing will fail.\n\n\n          test = indexedDB.open('__feature_test', 1);\n\n          test.onsuccess = function () {\n            if (test.result) {\n              test.result.close();\n              return done(true);\n            }\n          }; //if we can't open a DB, we assume, we fallback\n\n\n          test.onerror = function (e) {\n            e.preventDefault();\n            done(false);\n            return false;\n          };\n        } catch (err) {\n          //a sync err, we fallback\n          done(false);\n        }\n      });\n    };\n    /**\n     * Check storage estimates and invalidate old\n     * Estimates aren't widely supported,\n     * but that worth to try it (progressive enhancement)\n     */\n\n\n    var checkQuotas = function checkQuotas() {\n      if (!quotaChecked && 'storage' in window.navigator && window.navigator.storage.estimate) {\n        window.navigator.storage.estimate().then(function (estimate) {\n          var usedRatio = 0;\n\n          if (_.isNumber(estimate.usage) && _.isNumber(estimate.quota) && estimate.quota > 0) {\n            usedRatio = estimate.usage / estimate.quota;\n\n            if (usedRatio > config.lowSpaceRatio) {\n              logger.warn('The browser storage is getting low ' + usedRatio.toFixed(2) + '% used', estimate);\n              logger.warn('We will attempt to clean oldster databases in persistent backends');\n              store.cleanUpSpace(config.invalidation.oldster, [], localStorageBackend);\n\n              if (isIndexDBSupported) {\n                store.cleanUpSpace(config.invalidation.oldster, [], indexedDBBackend);\n              }\n            } else {\n              logger.debug('Browser storage estimate : ' + usedRatio.toFixed(2) + '% used', estimate);\n            }\n          }\n        }).catch(function (err) {\n          logger.warn('Unable to retrieve quotas : ' + err.message);\n        });\n      }\n\n      quotaChecked = true;\n    };\n    /**\n     * Check the backend object complies with the API\n     * @param {Object} backend - the backend object to check\n     * @returns {Boolean} true if valid\n     */\n\n\n    var isBackendApiValid = function isBackendApiValid(backend) {\n      return _.all(backendApi, function methodExists(method) {\n        return _.isFunction(backend[method]);\n      });\n    };\n    /**\n     * Check the storage object complies with the Storage API\n     * @param {Storage} storage - the storage object to check\n     * @returns {Boolean} true if valid\n     */\n\n\n    var isStorageApiValid = function isStorageApiValid(storage) {\n      return _.all(storeApi, function methodExists(method) {\n        return _.isFunction(storage[method]);\n      });\n    };\n    /**\n     * Load the backend based either on the pre-selected and the current support\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the backend\n     */\n\n\n    var loadBackend = function loadBackend(preselectedBackend) {\n      return isIndexDBSupported().then(function () {\n        var backend = preselectedBackend || (supportsIndexedDB ? indexedDBBackend : localStorageBackend);\n\n        if (!_.isFunction(backend)) {\n          return Promise.reject(new TypeError('No backend, no storage!'));\n        }\n\n        if (!isBackendApiValid(backend)) {\n          return Promise.reject(new TypeError(\"This backend doesn't comply with the store backend API\"));\n        } //attempt to check the quotas\n\n\n        if (backend !== memoryBackend) {\n          checkQuotas();\n        }\n\n        return backend;\n      });\n    };\n    /**\n     * Loads a store\n     *\n     * @param {String} storeName - the name of the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the Storage a Storage Like instance\n     */\n\n\n    store = function storeLoader(storeName, preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        var storeInstance = backend(storeName);\n\n        if (!isStorageApiValid(storeInstance)) {\n          return Promise.reject(new TypeError(\"The store doesn't comply with the Storage interface\"));\n        }\n\n        return storeInstance;\n      });\n    };\n    /**\n     * The available backends,\n     * exposed.\n     */\n\n\n    store.backends = {\n      localStorage: localStorageBackend,\n      indexedDB: indexedDBBackend,\n      memory: memoryBackend\n    };\n    /**\n     * Removes all storage\n     * @param {validateStore} [validate] - An optional callback that validates the store to delete\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} with true in resolve once cleaned\n     */\n\n    store.removeAll = function removeAll(validate, preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        /**\n         * @callback validateStore\n         * @param {String} storeName - the name of the store\n         * @param {Object} store - the store details\n         */\n        return backend.removeAll(validate);\n      });\n    };\n    /**\n     * Clean up storage meeting the invalidation conditions\n     * @param {Number|String} [since] - unix timestamp in ms or ISO duration, to compare with lastOpen\n     * @param {RegExp} [storeNamePattern] - applies only on store names that matches the pattern\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<Boolean>}\n     */\n\n\n    store.cleanUpSpace = function cleanUpSpace(since, storeNamePattern, preselectedBackend) {\n      var tsThreshold;\n      /**\n       * Create the invalidation callback\n       * @type {validateStore}\n       */\n\n      var invalidate = function invalidate(storeName, storeEntry) {\n        if (!storeName || !storeEntry) {\n          return false;\n        } //storeName matches ?\n\n\n        if (storeNamePattern instanceof RegExp && !storeNamePattern.test(storeName)) {\n          return false;\n        }\n\n        return _.isNumber(storeEntry.lastOpen) && _.isNumber(tsThreshold) && storeEntry.lastOpen <= tsThreshold;\n      };\n\n      if (_.isNumber(since) && since > 0) {\n        tsThreshold = since;\n      } else {\n        if (!_.isString(since)) {\n          since = config.invalidation.oldster;\n        }\n\n        tsThreshold = moment().subtract(moment.duration(since)).valueOf();\n      }\n\n      logger.info('Trying to remove stores lastly opened before ' + tsThreshold + '(' + since + ')');\n      return store.removeAll(invalidate, preselectedBackend);\n    };\n    /**\n     * Get the name/key of all storages\n     * @param {validateStore} [validate] - An optional callback that validates the store\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise<String[]>} resolves with the names of the stores\n     */\n\n\n    store.getAll = function getAll(validate, preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        return backend.getAll(validate);\n      });\n    };\n    /**\n     * Get the identifier of either the current (or the pre-selected store)\n     * @param {Object} [preselectedBackend] - the backend to force the selection\n     * @returns {Promise} that resolves with the identifier\n     */\n\n\n    store.getIdentifier = function getIdentifier(preselectedBackend) {\n      return loadBackend(preselectedBackend).then(function (backend) {\n        return backend.getStoreIdentifier();\n      });\n    };\n\n    var store$1 = store;\n\n    return store$1;\n\n});\n\n","define('core/tokenStore',['lodash', 'core/promise', 'core/store'], function (_, Promise, store) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    store = store && store.hasOwnProperty('default') ? store['default'] : store;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 Open Assessment Technologies SA\n     */\n    /**\n     * The default number of tokens to store\n     */\n\n    var defaultConfig = {\n      maxSize: 6,\n      tokenTimeLimit: 1000 * 60 * 24\n    };\n    /**\n     * Create a token store\n     * @param {Object} [options]\n     * @param {Number} [options.maxSize = 6] - the store limit\n     * @param {Number} [options.tokenTimeLimit] - time in milliseconds each token remains valid for\n     * @returns {tokenStore}\n     */\n\n    function tokenStoreFactory(options) {\n      var config = _.defaults(options || {}, defaultConfig); // In memory storage\n      // For security reasons, this is preferred over the indexeddb or localStorage implementations\n\n\n      var getStore = function getStore() {\n        return store('tokenStore.tokens', store.backends.memory);\n      };\n      /**\n       * @typedef tokenStore\n       */\n\n\n      return {\n        /**\n         * Get the oldest token from the queue\n         * Remove its store entry as well\n         *\n         * @returns {Promise<Object>} the token object\n         */\n        dequeue: function dequeue() {\n          var self = this;\n          return self.getIndex().then(function (latestIndex) {\n            var key = _.first(latestIndex);\n\n            if (!key) return Promise.resolve();\n            return getStore().then(function (storage) {\n              return storage.getItem(key);\n            }).then(function (token) {\n              return self.remove(key).then(function () {\n                return token;\n              });\n            });\n          });\n        },\n\n        /**\n         * Add a new token object to the queue\n         * Add an entry to the store as well\n         *\n         * @param {Object} token - the token object\n         * @param {String} token.value - long alphanumeric string\n         * @param {Number} token.receivedAt - timestamp\n         * @returns {Promise<Boolean>} - true if added\n         */\n        enqueue: function enqueue(token) {\n          var self = this; // Handle legacy param type:\n\n          if (_.isString(token)) {\n            token = {\n              value: token,\n              receivedAt: Date.now()\n            };\n          }\n\n          return getStore().then(function (storage) {\n            return storage.setItem(token.value, token);\n          }).then(function (updated) {\n            if (updated) {\n              return self.enforceMaxSize().then(function () {\n                return true;\n              });\n            }\n\n            return false;\n          });\n        },\n\n        /**\n         * Generate a new (chronologically-sorted) index from the store contents\n         * (because it would not be unique if stored in the module)\n         *\n         * @returns {Promise<Array>}\n         */\n        getIndex: function getIndex() {\n          return this.getTokens().then(function (tokens) {\n            return _.chain(tokens).values().sort(function (t1, t2) {\n              return t1.receivedAt - t2.receivedAt;\n            }).map('value').value();\n          });\n        },\n\n        /**\n         * Check whether the given token is in the store\n         *\n         * @param {String} key - token string\n         * @returns {Boolean}\n         */\n        has: function has(key) {\n          return this.getIndex().then(function (latestIndex) {\n            return _.contains(latestIndex, key);\n          });\n        },\n\n        /**\n         * Remove the token from the queue and the store\n         *\n         * @param {String} key - token string\n         * @returns {Promise<Boolean>} resolves once removed\n         */\n        remove: function remove(key) {\n          return this.has(key).then(function (result) {\n            if (result) {\n              return getStore().then(function (storage) {\n                return storage.removeItem(key);\n              });\n            }\n\n            return false;\n          });\n        },\n\n        /**\n         * Empty the queue and store\n         * @returns {Promise}\n         */\n        clear: function clear() {\n          return getStore().then(function (storage) {\n            return storage.clear();\n          });\n        },\n\n        /**\n         * Gets all tokens in the store\n         * @returns {Promise<Array>} - token objects\n         */\n        getTokens: function getTokens() {\n          return getStore().then(function (storage) {\n            return storage.getItems();\n          });\n        },\n\n        /**\n         * Gets the current size of the store\n         * @returns {Promise<Integer>}\n         */\n        getSize: function getSize() {\n          return this.getIndex().then(function (latestIndex) {\n            return latestIndex.length;\n          });\n        },\n\n        /**\n         * Setter for maximum pool size\n         * @param {Integer} size\n         */\n        setMaxSize: function setMaxSize(size) {\n          var self = this;\n\n          if (_.isNumber(size) && size > 0 && size !== config.maxSize) {\n            config.maxSize = size;\n            self.enforceMaxSize();\n          }\n        },\n\n        /**\n         * Removes oldest tokens, if the pool is above its size limit\n         * (Could happen if maxSize is reduced during the life of the tokenStore)\n         * @returns {Promise} - resolves when done\n         */\n        enforceMaxSize: function enforceMaxSize() {\n          var self = this;\n          return this.getIndex().then(function (latestIndex) {\n            var keysToRemove;\n            var excess = latestIndex.length - config.maxSize;\n\n            if (excess > 0) {\n              keysToRemove = latestIndex.slice(0, excess);\n              return Promise.all(_.map(keysToRemove, function (key) {\n                return self.remove(key);\n              }));\n            }\n\n            return true;\n          });\n        },\n\n        /**\n         * Checks one token and removes it from the store if expired\n         * @param {Object} token - the token object\n         * @returns {Promise<Boolean>}\n         */\n        checkExpiry: function checkExpiry(token) {\n          if (Date.now() - token.receivedAt > config.tokenTimeLimit) {\n            return this.remove(token.value);\n          }\n\n          return true;\n        },\n\n        /**\n         * Checks all the tokens in the store to see if they expired\n         * @returns {Promise<Boolean>} - resolves to true\n         */\n        expireOldTokens: function expireOldTokens() {\n          var self = this;\n          return self.getTokens().then(function (tokens) {\n            // Check each token's expiry, synchronously:\n            return _.reduce(tokens, function (previousPromise, nextToken) {\n              return previousPromise.then(function () {\n                return self.checkExpiry(nextToken);\n              });\n            }, Promise.resolve()).then(function () {\n              // All done\n              return true;\n            });\n          });\n        }\n      };\n    }\n\n    return tokenStoreFactory;\n\n});\n\n","define('core/tokenHandler',['lodash', 'module', 'core/tokenStore', 'core/promise', 'core/promiseQueue'], function (_, module, tokenStoreFactory, Promise, promiseQueue) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    tokenStoreFactory = tokenStoreFactory && tokenStoreFactory.hasOwnProperty('default') ? tokenStoreFactory['default'] : tokenStoreFactory;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    promiseQueue = promiseQueue && promiseQueue.hasOwnProperty('default') ? promiseQueue['default'] : promiseQueue;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var clientConfigFetched = false;\n    var defaults = {\n      maxSize: 6,\n      tokenTimeLimit: 1000 * 60 * 24\n    };\n    /**\n     * Stores the security token queue\n     * @param {Object} [options]\n     * @param {String} [options.maxSize]\n     * @param {String} [options.tokenTimeLimit]\n     * @param {String} [options.initialToken]\n     * @returns {tokenHandler}\n     */\n\n    function tokenHandlerFactory(options) {\n      var tokenStore; // Convert legacy parameter:\n\n      if (_.isString(options)) {\n        options = {\n          initialToken: options\n        };\n      }\n\n      options = _.defaults({}, options, defaults); // Initialise storage for tokens:\n\n      tokenStore = tokenStoreFactory(options);\n      return {\n        /**\n         * Gets the next security token from the token queue\n         * If none are available, it can check the ClientConfig (once only per page)\n         * Once the token is got, it is erased from the store (because they are single-use by design)\n         *\n         * @returns {Promise<String>} the token value\n         */\n        getToken: function getToken() {\n          var self = this;\n          var initialToken = options.initialToken;\n\n          var getFirstTokenValue = function getFirstTokenValue() {\n            return tokenStore.dequeue().then(function (currentToken) {\n              if (currentToken) {\n                return currentToken.value;\n              }\n\n              return null;\n            });\n          }; // If set, initialToken will be provided directly, without using store:\n\n\n          if (initialToken) {\n            options.initialToken = null;\n            return Promise.resolve(initialToken);\n          } // Some async checks before we go for the token:\n\n\n          return tokenStore.expireOldTokens().then(function () {\n            return tokenStore.getSize();\n          }).then(function (queueSize) {\n            if (queueSize > 0) {\n              // Token available, use it\n              return getFirstTokenValue();\n            } else if (!clientConfigFetched) {\n              // Client Config allowed! (first and only time)\n              return self.getClientConfigTokens().then(getFirstTokenValue);\n            } else {\n              // No more token options, refresh needed\n              return Promise.reject(new Error('No tokens available. Please refresh the page.'));\n            }\n          });\n        },\n\n        /**\n         * Adds a new security token to the token queue\n         * Internally, old tokens are deleted to keep queue within maximum pool size\n         * @param {String} newToken\n         * @returns {Promise<Boolean>} - resolves true if successful\n         */\n        setToken: function setToken(newToken) {\n          return tokenStore.enqueue(newToken);\n        },\n\n        /**\n         * Extracts tokens from the Client Config which should be received on every page load\n         * @returns {Promise<Boolean>} - resolves true when completed\n         */\n        getClientConfigTokens: function getClientConfigTokens() {\n          var self = this;\n\n          var clientTokens = _.map(module.config().tokens, function (serverToken) {\n            return {\n              value: serverToken,\n              receivedAt: Date.now()\n            };\n          }); // Record that this function ran:\n\n\n          clientConfigFetched = true;\n          return Promise.resolve(clientTokens).then(function (newTokens) {\n            // Add the fetched tokens to the store\n            // Uses a promiseQueue to ensure synchronous adding\n            var setTokenQueue = promiseQueue();\n\n            _.forEach(newTokens, function (token) {\n              setTokenQueue.serie(function () {\n                return self.setToken(token);\n              });\n            });\n\n            return setTokenQueue.serie(function () {\n              return true;\n            });\n          });\n        },\n\n        /**\n         * Clears the token store\n         * @returns {Promise<Boolean>} - resolves to true when cleared\n         */\n        clearStore: function clearStore() {\n          return tokenStore.clear();\n        },\n\n        /**\n         * Getter for the current queue length\n         * @returns {Promise<Integer>}\n         */\n        getQueueLength: function getQueueLength() {\n          return tokenStore.getSize();\n        },\n\n        /**\n         * Setter for maximum pool size\n         * @param {Integer} size\n         */\n        setMaxSize: function setMaxSize(size) {\n          tokenStore.setMaxSize(size);\n        }\n      };\n    }\n\n    return tokenHandlerFactory;\n\n});\n\n","define('core/connectivity',['core/eventifier'], function (eventifier) { 'use strict';\n\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * @type {Boolean} the current status, true means online\n     */\n\n    var status = navigator.onLine;\n    /**\n     * The connectivity module\n     * @typedef {connectivity}\n     */\n\n    var connectivity = eventifier({\n      /**\n       * Set manually as online\n       * @returns {connectivity} chains\n       * @fires {connectivity#online}\n       * @fires {connectivity#change}\n       */\n      setOnline: function setOnline() {\n        if (this.isOffline()) {\n          status = true;\n          this.trigger('online').trigger('change', status);\n        }\n\n        return this;\n      },\n\n      /**\n       * Set manually as offline\n       * @returns {connectivity} chains\n       * @fires {connectivity#offline}\n       * @fires {connectivity#change}\n       */\n      setOffline: function setOffline() {\n        if (this.isOnline()) {\n          status = false;\n          this.trigger('offline').trigger('change', status);\n        }\n\n        return this;\n      },\n\n      /**\n       * Are we online ?\n       * @returns {Boolean}\n       */\n      isOnline: function isOnline() {\n        return status;\n      },\n\n      /**\n       * Are we offline\n       * @returns {Boolean}\n       */\n      isOffline: function isOffline() {\n        return !status;\n      }\n    }); //DOM Events : online/offline\n\n    window.addEventListener('online', function () {\n      connectivity.setOnline();\n    });\n    window.addEventListener('offline', function () {\n      connectivity.setOffline();\n    });\n\n    return connectivity;\n\n});\n\n","\ndefine('css!taoQtiTestCss/new-test-runner',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner controller entry\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/runner/runner',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'context',\n    'module',\n    'core/router',\n    'core/logger',\n    'layout/loading-bar',\n    'ui/feedback',\n    'util/url',\n    'taoTests/runner/providerLoader',\n    'taoTests/runner/runner',\n    'css!taoQtiTestCss/new-test-runner'\n], function (\n    $,\n    _,\n    __,\n    context,\n    module,\n    router,\n    loggerFactory,\n    loadingBar,\n    feedback,\n    urlUtil,\n    providerLoader,\n    runner\n) {\n    'use strict';\n\n    /**\n     * List of options required by the controller\n     * @type {String[]}\n     */\n    const requiredOptions = [\n        'testDefinition',\n        'testCompilation',\n        'serviceCallId',\n        'bootstrap',\n        'options',\n        'providers'\n    ];\n\n    /**\n     * The runner controller\n     */\n    return {\n\n        /**\n         * Controller entry point\n         *\n         * @param {Object} config - the testRunner config\n         * @param {String} config.testDefinition - the test definition id\n         * @param {String} config.testCompilation - the test compilation id\n         * @param {String} config.serviceCallId - the service call id\n         * @param {Object} config.bootstrap - contains the extension and the controller to call\n         * @param {Object} config.options - the full URL where to return at the final end of the test\n         * @param {Object[]} config.providers - the collection of providers to load\n         */\n        start(config) {\n            let exitReason;\n            const $container = $('.runner');\n\n            const logger = loggerFactory('controller/runner', {\n                serviceCallId : config.serviceCallId,\n                plugins : config && config.providers && Object.keys(config.providers.plugins)\n            });\n\n            let preventFeedback = false;\n            let errorFeedback = null;\n\n            /**\n             * Exit the test runner using the configured exitUrl\n             * @param {String} [reason] - to add a warning once left\n             * @param {String} [level] - error level\n             */\n            const exit = function exit(reason, level){\n                let url = config.options.exitUrl;\n                const params = {};\n                if (reason) {\n                    if (!level) {\n                        level = 'warning';\n                    }\n                    params[level] = reason;\n                    url = urlUtil.build(url, params);\n                }\n                window.location = url;\n            };\n\n            /**\n             * Handles errors\n             * @param {Error} err - the thrown error\n             * @param {String} [displayMessage] - an alternate message to display\n             */\n            const onError = function onError(err, displayMessage) {\n                onFeedback(err, displayMessage, \"error\");\n            };\n\n            /**\n             * Handles warnings\n             * @param {Error} err - the thrown error\n             * @param {String} [displayMessage] - an alternate message to display\n             */\n            const onWarning = function onWarning(err, displayMessage) {\n                onFeedback(err, displayMessage, \"warning\");\n            };\n\n            /**\n             * Handles errors & warnings\n             * @param {Error} err - the thrown error\n             * @param {String} [displayMessage] - an alternate message to display\n             * @param {String} [type] - \"error\" or \"warning\"\n             */\n            const onFeedback = function onFeedback(err, displayMessage, type) {\n                const typeMap = {\n                    warning: {\n                        logger: \"warn\",\n                        feedback: \"warning\"\n                    },\n                    error: {\n                        logger: \"error\",\n                        feedback: \"error\"\n                    }\n                };\n                const loggerByType = logger[typeMap[type].logger];\n                const feedbackByType = feedback()[typeMap[type].feedback];\n\n                displayMessage = displayMessage || err.message;\n\n                if(!_.isString(displayMessage)){\n                    displayMessage = JSON.stringify(displayMessage);\n                }\n                loadingBar.stop();\n\n                loggerByType({ displayMessage : displayMessage }, err);\n\n                if(type === \"error\" && (err.code === 403 || err.code === 500)) {\n                    displayMessage = `${__('An error occurred during the test, please content your administrator.')} ${displayMessage}`;\n                    return exit(displayMessage, 'error');\n                }\n                if (!preventFeedback) {\n                    errorFeedback = feedbackByType(displayMessage, {timeout: -1});\n                }\n            };\n\n            const moduleConfig = module.config();\n\n            loadingBar.start();\n\n            // verify required config\n            if ( ! requiredOptions.every( option => typeof config[option] !== 'undefined') ) {\n                return onError(new TypeError(__('Missing required configuration option %s', name)));\n            }\n\n            // dispatch any extra registered routes\n            if (moduleConfig && _.isArray(moduleConfig.extraRoutes) && moduleConfig.extraRoutes.length) {\n                router.dispatch(moduleConfig.extraRoutes);\n            }\n\n            //for the qti provider to be selected here\n            config.provider = Object.assign( config.provider || {}, { runner: 'qti' });\n\n            //load the plugins and the proxy provider\n            providerLoader(config.providers, context.bundle)\n                .then(function (results) {\n\n                    const testRunnerConfig = _.omit(config, ['providers']);\n                    testRunnerConfig.renderTo = $container;\n\n                    if (results.proxy && typeof results.proxy.getAvailableProviders === 'function') {\n                        const loadedProxies = results.proxy.getAvailableProviders();\n                        testRunnerConfig.provider.proxy = loadedProxies[0];\n                    }\n\n                    logger.debug({\n                        config: testRunnerConfig,\n                        providers : config.providers\n                    }, 'Start test runner');\n\n                    //instantiate the QtiTestRunner\n                    runner(config.provider.runner, results.plugins, testRunnerConfig)\n                        .on('error', onError)\n                        .on('warning', onWarning)\n                        .on('ready', function () {\n                            _.defer(function () {\n                                $container.removeClass('hidden');\n                            });\n                        })\n                        .on('pause', function(data) {\n                            if (data && data.reason) {\n                                exitReason = data.reason;\n                            }\n                        })\n                        .after('destroy', function () {\n                            this.removeAllListeners();\n\n                            // at the end, we are redirected to the exit URL\n                            exit(exitReason);\n                        })\n\n                        //FIXME this event should not be triggered on the test runner\n                        .on('disablefeedbackalerts', function() {\n                            if (errorFeedback) {\n                                errorFeedback.close();\n                            }\n                            preventFeedback = true;\n                        })\n\n                        //FIXME this event should not be triggered on the test runner\n                        .on('enablefeedbackalerts', function() {\n                            preventFeedback = false;\n                        })\n                        .init();\n                })\n                .catch(function(err){\n                    onError(err, __('An error occurred during the test initialization!'));\n                });\n        }\n    };\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('/*\\nUsage:\\n- linear-gradient((color1, color2, color3)) - returns linear-gradient with evenly distributed colors,\\n   if 3 colors used then the position of each will be 33,33%\\n- linear-gradient((color1 0%, color2 30%, color3 80%)) - returns linear-gradient with manually distributed colors,\\n   first param - color, second - position. Also you can use px or other valid units for set position.\\n*/\\n/* Do not edit */\\n/* Style of advanced components */\\n/* toggler */\\n.toggler:after {\\n    margin-left: 3px;\\n    position: relative;\\n    top: 2px;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e611\\\";\\n}\\n\\n.toggler.opened:after {\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e610\\\";\\n}\\n\\n.toggled {\\n    display: none;\\n}\\n\\n/* Adder */\\n.adder:before {\\n    margin-right: 5px;\\n    font-size: 10.5px;\\n    font-size: 1.05rem;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e636\\\";\\n}\\n\\n/* Closer / Deleter */\\n.closer:before, .deleter:before {\\n    margin-right: 5px;\\n    font-size: 10.5px;\\n    font-size: 1.05rem;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e637\\\";\\n}\\n\\n.undobox {\\n    display: block;\\n    position: fixed;\\n    top: 50px;\\n    left: 50%;\\n    margin-left: -200px;\\n    width: 400px;\\n    z-index: 100005;\\n}\\n\\n/* Incrementer and duration */\\ninput[data-increment], input.duration-ctrl {\\n    width: 40px !important;\\n    min-width: 40px !important;\\n    text-align: right;\\n}\\n\\n.duration-ctrl-wrapper, .incrementer-ctrl-wrapper {\\n    position: relative;\\n    display: inline-block;\\n    border: 1px solid #ddd;\\n    border-radius: 2px;\\n    border-radius: 2px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer, .incrementer-ctrl-wrapper .incrementer {\\n    text-align: right;\\n    border: none;\\n    padding-right: 18px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl {\\n    border-left: 1px #ddd solid;\\n    display: inline-block;\\n    height: 100%;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a {\\n    outline: 0 !important;\\n    cursor: pointer;\\n    display: inline-block;\\n    line-height: 13px;\\n    color: #222;\\n    background: #f3f1ef;\\n    padding: 0 4px 0 4px;\\n    font-size: 10.5px;\\n    font-size: 1.05rem;\\n    position: absolute;\\n    right: 0;\\n    height: 50%;\\n    text-align: center;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc {\\n    top: 0;\\n    border-top-right-radius: 2px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec {\\n    top: 50%;\\n    border-bottom-right-radius: 2px;\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc:before, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.inc:before {\\n    position: relative;\\n    bottom: 0px;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e610\\\";\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec:before, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a.dec:before {\\n    position: relative;\\n    top: 0px;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e611\\\";\\n}\\n\\n.duration-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a:hover, .incrementer-ctrl-wrapper .incrementer ~ .incrementer-ctrl > a:hover {\\n    background-color: #3e7da7;\\n    color: white;\\n}\\n\\n.duration-ctrl-wrapper ~ .separator {\\n    padding: 0 3px;\\n    text-align: center;\\n    opacity: .7;\\n}\\n\\n/* InPlacer */\\n[data-in-place], .inplace {\\n    cursor: pointer;\\n    min-height: 1em;\\n}\\n\\n[data-in-place] input, .inplace input {\\n    cursor: auto;\\n}\\n\\n[data-in-place]:hover, .inplace:hover {\\n    border: dotted 1px #3e7da7;\\n}\\n\\n/* ListBox  */\\nul.listbox {\\n    margin: .1em 0;\\n    padding: 0;\\n    list-style-type: none;\\n    display: block;\\n}\\n\\nul.listbox > li {\\n    white-space: no-wrap;\\n    position: relative;\\n    min-width: 75%;\\n    border: solid 1px #ddd;\\n    border-bottom-width: 0;\\n    vertical-align: top;\\n    margin: 0;\\n    padding: .3em 2em .3em .2em;\\n    background-color: #f3f1ef;\\n    min-height: 1.5em;\\n}\\n\\nul.listbox > li > .closer, ul.listbox > li > .deleter {\\n    position: absolute;\\n    right: 5px;\\n    top: 0;\\n}\\n\\nul.listbox > li:first-child {\\n    border-radius: 2px 2px 0 0;\\n}\\n\\nul.listbox > li:last-child {\\n    border-radius: 0 0 2px 2px;\\n    border-bottom-width: 1px;\\n}\\n\\nul.listbox > li.placeholder {\\n    background: none;\\n    margin: .5em;\\n    opacity: 0.6;\\n}\\n\\n/* Modal styles */\\n.modal {\\n    background-color: white;\\n    border: 1px solid #ddd;\\n    box-shadow: 3px 3px 5px #666666;\\n    height: auto;\\n    opacity: 0;\\n    top: -1000px;\\n    padding: 40px;\\n    position: fixed;\\n    z-index: 105002;\\n    margin: auto;\\n    left: 0;\\n    right: 0;\\n    overflow: hidden;\\n}\\n\\n.modal .modal-close {\\n    position: absolute;\\n    right: 12px;\\n    top: 10px;\\n    cursor: pointer;\\n    font-weight: bold;\\n    color: #222;\\n}\\n\\n.modal .modal-close:hover {\\n    opacity: 0.6;\\n}\\n\\n.modal .modal-close .icon-close {\\n    font-size: 20px;\\n    font-size: 2rem;\\n}\\n\\n.modal button.modal-close {\\n    color: #222 !important;\\n    background-color: transparent;\\n    padding: 0;\\n    height: 20px;\\n}\\n\\n.modal button.modal-close .icon-close {\\n    padding: 0;\\n}\\n\\n.modal .modal-body h4 {\\n    font-size: 16px;\\n    font-size: 1.6rem;\\n    margin-top: 0;\\n    margin-bottom: 8px;\\n}\\n\\n.modal .modal-body .content, .modal .modal-body .message {\\n    margin-bottom: 8px;\\n}\\n\\n.modal .modal-body .buttons {\\n    top: 16px;\\n    position: relative;\\n}\\n\\n.modal .modal-body .buttons button {\\n    border-radius: 2px;\\n    margin-left: 8px;\\n    height: 36px;\\n    text-shadow: none;\\n    text-transform: uppercase;\\n    color: #0e5d91 !important;\\n    background: none;\\n}\\n\\n.modal .modal-body .buttons button:focus, .modal .modal-body .buttons button:hover {\\n    background: #dbe7ef;\\n}\\n\\n.modal[class^=\\\"icon-\\\"]:before, .modal[class*=\\\" icon-\\\"]:before {\\n    font-size: 44px;\\n    font-size: 4.4rem;\\n    color: #0e5d91;\\n    position: absolute;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].icon-result-nok:before, .modal[class*=\\\" icon-\\\"].icon-result-nok:before {\\n    color: #ba122b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].icon-warning:before, .modal[class*=\\\" icon-\\\"].icon-warning:before {\\n    color: #c96043;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].icon-result-ok:before, .modal[class*=\\\" icon-\\\"].icon-result-ok:before {\\n    color: #0e914b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].error:before, .modal[class*=\\\" icon-\\\"].error:before {\\n    color: #ba122b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].danger:before, .modal[class*=\\\" icon-\\\"].danger:before {\\n    color: #c96043;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].warning:before, .modal[class*=\\\" icon-\\\"].warning:before {\\n    color: #d8ae5b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].info:before, .modal[class*=\\\" icon-\\\"].info:before {\\n    color: #0e5d91;\\n}\\n\\n.modal[class^=\\\"icon-\\\"].success:before, .modal[class*=\\\" icon-\\\"].success:before {\\n    color: #0e914b;\\n}\\n\\n.modal[class^=\\\"icon-\\\"] .modal-body, .modal[class*=\\\" icon-\\\"] .modal-body {\\n    font-family: \\\"Source Sans Pro\\\", sans-serif !important;\\n    line-height: 1.4;\\n    margin-left: 8.5rem;\\n}\\n\\n.modal-bg {\\n    background: none repeat scroll 0 0 black;\\n    opacity: 0.45;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=45)\\\";\\n    filter: alpha(opacity=45);\\n    display: none;\\n    position: fixed;\\n    height: 100%;\\n    width: 100%;\\n    left: 0;\\n    top: 0;\\n    z-index: 100001;\\n    overflow: hidden;\\n}\\n\\n/* Button groups */\\nul[data-button-group], ul.button-group {\\n    list-style-type: none;\\n    padding: 0;\\n    background-color: white;\\n    border: 1px solid #ddd;\\n    border-radius: 1px;\\n    margin: 0 2px 2px 0;\\n    display: inline-block;\\n    border-radius: 2px;\\n    font-size: 12px;\\n    font-size: 1.2rem;\\n}\\n\\nul[data-button-group] > li, ul.button-group > li {\\n    border: 0 none;\\n    color: #222;\\n    cursor: pointer;\\n    display: inline-block;\\n    float: left;\\n    min-width: 26px;\\n    padding: 4px 6px;\\n    text-align: center;\\n    text-decoration: none !important;\\n}\\n\\nul[data-button-group] > li.active, ul.button-group > li.active {\\n    color: white;\\n    background-color: #0e5d91;\\n    transition: all 0.4s ease;\\n}\\n\\nul[data-button-group] > li:hover, ul.button-group > li:hover {\\n    color: white;\\n    background-color: #3e7da7;\\n    transition: all 0.4s ease;\\n}\\n\\nul[data-button-group] > li.separator, ul.button-group > li.separator {\\n    background-color: #ddd;\\n    float: left;\\n    height: 18px;\\n    margin: 5px 2px 0 2px;\\n    width: 1px;\\n    min-width: 1px;\\n    padding: 0;\\n}\\n\\nul[data-button-group] > li[class^=\\\"icon-\\\"], ul[data-button-group] > li[class*=\\\" icon-\\\"], ul.button-group > li[class^=\\\"icon-\\\"], ul.button-group > li[class*=\\\" icon-\\\"] {\\n    height: 16px;\\n    margin-top: 1px;\\n    width: 16px;\\n    padding-top: 2px;\\n}\\n\\n/* Media Preview */\\n.previewer {\\n    background-color: white;\\n    margin: 5px;\\n    min-width: 280px;\\n    min-height: 200px;\\n    text-align: center;\\n}\\n\\n.previewer .nopreview {\\n    color: #ddd;\\n    text-align: center;\\n    font-size: 20px;\\n    font-size: 2rem;\\n}\\n\\n.previewer .nopreview:before {\\n    font-size: 60px;\\n    font-size: 6rem;\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: \\'tao\\' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    content: \\\"\\\\e670\\\";\\n    display: block !important;\\n}\\n\\n/* Progress bar */\\n.progressbar {\\n    height: 2em;\\n    text-align: left;\\n    border: none;\\n    height: 0.8em;\\n    background-color: white;\\n    border: 1px solid #ddd;\\n}\\n\\n.progressbar > span {\\n    height: 100%;\\n    border: none;\\n    background-color: #3e7da7;\\n    display: block;\\n    color: white;\\n    transition: width 0.4s ease 0s;\\n}\\n\\n.progressbar.info > span {\\n    background-color: #0e5d91;\\n}\\n\\n.progressbar.success > span {\\n    background-color: #0e914b;\\n}\\n\\n.progressbar.warning > span {\\n    background-color: #d8ae5b;\\n}\\n\\n.progressbar.error > span {\\n    background-color: #ba122b;\\n}\\n\\n/*# sourceMappingURL=components.css.map */@-o-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@-moz-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@-webkit-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}.loading-bar{height:6px;position:absolute;width:100%;top:0px;display:none;z-index:10000;cursor:progress}.loading-bar.fixed{position:fixed;width:100%}.loading-bar.fixed:before{top:0 !important}.loading-bar.loading{display:block;overflow:hidden;top:58px}.loading-bar.loading:before{position:absolute;content:\\'\\';height:6px;width:20%;display:block;transform:translateZ(0);background:-webkit-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:-moz-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:-ms-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:-o-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);-webkit-animation:loadingbar 5s linear infinite;-moz-animation:loadingbar 5s linear infinite;-ms-animation:loadingbar 5s linear infinite;-o-animation:loadingbar 5s linear infinite;animation:loadingbar 5s linear infinite}.loading-bar.loading.loadingbar-covered{top:0px;overflow-y:visible}.loading-bar.loading.loadingbar-covered:before{top:86px}.no-version-warning .loading-bar.loadingbar-covered:before{top:58px}.action-bar{background:#266d9c;padding:3px;overflow:hidden;color:#e7eff4}.action-bar li{float:left}.action-bar li .li-inner{padding-bottom:1px;text-decoration:none !important;outline:0;display:inline-block;color:inherit}.action-bar li .li-inner:hover{color:white}.action-bar li span.glyph{text-shadow:0 0 0 transparent;color:inherit}.action-bar li input{width:100%;font-size:12px;font-size:1.2rem;padding:2px 4px}.action-bar li.active .li-inner{color:white}.action-bar.horizontal-action-bar{padding:5px;height:35px}.action-bar.horizontal-action-bar .search-area{margin:2px 0 0 0;border:none;float:right;display:inline-block;position:relative;padding:0 30px 0 0}.action-bar.horizontal-action-bar .search-area input{padding-right:34px;min-width:250px !important}.action-bar.horizontal-action-bar .search-area button{position:absolute;right:32px;top:-2px;cursor:default;opacity:.5;background:transparent;width:25px;height:25px}.action-bar.horizontal-action-bar .search-area button:before{color:#666}.action-bar.horizontal-action-bar .search-area .icon-help{position:absolute;right:5px;top:-1px;text-shadow:0px 0px transparent;color:white;cursor:pointer;display:block;width:24px;height:24px;line-height:24px;text-align:center}.action-bar.horizontal-action-bar li{margin:0 1px;border:1px transparent solid;text-align:center;float:left}.action-bar.horizontal-action-bar li .glyph{width:14px}.action-bar.horizontal-action-bar li .svg-glyph{height:14px;width:14px;margin-right:9px}.action-bar.horizontal-action-bar li.btn-info{overflow:hidden;background:transparent}.action-bar.horizontal-action-bar li.btn-info:hover,.action-bar.horizontal-action-bar li.btn-info.active{border-color:rgba(255,255,255,0.3);opacity:1}.action-bar.horizontal-action-bar li.disabled{background:none !important;text-shadow:inherit !important;opacity:0.45 !important;color:inherit !important}.action-bar.horizontal-action-bar li.disabled a{cursor:not-allowed !important}.action-bar.vertical-action-bar li{max-height:60px}.action-bar.vertical-action-bar li .li-inner{height:60px;display:block;overflow:hidden;text-overflow:ellipsis;text-align:center;font-size:12px;font-size:1.2rem;line-height:12px}.action-bar.vertical-action-bar li .glyph{display:block;margin:12px auto 3px;width:20px;height:20px}.action-bar.tree-action-bar{background:#f3f1ef;position:relative;left:-1px;padding:0;margin:0 2.8571428571% 8px 2.8571428571%;width:94.6428571429%;font-size:13px;font-size:1.3rem}.action-bar.tree-action-bar li{background:rgba(255,255,255,0.5);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;line-height:1.3;padding:0;text-align:center;float:left;width:65px;height:65px;margin:0 1px 1px 0}.action-bar.tree-action-bar li .glyph,.action-bar.tree-action-bar li .svg-glyph{display:block;color:#0e5d91;margin:12px auto 1px !important}.action-bar.tree-action-bar li .svg-glyph{width:20px;height:20px}.action-bar.tree-action-bar li .glyph{font-size:17px !important;font-size:1.7rem !important}.action-bar.tree-action-bar li .li-inner{display:block;height:65px;padding:2px;font-size:11px;font-size:1.1rem;color:#222}.action-bar.tree-action-bar li:hover{background:#ddd;color:#666}.action-bar .tree-filters{width:160px;position:relative}.action-bar .tree-filters input{padding-right:24px}.action-bar .tree-filters span{position:absolute;right:3px;color:#555;width:22px;top:2px;line-height:20px;display:inline-block;text-align:center;text-shadow:0 0 0 transparent;border-left:1px solid #ddd;cursor:pointer}.action-bar .tree-filters span.icon-close{display:none}.action-bar .tree-filters span:hover{color:#0e5d91}@media (max-width: 1150px){.action-bar.horizontal-action-bar .search-area{float:none;position:absolute;right:0px}.action-bar.horizontal-action-bar .search-area input{padding-right:30px;min-width:auto !important;width:150px}.action-bar.horizontal-action-bar .search-area input:focus{width:220px}}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area{float:none;position:absolute;right:0px}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area input{padding-right:30px;min-width:auto !important;width:150px}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area input:focus{width:220px}.section-container{top:0 !important}.section-container .flex-container-full{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 100%;-webkit-flex:0 0 100%;flex:0 0 100%}.section-container .flex-container-half{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 50%;-webkit-flex:0 0 50%;flex:0 0 50%}.section-container .flex-container-third{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 33.3333333333%;-webkit-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%}.section-container .flex-container-quarter{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 25%;-webkit-flex:0 0 25%;flex:0 0 25%}.section-container .flex-container-remaining{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:1 1 480px;-webkit-flex:1 1 480px;flex:1 1 480px}.section-container .flex-container-main-form{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 500px;-webkit-flex:0 0 500px;flex:0 0 500px;margin:0 20px 20px 0}.section-container .flex-container-navi{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 280px;-webkit-flex:0 0 280px;flex:0 0 280px}.section-container .section-header{border:none}.section-container .content-panel{width:100%;height:100%;margin:0;padding:0;border:none !important;display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch}.section-container .tab-container{border:none;display:none;list-style-type:none;padding:0;margin:0}.section-container .tab-container li{float:left;position:relative;top:0;padding:0;margin:0 1px 0px 0;border-top:1px solid #f3f1ef !important;border-bottom:1px solid #f3f1ef !important;background:#f3f1ef !important}.section-container .tab-container li a{top:0 !important;margin-bottom:0 !important;padding:6px 16px;text-decoration:none;min-height:32px;color:#222;float:left}.section-container .tab-container li.active,.section-container .tab-container li:hover{border-bottom-color:#4a86ad !important;border-top-color:#6e9ebd !important;background:#266d9c !important}.section-container .tab-container li.active a,.section-container .tab-container li:hover a{background:transparent !important;border-color:transparent !important;color:#fff !important;text-shadow:1px 1px 0 rgba(0,0,0,0.2)}.section-container .tab-container li.disabled:hover{background:#f3f1ef !important}.section-container .tab-container li.disabled:hover a{cursor:not-allowed !important;color:#222 !important}.section-container .navi-container{display:none;background:#f3f1ef;-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 280px;-webkit-flex:0 0 280px;flex:0 0 280px;border-right:1px #ddd solid}.section-container .navi-container .block-title{font-size:14px;font-size:1.4rem;padding:2px 8px;margin:0}.section-container .navi-container .tree-action-bar-box{margin:10px 0;opacity:0}.section-container .navi-container .tree-action-bar-box.active{opacity:1;-webkit-opacity:0.25s ease-in-out;-moz-opacity:0.25s ease-in-out;opacity:0.25s ease-in-out}.section-container .content-container{border:none;-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:1 1 auto;-webkit-flex:1 1 auto;flex:1 1 auto;-ms-flex:1 1;-webkit-flex:1 1;flex:1 1}.section-container .content-block{padding:20px;overflow-y:auto;display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch}.section-container .content-block>.grid-container{width:100%}.section-container .content-block .data-container-wrapper{padding:0px 20px 0 0}.section-container .content-block .data-container-wrapper:before,.section-container .content-block .data-container-wrapper:after{content:\\\" \\\";display:table}.section-container .content-block .data-container-wrapper:after{clear:both}.section-container .content-block .data-container-wrapper>section,.section-container .content-block .data-container-wrapper .data-container{width:260px;margin:0 20px 20px 0;float:left;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.section-container .content-block .data-container-wrapper>section.double,.section-container .content-block .data-container-wrapper .data-container.double{width:540px}.section-container .content-block .data-container-wrapper>section .emptyContentFooter,.section-container .content-block .data-container-wrapper .data-container .emptyContentFooter{display:none}.section-container .content-block .data-container-wrapper>section .tree,.section-container .content-block .data-container-wrapper .data-container .tree{border:none;max-width:none;max-height:none}.section-container .content-block .data-container-wrapper>section form,.section-container .content-block .data-container-wrapper .data-container form{background:none;border:none;margin:0;padding:0}.section-container .content-block .data-container-wrapper>section>header,.section-container .content-block .data-container-wrapper>section .ui-widget-header,.section-container .content-block .data-container-wrapper .data-container>header,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header{background:#f3f1ef;border-width:0px !important;border-bottom:1px #ddd solid !important}.section-container .content-block .data-container-wrapper>section>header h1,.section-container .content-block .data-container-wrapper>section>header h6,.section-container .content-block .data-container-wrapper>section .ui-widget-header h1,.section-container .content-block .data-container-wrapper>section .ui-widget-header h6,.section-container .content-block .data-container-wrapper .data-container>header h1,.section-container .content-block .data-container-wrapper .data-container>header h6,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header h1,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header h6{padding:4px;margin:0;font-size:14px;font-size:1.4rem}.section-container .content-block .data-container-wrapper>section>div,.section-container .content-block .data-container-wrapper>section .ui-widget-content,.section-container .content-block .data-container-wrapper>section .container-content,.section-container .content-block .data-container-wrapper .data-container>div,.section-container .content-block .data-container-wrapper .data-container .ui-widget-content,.section-container .content-block .data-container-wrapper .data-container .container-content{border-width:0px !important;overflow-y:auto;min-height:250px;padding:5px}.section-container .content-block .data-container-wrapper>section>div .icon-grip,.section-container .content-block .data-container-wrapper>section .ui-widget-content .icon-grip,.section-container .content-block .data-container-wrapper>section .container-content .icon-grip,.section-container .content-block .data-container-wrapper .data-container>div .icon-grip,.section-container .content-block .data-container-wrapper .data-container .ui-widget-content .icon-grip,.section-container .content-block .data-container-wrapper .data-container .container-content .icon-grip{cursor:move}.section-container .content-block .data-container-wrapper>section>footer,.section-container .content-block .data-container-wrapper .data-container>footer{min-height:33px}.section-container .content-block .data-container-wrapper>section>footer,.section-container .content-block .data-container-wrapper>section .data-container-footer,.section-container .content-block .data-container-wrapper .data-container>footer,.section-container .content-block .data-container-wrapper .data-container .data-container-footer{background:#f3f1ef;text-align:right !important;padding:4px;border-width:0px !important;border-top:1px #ddd solid !important}.section-container .content-block .data-container-wrapper>section>footer .square,.section-container .content-block .data-container-wrapper>section .data-container-footer .square,.section-container .content-block .data-container-wrapper .data-container>footer .square,.section-container .content-block .data-container-wrapper .data-container .data-container-footer .square{width:28px}.section-container .content-block .data-container-wrapper>section>footer .square span,.section-container .content-block .data-container-wrapper>section .data-container-footer .square span,.section-container .content-block .data-container-wrapper .data-container>footer .square span,.section-container .content-block .data-container-wrapper .data-container .data-container-footer .square span{padding:0;left:0}.section-container .content-block .data-container-wrapper>section ol,.section-container .content-block .data-container-wrapper .data-container ol{margin:0 0 0 15px;padding:10px}.section-container .content-block #form-container.ui-widget-content{border:none !important}.section-container .content-block form:not(.list-container){border:1px #ddd solid;background:#f3f1ef;padding:30px;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.section-container .content-block [class^=\\\"btn-\\\"],.section-container .content-block [class*=\\\" btn-\\\"]{margin:0 2px}.qti-navigator{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;-o-flex-direction:column;flex-direction:column;padding:0;cursor:default;min-width:calc(18rem - 8px);height:100%;position:relative}.qti-navigator span{display:inline-block}.qti-navigator .collapsed .collapsible-panel{display:none !important}.qti-navigator .collapsed .qti-navigator-label .icon-up{display:none}.qti-navigator .collapsed .qti-navigator-label .icon-down{display:inline-block}.qti-navigator .collapsible>.qti-navigator-label,.qti-navigator .qti-navigator-item>.qti-navigator-label{cursor:pointer}.qti-navigator.scope-test-section .qti-navigator-part>.qti-navigator-label{display:none !important}.qti-navigator .qti-navigator-label{display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch;min-width:calc(100% - 12px);padding:0 6px;line-height:3rem}.qti-navigator .qti-navigator-label .icon-up,.qti-navigator .qti-navigator-label .icon-down{line-height:3rem;margin-left:auto}.qti-navigator .qti-navigator-label .icon-down{display:none}.qti-navigator .qti-navigator-label .qti-navigator-number{display:none}.qti-navigator .qti-navigator-icon,.qti-navigator .icon{position:relative;top:1px;display:inline-block;width:2rem;line-height:2.8rem}.qti-navigator .unseen .qti-navigator-icon{cursor:default}.qti-navigator.prevents-unseen:not(.skipahead-enabled) .unseen .qti-navigator-icon,.qti-navigator.prevents-unseen:not(.skipahead-enabled) .unseen .qti-navigator-label{cursor:not-allowed !important}.qti-navigator .icon-answered:before{content:\\\"\\\\e69a\\\"}.qti-navigator .icon-viewed:before{content:\\\"\\\\e631\\\"}.qti-navigator .icon-flagged:before{content:\\\"\\\\e64e\\\"}.qti-navigator .icon-unanswered:before,.qti-navigator .icon-unseen:before{content:\\\"\\\\e6a5\\\"}.qti-navigator .qti-navigator-counter{text-align:right;margin-left:auto;font-size:12px;font-size:1.2rem}.qti-navigator .qti-navigator-actions{text-align:center}.qti-navigator .qti-navigator-info.collapsed{height:calc(3rem + 1px)}.qti-navigator .qti-navigator-info{height:calc(5 * (3rem + 1px));overflow:hidden}.qti-navigator .qti-navigator-info>.qti-navigator-label{min-width:calc(100% - 16px);padding:0 8px}.qti-navigator .qti-navigator-info ul{padding:0 4px}.qti-navigator .qti-navigator-info ul .qti-navigator-label span.qti-navigator-text{padding:0 6px;min-width:10rem}.qti-navigator .qti-navigator-info ul .qti-navigator-label span.qti-navigator-icon{min-width:1.5rem}.qti-navigator .qti-navigator-info ul .qti-navigator-label span.qti-navigator-counter{min-width:5rem}.qti-navigator .qti-navigator-filters{margin-top:1rem;text-align:center;width:15rem;height:calc(3rem + (2 * 1px))}.qti-navigator .qti-navigator-filters ul{display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch}.qti-navigator .qti-navigator-filters li{display:block}.qti-navigator .qti-navigator-filters li .qti-navigator-tab{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;border-left:none;line-height:3rem;min-width:5rem;cursor:pointer;white-space:nowrap}.qti-navigator .qti-navigator-tree{-webkit-flex:1;-moz-flex:1;-ms-flex:1;-o-flex:1;flex:1;overflow-y:auto}.qti-navigator .qti-navigator-linear,.qti-navigator .qti-navigator-linear-part{padding:8px}.qti-navigator .qti-navigator-linear .icon,.qti-navigator .qti-navigator-linear-part .icon{display:none}.qti-navigator .qti-navigator-linear .qti-navigator-label,.qti-navigator .qti-navigator-linear-part .qti-navigator-label{font-size:14px;font-size:1.4rem}.qti-navigator .qti-navigator-linear .qti-navigator-title,.qti-navigator .qti-navigator-linear-part .qti-navigator-title{font-size:14px;font-size:1.4rem;margin:8px 0}.qti-navigator .qti-navigator-linear .qti-navigator-message,.qti-navigator .qti-navigator-linear-part .qti-navigator-message{font-size:14px;font-size:1.4rem}.qti-navigator .qti-navigator-part>.qti-navigator-label{padding:0 8px}.qti-navigator .qti-navigator-part:not(:first-child){margin-top:1px}.qti-navigator .qti-navigator-section>.qti-navigator-label{padding:0 8px}.qti-navigator .qti-navigator-item{margin:1px 0;padding-left:10px}.qti-navigator .qti-navigator-item:first-child{margin-top:0}.qti-navigator .qti-navigator-item.disabled>.qti-navigator-label{cursor:not-allowed}.qti-navigator .qti-navigator-collapsible{cursor:pointer;text-align:center;display:none;position:absolute;top:0;bottom:0;right:0;padding-top:50%}.qti-navigator .qti-navigator-collapsible .icon{font-size:20px;font-size:2rem;width:1rem !important;height:2rem !important}.qti-navigator .qti-navigator-collapsible .qti-navigator-expand{display:none}.qti-navigator.collapsible{padding-right:calc(1rem + 10px) !important}.qti-navigator.collapsible .qti-navigator-collapsible{display:block}.qti-navigator.collapsed{width:calc(8rem + 1rem + 10px);min-width:8rem}.qti-navigator.collapsed ul{padding:0 !important}.qti-navigator.collapsed .qti-navigator-text,.qti-navigator.collapsed .qti-navigator-info>.qti-navigator-label,.qti-navigator.collapsed .qti-navigator-part>.qti-navigator-label,.qti-navigator.collapsed .qti-navigator-section>.qti-navigator-label,.qti-navigator.collapsed .qti-navigator-message{display:none !important}.qti-navigator.collapsed .qti-navigator-label{padding:0 2px !important;width:calc(8rem - 4px);min-width:calc(8rem - 4px)}.qti-navigator.collapsed .qti-navigator-icon,.qti-navigator.collapsed .icon{width:auto}.qti-navigator.collapsed .qti-navigator-counter{margin-left:0;min-width:4rem !important}.qti-navigator.collapsed .qti-navigator-collapsible .qti-navigator-collapse{display:none}.qti-navigator.collapsed .qti-navigator-collapsible .qti-navigator-expand{display:block}.qti-navigator.collapsed .qti-navigator-info{height:calc(4 * (3rem + 1px))}.qti-navigator.collapsed .qti-navigator-info.collapsed .collapsible-panel{display:block !important}.qti-navigator.collapsed .qti-navigator-filters{width:calc(8rem - 16px)}.qti-navigator.collapsed .qti-navigator-filter span{display:none}.qti-navigator.collapsed .qti-navigator-filter.active span{display:block;border:0 none;width:calc(8rem - 16px)}.qti-navigator.collapsed .qti-navigator-item,.qti-navigator.collapsed .qti-navigator-linear,.qti-navigator.collapsed .qti-navigator-linear-part{padding-left:2px;text-align:center}.qti-navigator.collapsed .qti-navigator-item{overflow:hidden}.qti-navigator.collapsed .qti-navigator-item .qti-navigator-icon{padding-left:6px;width:2rem}.qti-navigator.collapsed .qti-navigator-item .qti-navigator-number{display:inline-block;margin-left:6px;margin-right:8rem}.qti-navigator.collapsed .qti-navigator-linear,.qti-navigator.collapsed .qti-navigator-linear-part{padding:0 0 8px 0}.qti-navigator.collapsed .qti-navigator-linear .icon,.qti-navigator.collapsed .qti-navigator-linear-part .icon{display:block}.qti-navigator.collapsed .qti-navigator-actions button{padding:0 9px 0 5px}.qti-navigator .qti-navigator-info>.qti-navigator-label{background-color:#D4D5D7;color:#222;border-top:1px solid #D4D5D7}.qti-navigator .qti-navigator-info li{border-bottom:1px solid #fff}.qti-navigator .qti-navigator-filter .qti-navigator-tab{background-color:#fff}.qti-navigator .qti-navigator-filter .qti-navigator-tab:hover{background-color:#3e7da7;color:#fff}.qti-navigator .qti-navigator-filter.active .qti-navigator-tab{background-color:#a4a9b1;color:#fff}.qti-navigator .qti-navigator-linear,.qti-navigator .qti-navigator-linear-part{background:#fff}.qti-navigator .qti-navigator-part>.qti-navigator-label{background-color:#dddfe2}.qti-navigator .qti-navigator-part>.qti-navigator-label:hover{background-color:#c6cacf}.qti-navigator .qti-navigator-part.active>.qti-navigator-label{background-color:#c0c4ca}.qti-navigator .qti-navigator-section>.qti-navigator-label{border-bottom:1px solid #fff}.qti-navigator .qti-navigator-section>.qti-navigator-label:hover{background-color:#ebe8e4}.qti-navigator .qti-navigator-section.active>.qti-navigator-label{background-color:#ded9d4}.qti-navigator .qti-navigator-item{background:#fff}.qti-navigator .qti-navigator-item.active{background:#f4f7f8}.qti-navigator .qti-navigator-item:hover{background:#eef3f5}.qti-navigator .qti-navigator-item.disabled{background-color:#e2deda !important}.qti-navigator .qti-navigator-collapsible{background-color:#dfe1e4;color:#222}.qti-navigator .qti-navigator-collapsible .icon{color:#fff}.document-viewer-plugin{position:relative}.document-viewer-plugin .viewer-overlay{position:fixed;top:0;left:0;bottom:0;right:0;z-index:10000;width:100%;opacity:.5;background-color:#e4ecef}.document-viewer-plugin .viewer-panel{position:fixed;top:10px;left:10px;bottom:10px;right:10px;z-index:100000;color:#222;background:#f3f1ef;font-size:14px;font-size:1.4rem;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.document-viewer-plugin .viewer-header{position:relative;width:100%;height:30px;padding:5px 0;z-index:1}.document-viewer-plugin .viewer-header .viewer-title{font-size:15px;font-size:1.5rem;padding:0;margin:0 0 0 1.6rem}.document-viewer-plugin .viewer-header .icon{float:right;font-size:20px;font-size:2rem;color:#266d9c;margin:1px 6px;top:3px}.document-viewer-plugin .viewer-header .icon:hover{cursor:pointer;opacity:.75}.document-viewer-plugin .viewer-content{padding:0 20px;margin-top:4px;position:relative;height:calc(100% - 40px);overflow:auto}.qti-choiceInteraction.maskable .qti-choice .answer-mask{position:absolute;top:0;right:0;height:100%;padding:5px 10px 0 10px;z-index:10;color:#0e5d91;border:solid 1px #222;background-color:#c8d6dc;text-align:right;vertical-align:middle}.qti-choiceInteraction.maskable .qti-choice .answer-mask:hover{color:#568eb2}.qti-choiceInteraction.maskable .qti-choice .answer-mask .answer-mask-toggle:before{font-family:\\'tao\\' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\\e643\\\"}.qti-choiceInteraction.maskable .qti-choice .label-content{padding-right:40px}.qti-choiceInteraction.maskable .qti-choice.masked .answer-mask{width:100%}.qti-choiceInteraction.maskable .qti-choice.masked .answer-mask .answer-mask-toggle:before{font-family:\\'tao\\' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\\e631\\\"}.qti-choiceInteraction.maskable .qti-choice.masked .answer-mask:hover{background-color:#d2dde2}.mask-container{background-color:transparent}.mask-container .dynamic-component-title-bar{border-top-left-radius:5px;border-top-right-radius:5px;background-color:transparent;border:none;position:absolute;width:100%;z-index:1}.mask-container .dynamic-component-title-bar.moving{background:#f3f1ef;border-bottom:1px solid #8d949e}.mask-container .dynamic-component-title-bar .closer{display:none}.mask-container .dynamic-component-resize-container .dynamic-component-resize-wrapper{bottom:0}.mask-container .dynamic-component-resize-container .dynamic-component-resize-wrapper:hover,.mask-container .dynamic-component-resize-container .dynamic-component-resize-wrapper.resizing{bottom:20px}.mask-container .dynamic-component-content .mask{position:absolute;width:100%;height:100%;-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;background:transparent;opacity:1}.mask-container .dynamic-component-content .mask .inner{-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;position:relative;width:100%;height:100%;background-color:#fff;opacity:1;box-sizing:content-box;padding-bottom:30px}.mask-container .dynamic-component-content .mask .controls{background:#f3f1ef;position:absolute;top:0;right:0;padding:0 5px 0 10px;border-radius:5px;border-top-left-radius:0;border-bottom-right-radius:0;border-bottom:1px solid #8d949e;border-left:1px solid #8d949e;height:30px;z-index:2}.mask-container .dynamic-component-content .mask .controls a{text-decoration:none;margin-right:5px;vertical-align:middle}.mask-container .dynamic-component-content .mask .controls a:hover{color:#0a4166}.mask-container .dynamic-component-content .mask .controls .view{font-size:20px;font-size:2rem}.mask-container .dynamic-component-content .mask .controls .close{font-size:20px;font-size:2rem}.mask-container .dynamic-component-content.moving .mask .inner{border-color:rgba(14,93,145,0.5);opacity:.55}.mask-container .dynamic-component-content.moving .mask .controls{border-left:none;border-bottom-left-radius:0;z-index:2}.mask-container .dynamic-component-content.sizing .mask{border-color:rgba(14,93,145,0.5)}.mask-container .dynamic-component-content.sizing .mask .inner{opacity:.55}.mask-container .dynamic-component-content.sizing .mask .controls{background-color:transparent;border-bottom:none;border-left:none}.mask-container.previewing .dynamic-component-content .mask .inner{opacity:.15;-webkit-transition:opacity, 600ms, ease, 0s;-moz-transition:opacity, 600ms, ease, 0s;-ms-transition:opacity, 600ms, ease, 0s;-o-transition:opacity, 600ms, ease, 0s;transition:opacity, 600ms, ease, 0s}.mask-container.previewing .dynamic-component-content .mask .controls{background-color:transparent;border-bottom:none;border-left:none}.connectivity-box{display:none;width:40px;margin-left:40px}.connectivity-box .icon-connect,.connectivity-box .icon-disconnect{display:none;line-height:2;font-size:16px;font-size:1.6rem;text-shadow:0 1px 0 rgba(0,0,0,0.9)}.connectivity-box.connected,.connectivity-box.disconnected{display:inline-block}.connectivity-box.connected .icon-connect{display:inline-block}.connectivity-box.disconnected .icon-disconnect{display:inline-block}.line-reader-mask{box-sizing:border-box;border:0 solid #0E5D91;background-color:#f3f7fa}.line-reader-mask.hidden{display:none}.line-reader-mask.resizing{background-color:rgba(243,247,250,0.8);border-color:rgba(14,93,145,0.5)}.line-reader-mask.resizer{z-index:99999 !important}.line-reader-mask.resizer.se .resize-control{border-right:2px solid #0E5D91;border-bottom:2px solid #0E5D91;width:40px;height:40px}.line-reader-mask.border-top{border-top-width:1px}.line-reader-mask.border-right{border-right-width:1px}.line-reader-mask.border-bottom{border-bottom-width:1px}.line-reader-mask.border-left{border-left-width:1px}.line-reader-mask.ne{-webkit-border-top-right-radius:5px;-moz-border-radius-topright:5px;border-top-right-radius:5px}.line-reader-mask.se{-webkit-border-bottom-right-radius:5px;-moz-border-radius-bottomright:5px;border-bottom-right-radius:5px}.line-reader-mask.sw{-webkit-border-bottom-left-radius:5px;-moz-border-radius-bottomleft:5px;border-bottom-left-radius:5px}.line-reader-mask.nw{-webkit-border-top-left-radius:5px;-moz-border-radius-topleft:5px;border-top-left-radius:5px}.line-reader-mask.se .resize-control{width:20px;height:20px;margin-bottom:10px;margin-right:10px;border-right:1px solid #0E5D91;border-bottom:1px solid #0E5D91;position:absolute;right:0;bottom:0;cursor:nwse-resize}.line-reader-mask.e .resize-control{position:absolute;width:20px;height:20px;bottom:-10px;left:-10px;border-right:1px solid #0E5D91;border-bottom:1px solid #0E5D91;cursor:nesw-resize}.line-reader-mask.s .resize-control{position:absolute;width:20px;height:10px;right:-10px;border-bottom:1px solid #0E5D91}.line-reader-overlay{box-sizing:border-box;opacity:0}.line-reader-overlay.hidden{display:none}.line-reader-overlay.moving{-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5px}.line-reader-overlay.moving.n{max-height:none}.line-reader-overlay.moving,.line-reader-overlay .inner-window{overflow:hidden;position:absolute;opacity:1;background-color:transparent;border:1px solid rgba(14,93,145,0.5)}.line-reader-overlay .inner-window{box-sizing:content-box}.line-reader-overlay .mask-bg{box-sizing:border-box;border:0 solid rgba(243,247,250,0.8);background-color:transparent;position:absolute}.line-reader-overlay.n{max-height:30px;opacity:1}.line-reader-overlay.n .icon-mobile-menu{font-size:22px;font-size:2.2rem;display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch;-webkit-justify-content:center;-moz-justify-content:center;-ms-justify-content:center;-o-justify-content:center;justify-content:center;border-bottom:1px solid #0E5D91;color:#0E5D91;position:absolute;left:0;top:0;height:30px;width:100%;z-index:1}.line-reader-overlay.n .icon-mobile-menu:hover{color:#0a4166}.line-reader-overlay.n .icon-mobile-menu:before{position:relative;top:3px}.line-reader-overlay .icon-mobile-menu{display:none}.line-reader-inner-drag{-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch;-webkit-justify-content:center;-moz-justify-content:center;-ms-justify-content:center;-o-justify-content:center;justify-content:center;text-align:center;padding-top:3px;color:#0E5D91}.line-reader-inner-drag.hidden{display:none}.line-reader-inner-drag:hover{background-color:#87aec8;color:#0a4166}.line-reader-inner-drag.moving{background-color:transparent;color:#9fbed3}.line-reader-inner-drag .icon{text-shadow:none !important;border-bottom-left-radius:110px;border-bottom-right-radius:110px;border:1px solid #0E5D91;border-top:0;width:50px;height:25px;position:relative;bottom:10px}.line-reader-inner-drag .icon:before{position:relative;top:5px;left:1px}.line-reader-closer{font-size:22px;font-size:2.2rem;cursor:pointer;color:#0E5D91;width:12px;height:12px}.line-reader-closer:hover{color:#0a4166}.line-reader-closer .icon{text-shadow:none !important}.magnifier-container{background-color:transparent}.magnifier-container .dynamic-component-title-bar{border-top-left-radius:5px;border-top-right-radius:5px;background-color:transparent;border:none;position:absolute;width:100%;z-index:3}.magnifier-container .dynamic-component-title-bar.moving{background:#f3f1ef;border-bottom:1px solid #8d949e}.magnifier-container .dynamic-component-title-bar .closer{display:none}.magnifier-container .dynamic-component-resize-container .dynamic-component-resize-wrapper{bottom:0}.magnifier-container .dynamic-component-resize-container .dynamic-component-resize-wrapper:hover,.magnifier-container .dynamic-component-resize-container .dynamic-component-resize-wrapper.resizing{bottom:20px}.magnifier-container .dynamic-component-content .magnifier{position:absolute;width:100%;height:100%;overflow:hidden;background-color:#fff;opacity:1;-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;box-sizing:content-box;padding-bottom:30px}@-o-keyframes fadeIn{0%{opacity:0;visibility:visible}100%{opacity:1;visibility:visible}}@-moz-keyframes fadeIn{0%{opacity:0;visibility:visible}100%{opacity:1;visibility:visible}}@-webkit-keyframes fadeIn{0%{opacity:0;visibility:visible}100%{opacity:1;visibility:visible}}@keyframes fadeIn{0%{opacity:0;visibility:visible}100%{opacity:1;visibility:visible}}@-o-keyframes fadeOut{0%{opacity:1;visibility:visible}100%{opacity:0;visibility:hidden}}@-moz-keyframes fadeOut{0%{opacity:1;visibility:visible}100%{opacity:0;visibility:hidden}}@-webkit-keyframes fadeOut{0%{opacity:1;visibility:visible}100%{opacity:0;visibility:hidden}}@keyframes fadeOut{0%{opacity:1;visibility:visible}100%{opacity:0;visibility:hidden}}@-o-keyframes pop{0%{opacity:0;visibility:visible}50%{opacity:.5;visibility:visible;transform:scale(2)}100%{opacity:0;visibility:hidden;transform:scale(3)}}@-moz-keyframes pop{0%{opacity:0;visibility:visible}50%{opacity:.5;visibility:visible;transform:scale(2)}100%{opacity:0;visibility:hidden;transform:scale(3)}}@-webkit-keyframes pop{0%{opacity:0;visibility:visible}50%{opacity:.5;visibility:visible;transform:scale(2)}100%{opacity:0;visibility:hidden;transform:scale(3)}}@keyframes pop{0%{opacity:0;visibility:visible}50%{opacity:.5;visibility:visible;transform:scale(2)}100%{opacity:0;visibility:hidden;transform:scale(3)}}.magnifier-container .dynamic-component-content .magnifier .level{position:absolute;overflow:hidden;z-index:1;top:0;left:0;bottom:0;right:0;background:transparent;color:#3e7da7;opacity:1;font-size:50px;font-size:5rem;display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch;-webkit-align-items:center;-moz-align-items:center;-ms-align-items:center;-o-align-items:center;align-items:center;-webkit-justify-content:center;-moz-justify-content:center;-ms-justify-content:center;-o-justify-content:center;justify-content:center;-webkit-animation:pop 400ms forwards;-moz-animation:pop 400ms forwards;-ms-animation:pop 400ms forwards;-o-animation:pop 400ms forwards;animation:pop 400ms forwards}.magnifier-container .dynamic-component-content .magnifier .level:before{content:\\\"x\\\"}.magnifier-container .dynamic-component-content .magnifier .overlay{position:absolute;overflow:hidden;z-index:2;top:0;left:0;bottom:0;right:0;background:transparent}.magnifier-container .dynamic-component-content .magnifier>.controls{position:absolute;background-color:#f3f1ef;border:0 solid #8d949e;min-height:29px;z-index:4}.magnifier-container .dynamic-component-content .magnifier>.controls a{color:#222;text-decoration:none;font-size:20px;font-size:2rem;margin:0 2px}.magnifier-container .dynamic-component-content .magnifier>.controls a:hover{color:#0a4166}.magnifier-container .dynamic-component-content .magnifier>.controls.close{top:0;right:0;border-bottom-width:1px;border-left-width:1px;-webkit-border-bottom-left-radius:5px;-moz-border-radius-bottomleft:5px;border-bottom-left-radius:5px}.magnifier-container .dynamic-component-content .magnifier .inner{position:absolute}.magnifier-container .dynamic-component-content.moving .magnifier .controls{border-left:none;border-bottom-left-radius:0}.magnifier-container .dynamic-component-content.sizing{border-color:rgba(14,93,145,0.5)}.magnifier-container .dynamic-component-content.sizing .inner,.magnifier-container .dynamic-component-content.sizing .controls,.magnifier-container .dynamic-component-content.sizing .level{opacity:0.45 !important}.progress-box .progressbar .progressbar-points{display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch}.progress-box .progressbar .progressbar-points>span.progressbar-point{flex:1;display:inline-block;border:1px solid #0e5d91;background-color:#f3f1ef;height:calc(1rem - 4px);margin:0 1px 0 0}.progress-box .progressbar .progressbar-points>span.progressbar-point:last-child{margin-right:0}.progress-box .progressbar .progressbar-points>span.progressbar-point.reached{background-color:#0e5d91}.progress-box .progressbar .progressbar-points>span.progressbar-point.current{background-color:#a4a9b1}body.delivery-scope{min-height:100vh;max-height:100vh;margin-bottom:0}.runner{position:relative}.test-runner-scope{position:relative;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:calc(100vh - 99px)}.test-runner-scope .test-runner-sections{-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;overflow:hidden;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.test-runner-scope .test-sidebar{background:#f3f1ef;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;height:calc(100vh - 179px);overflow-y:auto;max-width:350px}.test-runner-scope .test-sidebar>.qti-panel{max-width:350px;padding:10px}@media only screen and (max-device-width: 800px){.test-runner-scope .test-sidebar{max-width:200px}.test-runner-scope .test-sidebar>.qti-panel{max-width:200px}}@media only screen and (min-device-width: 800px) and (max-device-width: 1280px){.test-runner-scope .test-sidebar{max-width:250px}.test-runner-scope .test-sidebar>.qti-panel{max-width:250px}}@media only screen and (min-device-width: 1280px) and (max-device-width: 1440px){.test-runner-scope .test-sidebar{max-width:300px}.test-runner-scope .test-sidebar>.qti-panel{max-width:300px}}.test-runner-scope .test-sidebar-left{border-right:1px #ddd solid}.test-runner-scope .test-sidebar-right{border-left:1px #ddd solid}.test-runner-scope .content-wrapper{position:relative;-webkit-flex:1 1 0%;-ms-flex:1 1 0%;flex:1 1 0%;overflow:auto;padding:0}.test-runner-scope .content-wrapper .overlay{position:absolute;left:0;right:0;top:0;bottom:0;width:100%;opacity:.9}.test-runner-scope .content-wrapper .overlay-full{background-color:#fff;opacity:1}.test-runner-scope #qti-content{-webkit-overflow-scrolling:touch;max-width:1024px;width:100%;margin:auto}.test-runner-scope #qti-item{width:100%;min-width:100%;height:auto;overflow:visible}.test-runner-scope .qti-item{padding:30px}.test-runner-scope .size-wrapper{max-width:1280px;margin:auto;width:100%}.test-runner-scope #qti-rubrics{margin:auto;max-width:1024px;width:100%}.test-runner-scope #qti-rubrics .qti-rubricBlock{margin:20px 0}.test-runner-scope #qti-rubrics .hidden{display:none}.no-controls .test-runner-scope{height:100vh}.test-runner-scope .action-bar.content-action-bar{padding:2px}.test-runner-scope .action-bar.content-action-bar li{margin:2px 0 0 10px;border:none}.test-runner-scope .action-bar.content-action-bar li.btn-info{padding-top:6px;height:36px;margin-top:0;border-bottom:solid 2px transparent;border-radius:0}.test-runner-scope .action-bar.content-action-bar li.btn-info.btn-group{border:none !important;overflow:hidden;padding:0}.test-runner-scope .action-bar.content-action-bar li.btn-info.btn-group a{float:left;margin:0 2px;padding:0 15px;border:1px solid rgba(255,255,255,0.3);border-radius:0px;display:inline-block;height:inherit}.test-runner-scope .action-bar.content-action-bar li.btn-info.btn-group a:first-of-type{border-top-left-radius:3px;border-bottom-left-radius:3px;margin-left:0}.test-runner-scope .action-bar.content-action-bar li.btn-info.btn-group a:last-of-type{border-top-right-radius:3px;border-bottom-right-radius:3px;margin-right:0}.test-runner-scope .action-bar.content-action-bar li.btn-info.btn-group a:hover,.test-runner-scope .action-bar.content-action-bar li.btn-info.btn-group a.active{border-color:rgba(255,255,255,0.8)}.test-runner-scope .action-bar.content-action-bar li.btn-info.btn-group a .no-label{padding-right:0}.test-runner-scope .action-bar.content-action-bar li.btn-info:hover,.test-runner-scope .action-bar.content-action-bar li.btn-info.active{border-bottom-color:rgba(255,255,255,0.8)}.test-runner-scope .action-bar.content-action-bar li.btn-info:active,.test-runner-scope .action-bar.content-action-bar li.btn-info.active{background:#e7eff4;border-color:rgba(255,255,255,0.8)}.test-runner-scope .action-bar.content-action-bar li.btn-info:active a,.test-runner-scope .action-bar.content-action-bar li.btn-info.active a{color:#266d9c;text-shadow:none}.test-runner-scope .action-bar.content-action-bar li.btn-info:active:hover,.test-runner-scope .action-bar.content-action-bar li.btn-info.active:hover{background:#fff}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar{opacity:1;height:40px}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box{height:40px;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:space-between;-ms-flex-pack:space-between;justify-content:space-between;padding-left:10px;padding-right:10px}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box .title-box{font-size:14px;font-size:1.4rem;padding:4px 0 0;-ms-flex:0 1 auto;-webkit-flex:0 1 auto;flex:0 1 auto}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box .progress-box,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box .item-number-box{padding-top:4px;white-space:nowrap;-ms-flex:0 1 auto;-webkit-flex:0 1 auto;flex:0 1 auto}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box .progress-box .qti-controls,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box .item-number-box .qti-controls{display:inline-block;margin-left:20px;white-space:nowrap}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box .timer-box{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.top-action-bar>.control-box .progressbar{margin-top:5px;min-width:150px;max-width:200px;height:0.6em}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box{color:rgba(255,255,255,0.9);text-shadow:1px 1px 0 black}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt{padding-left:20px}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft:first-child,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt:first-child{padding-left:0}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .lft:last-child ul,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box .rgt:last-child ul{display:inline-block}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box [class^=\\\"btn-\\\"],.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar>.control-box [class*=\\\" btn-\\\"]{white-space:nowrap}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .action{position:relative;overflow:visible}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu{color:#222;background:#f3f1ef;border:1px solid #aaa9a7;overflow:auto;list-style:none;min-width:150px;margin:0;padding:0;position:absolute;bottom:36px;left:-3px}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action{display:inline-block;text-align:left;width:100%;white-space:nowrap;overflow:hidden;color:#222;border-bottom:1px solid #c2c1bf;margin:0;-moz-border-radius:0px;-webkit-border-radius:0px;border-radius:0px;height:32px;padding:6px 15px;line-height:1;border-left:solid 3px transparent}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .icon-checkbox-checked{display:none}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active{background-color:#dbd9d7;font-weight:bold}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon-checkbox,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon-checkbox,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active .icon-checkbox{display:none}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon-checkbox-checked,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon-checkbox-checked,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.active .icon-checkbox-checked{display:inline-block}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover{background-color:#0e5d91;color:#fff;border-left-color:#313030 !important}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .label,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .label,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon{color:#fff}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action.hover .icon,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action:hover .icon{color:#e7eff4}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .label,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar .tools-box .menu .action .icon{font-size:14px;font-size:1.4rem;text-shadow:none;color:#222}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar{overflow:visible;position:relative}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .action{line-height:1.6}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .icon.no-label{padding-right:0}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed .btn-info .text,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed-hover .btn-info:not(:hover) .text,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.no-tool-label .text,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed .text,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed-over:not(:hover) .text{display:none}.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed .btn-info .icon,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .tool-label-collapsed-hover .btn-info:not(:hover) .icon,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.no-tool-label .icon,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed .icon,.test-runner-scope .action-bar.content-action-bar.horizontal-action-bar.bottom-action-bar .btn-info.tool-label-collapsed-over:not(:hover) .icon{padding:0}.test-runner-scope [data-control=\\\"exit\\\"]{margin-left:20px}.test-runner-scope [data-control=\\\"comment-toggle\\\"]{display:none}.test-runner-scope.non-lti-context .title-box{display:none}.test-runner-scope [data-control=\\\"qti-comment\\\"]{background-color:#f3f1ef;position:absolute;bottom:33px;left:8px;text-align:right;padding:5px;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;-webkit-box-shadow:0 0 15px 1px rgba(0,0,0,0.2);-moz-box-shadow:0 0 15px 1px rgba(0,0,0,0.2);-ms-box-shadow:0 0 15px 1px rgba(0,0,0,0.2);-o-box-shadow:0 0 15px 1px rgba(0,0,0,0.2);box-shadow:0 0 15px 1px rgba(0,0,0,0.2)}.test-runner-scope [data-control=\\\"qti-comment\\\"] textarea{display:block;height:100px;resize:none;width:350px;padding:3px;margin:0  0 10px 0;border:none;font-size:13px;font-size:1.3rem;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.test-runner-scope .tools-box{position:relative;overflow:visible}.wait-content .wait-content_text--centered{text-align:center}.wait-content .wait-content_actions-list{display:box;display:-ms-flexbox;display:-webkit-flexbox;display:flexbox;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;flex-pack:start;-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start;flex-line-pack:start;-ms-flex-line-pack:start;-webkit-align-content:flex-start;align-content:flex-start;flex-align:stretch;-ms-flex-align:stretch;-webkit-align-items:stretch;align-items:stretch;-webkit-flex-direction:column;-moz-flex-direction:column;-ms-flex-direction:column;-o-flex-direction:column;flex-direction:column}.wait-content .wait-content_actions-list .wait-content_text--centered{position:relative;right:15px}\\n\\n/*# sourceMappingURL=new-test-runner.css.map */');\n","\ndefine(\"taoQtiTest/loader/taoQtiTestRunner.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoItems/loader/taoItemsRunner.min\",\"taoTests/loader/taoTestsRunner.min\",\"taoQtiItem/loader/taoQtiItemRunner.min\"]);\n"]}
