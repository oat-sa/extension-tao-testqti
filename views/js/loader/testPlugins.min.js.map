{"version":3,"sources":["../../core/delegator.js","../../core/promise.js","../../core/plugin.js","../runner/plugins/content/accessibility/focusOnFirstField.js","../../core/format.js","../../core/logger/api.js","../../core/logger.js","../../core/eventifier.js","../../util/namespace.js","../../util/shortcut/registry.js","../../util/shortcut.js","css!taoQtiTestCss/plugins/key-navigation","../runner/plugins/content/accessibility/keyNavigation.js","../../core/pluginifier.js","../../core/dataattrhandler.js","../runner/plugins/content/dialog/dialog.js","../runner/plugins/content/dialog/exitMessages.js","../runner/plugins/content/dialog/itemAlertMessage.js","../runner/plugins/templates/button!tpl","../runner/plugins/content/dialog/itemInlineMessage.js","../../util/regexEscape.js","../../util/wrapLongWords.js","../../util/encode.js","../runner/plugins/content/feedback/feedback.js","../runner/plugins/content/loading/loading.js","../runner/plugins/content/modalFeedback/modalFeedback.js","../runner/plugins/content/overlay/overlay.js","../runner/plugins/content/responsiveness/collapser.js","../runner/plugins/content/rubricBlock/rubricBlock!tpl","../runner/plugins/content/rubricBlock/rubricBlock.js","../../core/polling.js","../runner/plugins/controls/connectivity/connectivity!tpl","../runner/plugins/controls/connectivity/connectivity.js","../../core/timer.js","../runner/plugins/controls/duration/duration.js","../runner/helpers/map.js","../runner/plugins/controls/progressbar/progress.js","../runner/plugins/controls/progressbar/renderer/percentage!tpl","../runner/plugins/controls/progressbar/renderer/percentage.js","../runner/plugins/controls/progressbar/renderer/position!tpl","tpl!taoQtiTest/runner/plugins/controls/progressbar/renderer/position-point","../runner/plugins/controls/progressbar/renderer/position.js","../runner/plugins/controls/progressbar/progressbar.js","../runner/plugins/controls/testState/testState.js","../../core/encoder/time.js","../runner/plugins/controls/timer/component/tpl/countdown!tpl","../runner/plugins/controls/timer/component/css/countdown!css","../runner/plugins/controls/timer/component/countdown.js","../runner/plugins/controls/timer/component/tpl/timerbox!tpl","../runner/plugins/controls/timer/component/css/timerbox!css","../runner/plugins/controls/timer/component/timerbox.js","../runner/plugins/controls/timer/strategy/enforcedStay.js","../runner/plugins/controls/timer/strategy/extraTime.js","../runner/plugins/controls/timer/strategy/guidedNavigation.js","../runner/plugins/controls/timer/strategy/timeout.js","../runner/helpers/currentItem.js","../runner/helpers/stats.js","../runner/helpers/messages.js","../runner/helpers/navigation.js","../runner/plugins/controls/timer/strategy/warnSectionLeaving.js","../runner/plugins/controls/timer/strategy/strategyHandler.js","../runner/plugins/controls/timer/timers.js","../runner/plugins/controls/timer/plugin.js","../runner/plugins/controls/title/title!tpl","../runner/plugins/controls/title/title.js","../runner/plugins/controls/trace/itemTraceVariables.js","../runner/plugins/navigation/allowSkipping.js","../runner/plugins/navigation/next/nextWarningHelper.js","../runner/plugins/navigation/next.js","../runner/plugins/navigation/next/dialogConfirmNext.js","../runner/plugins/navigation/next/linearNextItemWarning.js","../runner/plugins/navigation/nextSection.js","../runner/plugins/navigation/previous.js","../runner/plugins/navigation/review/navigator!tpl","../runner/plugins/navigation/review/navigatorTree!tpl","../runner/plugins/navigation/review/navigator.js","../runner/plugins/navigation/review/review.js","../runner/plugins/navigation/skip.js","../runner/plugins/navigation/validateResponses.js","../runner/plugins/navigation/warnBeforeLeaving.js","../runner/plugins/security/disableRightClick.js","../runner/plugins/tools/answerElimination/eliminator.js","../../core/statifier.js","../runner/plugins/tools/answerMasking/tpl/mask!tpl","../runner/plugins/tools/answerMasking/answerMasking.js","../runner/plugins/tools/answerMasking/plugin.js","../runner/plugins/tools/areaMasking/mask!tpl","../../core/mouseEvent.js","../../util/position.js","../runner/plugins/tools/areaMasking/mask.js","../runner/plugins/tools/areaMasking/areaMasking.js","../../core/collections.js","../../util/mathsEvaluator.js","../../core/moduleLoader.js","../../core/pluginLoader.js","../runner/plugins/tools/calculator.js","../runner/plugins/tools/comment/comment!tpl","../runner/plugins/tools/comment/comment.js","../../core/providerRegistry.js","../../core/requireIfExists.js","../runner/plugins/tools/documentViewer/panel!tpl","../runner/plugins/tools/documentViewer/documentViewer.js","../runner/plugins/tools/highlighter/highlighter.js","../runner/plugins/tools/highlighter/collection.js","../runner/plugins/tools/highlighter/plugin.js","../runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher.js","../runner/plugins/tools/lineReader/compoundMask.js","../runner/plugins/tools/lineReader/plugin.js","../runner/plugins/tools/magnifier/magnifierPanel!tpl","../runner/plugins/tools/magnifier/magnifierPanel.js","../runner/plugins/tools/magnifier/magnifier.js","../runner/plugins/tools/zoom.js","onLayerEnd0.js","module-create.js"],"names":[],"mappings":"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","sourcesContent":["define('core/delegator',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var defaults = {\n      name: 'provided',\n      eventifier: true\n    };\n    var _slice = [].slice;\n    /**\n     * Creates a function that delegates api calls to an provider\n     * @param {Object} api - The api providing the calls\n     * @param {Object} provider - The provider on which delegate the calls\n     * @param {Object} [config] - An optional configuration set\n     * @param {String} [config.name] - The name of the provider\n     * @param {Boolean} [config.eventifier] - Enable the eventifier support (default: true)\n     * @param {Boolean} [config.forward] - Forward the calls to the provider instead of delegate (default: false)\n     * @param {Function} [config.defaultProvider] - An optional default delegated function called if the provider do not have the requested target.\n     * @param {Function} [config.wrapper] - An optional function that will wrap the response\n     * @param {Boolean} [config.required] - Throws exception if a delegated method is missing (default: false)\n     * @returns {delegate} - The delegate function\n     */\n\n    function delegator(api, provider, config) {\n      var extendedConfig = _.defaults(config || {}, defaults);\n\n      var eventifier = !!(extendedConfig.eventifier && api && api.trigger);\n      var context = extendedConfig.forward ? provider : api;\n      var defaultProvider = _.isFunction(extendedConfig.defaultProvider) ? extendedConfig.defaultProvider : _.noop;\n      var wrapper = _.isFunction(extendedConfig.wrapper) ? extendedConfig.wrapper : null;\n      var name = extendedConfig.name;\n\n      if (extendedConfig.required) {\n        defaultProvider = null;\n      }\n      /**\n       * Delegates a function call from the api to the provider.\n       * If the api supports eventifier, fires the related event\n       *\n       * @param {String} fnName - The name of the delegated method to call\n       * @param {Object} ... - Following parameters will be forwarded as is\n       * @returns {Object} - The delegated method must return a response\n       * @private\n       * @throws Error\n       */\n\n\n      function delegate(fnName) {\n        var response, args;\n\n        if (provider) {\n          if (_.isFunction(provider[fnName]) || defaultProvider) {\n            // need real array of params, even if empty\n            args = _slice.call(arguments, 1); // delegate the call to the provider\n\n            response = (provider[fnName] || defaultProvider).apply(context, args);\n\n            if (wrapper) {\n              response = wrapper(response);\n            } // if supported fires the method related event\n\n\n            if (eventifier) {\n              // the response has to be provided as first argument in all events\n              api.trigger.apply(api, [fnName, response].concat(args));\n            }\n          } else {\n            throw new Error('There is no method called ' + fnName + ' in the ' + name + ' provider!');\n          }\n        } else {\n          throw new Error('There is no ' + name + ' provider!');\n        }\n\n        return response;\n      }\n\n      return delegate;\n    }\n\n    return delegator;\n\n});\n\n","define('core/promise',[],function () { 'use strict';\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2015-2019 Open Assessment Technologies SA\n\t */\n\n\treturn Promise;\n\n});\n\n","define('core/plugin',['lodash', 'core/delegator', 'core/promise'], function (_, delegator, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    delegator = delegator && delegator.hasOwnProperty('default') ? delegator['default'] : delegator;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Meta factory for plugins. Let's you create a plugin definition.\n     *\n     * @param {Object} provider - the plugin provider\n     * @param {String} provider.name - the plugin name\n     * @param {Function} provider.init - the plugin initialization method\n     * @param {Function} [provider.install] - plugin installer called after the instance has been bound with its host\n     * @param {Function} [provider.render] - plugin rendering behavior\n     * @param {Function} [provider.finish] - plugin finish behavior\n     * @param {Function} [provider.destroy] - plugin destroy behavior\n     * @param {Function} [provider.show] - plugin show behavior\n     * @param {Function} [provider.hide] - plugin hide behavior\n     * @param {Function} [provider.enable] - plugin enable behavior\n     * @param {Function} [provider.disable] - plugin disable behavior\n     * @param {Object} defaults - default configuration to be assigned\n     * @param {String} [defaults.hostName] - the name of the host, used to alias the getHost method to getHostName\n     * @returns {Function} - the generated plugin factory\n     */\n\n    function pluginFactory(provider, defaults) {\n      var pluginName;\n\n      if (!_.isPlainObject(provider) || !_.isString(provider.name) || _.isEmpty(provider.name) || !_.isFunction(provider.init)) {\n        throw new TypeError('A plugin should be defined at least by a name property and an init method');\n      }\n\n      pluginName = provider.name;\n      defaults = defaults || {};\n      /**\n       * The configured plugin factory\n       *\n       * @param {host} host - the plugin host instance\n       * @param {areaBroker} [areaBroker] - an instance of an areaBroker. This should be your access point to GUI.\n       * @param {Object} [config] - plugin configuration\n       * @returns {plugin} the plugin instance\n       */\n\n      return function instanciatePlugin(host, areaBroker, config) {\n        var plugin, delegate;\n        var states = {};\n        var pluginContent = {}; //basic checking for the host\n\n        if (!_.isObject(host) || !_.isFunction(host.on) || !_.isFunction(host.trigger)) {\n          throw new TypeError('A plugin host should be a valid eventified object');\n        }\n\n        config = _.defaults(config || {}, defaults);\n        /**\n         * The plugin instance.\n         * @typedef {plugin}\n         */\n\n        plugin = {\n          /**\n           * Called when the host is installing the plugins\n           * @returns {Promise} to resolve async delegation\n           */\n          install: function install() {\n            var self = this;\n            return delegate('install').then(function () {\n              self.trigger('install');\n            });\n          },\n\n          /**\n           * Called when the host is initializing\n           * @param {Object|*} [content] the plugin content\n           * @returns {Promise} to resolve async delegation\n           */\n          init: function init(content) {\n            var self = this;\n            states = {};\n\n            if (content) {\n              pluginContent = content;\n            }\n\n            return delegate('init', content).then(function () {\n              self.setState('init', true).trigger('init');\n            });\n          },\n\n          /**\n           * Called when the host is rendering\n           * @returns {Promise} to resolve async delegation\n           */\n          render: function render() {\n            var self = this;\n            return delegate('render').then(function () {\n              self.setState('ready', true).trigger('render').trigger('ready');\n            });\n          },\n\n          /**\n           * Called when the host is finishing\n           * @returns {Promise} to resolve async delegation\n           */\n          finish: function finish() {\n            var self = this;\n            return delegate('finish').then(function () {\n              self.setState('finish', true).trigger('finish');\n            });\n          },\n\n          /**\n           * Called when the host is destroying\n           * @returns {Promise} to resolve async delegation\n           */\n          destroy: function destroy() {\n            var self = this;\n            return delegate('destroy').then(function () {\n              config = {};\n              states = {};\n              self.setState('init', false);\n              self.trigger('destroy');\n            });\n          },\n\n          /**\n           * Triggers the events on the host using the pluginName as namespace\n           * and prefixed by plugin-\n           * For example trigger('foo') will trigger('plugin-foo.pluginA') on the host\n           *\n           * @param {String} name - the event name\n           * @param {...} args - additional args are given to the event\n           * @returns {plugin} chains\n           */\n          trigger: function trigger(name) {\n            var args = [].slice.call(arguments, 1);\n            host.trigger.apply(host, ['plugin-' + name + '.' + pluginName, plugin].concat(args));\n            return this;\n          },\n\n          /**\n           * Get the plugin host\n           * @returns {host} the plugins's host\n           */\n          getHost: function getHost() {\n            return host;\n          },\n\n          /**\n           * Get the host's areaBroker\n           * @returns {areaBroker} the areaBroker\n           */\n          getAreaBroker: function getAreaBroker() {\n            return areaBroker;\n          },\n\n          /**\n           * Get the config\n           * @returns {Object} config\n           */\n          getConfig: function getConfig() {\n            return config;\n          },\n\n          /**\n           * Set a config entry\n           * @param {String|Object} name - the entry name or an object to merge\n           * @param {*} [value] - the config value if name is an entry\n           * @returns {plugin} chains\n           */\n          setConfig: function setConfig(name, value) {\n            if (_.isPlainObject(name)) {\n              config = _.defaults(name, config);\n            } else {\n              config[name] = value;\n            }\n\n            return this;\n          },\n\n          /**\n           * Get a state of the plugin\n           *\n           * @param {String} name - the state name\n           * @returns {Boolean} if active, false if not set\n           */\n          getState: function getState(name) {\n            return !!states[name];\n          },\n\n          /**\n           * Set a state to the plugin\n           *\n           * @param {String} name - the state name\n           * @param {Boolean} active - is the state active\n           * @returns {plugin} chains\n           * @throws {TypeError} if the state name is not a valid string\n           */\n          setState: function setState(name, active) {\n            if (!_.isString(name) || _.isEmpty(name)) {\n              throw new TypeError('The state must have a name');\n            }\n\n            states[name] = !!active;\n            return this;\n          },\n\n          /**\n           * Get the plugin content\n           *\n           * @returns {Object|*} the content\n           */\n          getContent: function getContent() {\n            return pluginContent;\n          },\n\n          /**\n           * Set the plugin content\n           *\n           * @param {Object|*} [content] - the plugin content\n           * @returns {plugin} chains\n           */\n          setContent: function setContent(content) {\n            pluginContent = content;\n            return this;\n          },\n\n          /**\n           * Get the plugin name\n           *\n           * @returns {String} the name\n           */\n          getName: function getName() {\n            return pluginName;\n          },\n\n          /**\n           * Shows the component related to this plugin\n           * @returns {Promise} to resolve async delegation\n           */\n          show: function show() {\n            var self = this;\n            return delegate('show').then(function () {\n              self.setState('visible', true).trigger('show');\n            });\n          },\n\n          /**\n           * Hides the component related to this plugin\n           * @returns {Promise} to resolve async delegation\n           */\n          hide: function hide() {\n            var self = this;\n            return delegate('hide').then(function () {\n              self.setState('visible', false).trigger('hide');\n            });\n          },\n\n          /**\n           * Enables the plugin\n           * @returns {Promise} to resolve async delegation\n           */\n          enable: function enable() {\n            var self = this;\n            return delegate('enable').then(function () {\n              self.setState('enabled', true).trigger('enable');\n            });\n          },\n\n          /**\n           * Disables the plugin\n           * @returns {Promise} to resolve async delegation\n           */\n          disable: function disable() {\n            var self = this;\n            return delegate('disable').then(function () {\n              self.setState('enabled', false).trigger('disable');\n            });\n          }\n        };\n        /**\n         * Delegate a function call to the provider\n         *\n         * @param {String} fnName - the function name\n         * @param {...} args - additional args are given to the provider\n         * @returns {*} up to the provider\n         */\n\n        delegate = delegator(plugin, provider, {\n          eventifier: false,\n          wrapper: function pluginWrapper(response) {\n            return Promise.resolve(response);\n          }\n        }); //add a convenience method that alias getHost using the hostName\n\n        if (_.isString(defaults.hostName) && !_.isEmpty(defaults.hostName)) {\n          plugin['get' + defaults.hostName.charAt(0).toUpperCase() + defaults.hostName.slice(1)] = plugin.getHost;\n        }\n\n        return plugin;\n      };\n    }\n\n    return pluginFactory;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n */\n/**\n * Test Runner Content Plugin: Focus the first element if possible\n *\n * @author Dieter Raber <dieter@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/accessibility/focusOnFirstField',[\n    'jquery',\n    'lodash',\n    'taoTests/runner/plugin',\n    'ckeditor'\n], function ($, _, pluginFactory, ckEditor) {\n    'use strict';\n\n    /**\n     * Check if client uses the iOS device.\n     *\n     * @returns {*|boolean}\n     */\n    function isIOSDevice() {\n        return /(iPhone|iPad)/i.test(navigator.userAgent)\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'focusOnFirstField',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            /**\n             * When an Item is loaded - if we set the focus on any input then the ipad sets the focus on the\n             * keyboard, so the windows lose focus\n             * and we get an error message for the test in fullscreen mode\n             */\n            if (!isIOSDevice()) {\n                this.getTestRunner()\n                    .after('renderitem', function() {\n                        var $input = self.getAreaBroker().getContentArea().find('.qti-itemBody')\n                            .find('input, textarea, select')\n                            .not(':input[type=button], :input[type=submit], :input[type=reset]')\n                            .first();\n                        var $cke = $input.closest('.qti-interaction').find('.cke');\n\n                        if($cke.length) {\n                            _.delay(function() {\n                                ckEditor.instances[$cke.attr('id').replace(/^cke_/, '')].focus();\n                            }, 100);\n                        }\n                        else {\n                            $input.focus();\n                        }\n                    });\n            }\n        }\n    });\n});\n\n","define('core/format',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var pattern = /(%[sdj])/g;\n    /**\n     * Enables you to format strings/message, using the pattern:\n     *  - %s : string\n     *  - %d : number\n     *  - %j : json\n     *\n     * @example format('Resize %s to %d%', 'width', 100); //returns Resize width to 100%\n     * @exports core/format\n     * @param {String} message - the message to format\n     * @param {...String|Number|Object} [replacements] -  the replacements arguments in the order defined in the message\n     * @returns {String} the formatted message\n     */\n\n    function format (message) {\n      var replacements = Array.prototype.slice.call(arguments, 1);\n      return _.reduce(message.match(pattern), function (acc, match, index) {\n        var replacement = '';\n\n        if (undefined !== replacements[index]) {\n          switch (match) {\n            case '%d':\n              replacement = Number(replacements[index]);\n              break;\n\n            case '%j':\n              try {\n                replacement = JSON.stringify(replacements[index]).replace(/\"/g, '');\n              } catch (e) {}\n\n              break;\n\n            default:\n              replacement = replacements[index];\n              break;\n          }\n\n          message = message.replace(match, replacement);\n        }\n\n        return message;\n      }, message);\n    }\n\n    return format;\n\n});\n\n","define('core/logger/api',['lodash', 'core/format', 'core/promise'], function (_, format, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    format = format && format.hasOwnProperty('default') ? format['default'] : format;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * The default level\n     */\n\n    var defaultLevel = 'info';\n    var levels = {\n      fatal: 60,\n      // The service/app is going to stop or become unusable now. An operator should definitely look into this soon.\n      error: 50,\n      // Fatal for a particular request, but the service/app continues servicing other requests. An operator should look at this soon(ish).\n      warn: 40,\n      // A note on something that should probably be looked at by an operator eventually.\n      info: 30,\n      // Detail on regular operation.\n      debug: 20,\n      // Anything else, i.e. too verbose to be included in \"info\" level.\n      trace: 10 // Logging from external libraries used by your app or very detailed application logging.\n\n    };\n    /**\n     * Major version of the node-bunyan package (for compat)\n     */\n\n    var bunyanVersion = 0;\n    /**\n     * Where messages dwells\n     */\n\n    var logQueue = [];\n    /**\n     * Get the actual level as a string,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {String} the level\n     */\n\n    var getLevel = function getLevel(level) {\n      if (typeof level === 'undefined' || _.isString(level) && !_.has(levels, level)) {\n        return defaultLevel;\n      }\n\n      if (_.isNumber(level)) {\n        return _.findKey(levels, function (l) {\n          return l === level;\n        }) || defaultLevel;\n      }\n\n      return level;\n    };\n    /**\n     * Get the actual level as a number,\n     * fallback to the default level.\n     * @param {String|Number} [level] - the level\n     * @returns {Number} the level\n     */\n\n\n    var getLevelNum = function getLevelNum(level) {\n      if (_.isString(level) && _.has(levels, level)) {\n        return levels[level];\n      }\n\n      if (_.isNumber(level) && _.contains(levels, level)) {\n        return level;\n      }\n\n      return levels[defaultLevel];\n    };\n    /**\n     * Check whether the given level is above the minimum level threshold\n     * @param {String|Number} minlevel- the minimum level\n     * @param {String|Number} [level] - the level to check\n     * @returns {Boolean}\n     */\n\n\n    var checkMinLevel = function checkMinLevel(minLevel, level) {\n      return getLevelNum(level) >= getLevelNum(minLevel);\n    };\n    /**\n     * Creates a logger instance\n     *\n     * @param {String} name - each logger instance MUST have a name\n     * @param {String|Number} [minLevel] - the minimum logging level\n     * @param {Object} [fields] - fields to add to all records\n     *\n     * @returns {logger} a new logger instance\n     */\n\n\n    var loggerFactory = function loggerFactory(name, minLevel, fields) {\n      var baseRecord;\n      var logger;\n\n      if (!_.isString(name) || _.isEmpty(name)) {\n        throw new TypeError('A logger needs a name');\n      }\n\n      if (_.isPlainObject(minLevel) && typeof field === 'undefined') {\n        fields = minLevel;\n        minLevel = defaultLevel;\n      }\n\n      baseRecord = _.defaults(fields || {}, {\n        name: name,\n        pid: 1,\n        // only for compat\n        hostname: navigator.userAgent\n      });\n      /**\n       * Exposes a log method and one by log level, like logger.trace()\n       *\n       * @typedef logger\n       */\n\n      logger = {\n        /**\n         * Log messages by delegating to the provider\n         *\n         * @param {String|Number} level - the log level\n         * @param {Object} [recordFields] - fields to add to the log record\n         * @param {String|Error} message - the message to log\n         * @param {...String} [rest] - rest parameters if the message is formatted\n         * @returns {logger} chains\n         */\n        log: function log(level, recordFields, message) {\n          var record;\n          var err;\n          var rest = [];\n          var time = new Date().toISOString(); //without providers or not the level, we don't log.\n\n          if (loggerFactory.providers === false || !checkMinLevel(minLevel || defaultLevel, level)) {\n            return;\n          }\n\n          if (_.isString(recordFields) || recordFields instanceof Error) {\n            message = recordFields;\n            recordFields = {};\n            rest = [].slice.call(arguments, 2);\n          } else {\n            rest = [].slice.call(arguments, 3);\n          }\n\n          record = {\n            level: getLevel(level),\n            v: bunyanVersion,\n            time: time\n          };\n\n          if (checkMinLevel(levels.error, level) || message instanceof Error) {\n            if (message instanceof Error) {\n              err = message;\n            } else {\n              message = _.isObject(message) ? JSON.stringify(message) : message;\n              err = new Error(message);\n            }\n\n            record.msg = err.message;\n            record.err = err;\n          } else {\n            record.msg = format.apply(null, [message].concat(rest));\n          }\n\n          _.merge(record, baseRecord, recordFields);\n\n          logQueue.push(record);\n          loggerFactory.flush();\n          return this;\n        },\n\n        /**\n         * Get/set the default level of the logger\n         * @param {String|Number} [level] - set the default level\n         * @returns {String|logger} the default level as a getter or chains as a setter\n         */\n        level: function level(value) {\n          if (typeof value !== 'undefined') {\n            //update the partial function\n            minLevel = getLevelNum(value);\n            return this;\n          }\n\n          return getLevel(minLevel);\n        },\n\n        /**\n         * Fork the current logger to create a child logger :\n         * same config + child fields\n         *\n         * @param {Object} [childFields] - specialized child fields\n         * @return {logger} the child logger\n         */\n        child: function child(childFields) {\n          return loggerFactory(name, minLevel, _.defaults(childFields, baseRecord));\n        }\n      }; //augment the logger by each level\n\n      return _.reduce(levels, function reduceLogLevel(target, level, levelName) {\n        target[levelName] = _.partial(logger.log, level);\n        return target;\n      }, logger);\n    };\n    /**\n     * Exposes the levels\n     * @type {Object}\n     */\n\n\n    loggerFactory.levels = levels;\n    /**\n     * The list of providers bound to the logger.\n     * @type {Boolean|Array} false means we don't log, array even empty we keep the logs\n     */\n\n    loggerFactory.providers = false;\n    /**\n     * Load providers from AMD modules\n     * @param {Object} providerConfigs - provider's modules to load and register\n     * @returns {Promise} resolves once modules are registered\n     */\n\n    loggerFactory.load = function load(providerConfigs) {\n      var self = this;\n      var modules = [];\n      this.providers = [];\n      return new Promise(function (resolve, reject) {\n        //we can load the loggers dynamically\n        _.forEach(providerConfigs, function (providerConfig, providerName) {\n          modules.push(providerName);\n        });\n\n        require(modules, function () {\n          var loadedProviders = [].slice.call(arguments);\n\n          _.forEach(loadedProviders, function (provider, moduleKey) {\n            try {\n              self.register(provider, providerConfigs[modules[moduleKey]]);\n            } catch (err) {\n              reject(err);\n            }\n          }); //flush messages that arrived before the providers are there\n\n\n          self.flush();\n          resolve();\n        }, reject);\n      });\n    };\n    /**\n     * A logger provider provides with a way to log\n     * @typedef {Object} loggerProvider\n     * @property {Function} log - called with the message in parameter\n     * @param {Object} providerConfig - provider's config\n     * @throws TypeError\n     */\n\n\n    loggerFactory.register = function register(provider, providerConfig) {\n      if (!_.isPlainObject(provider) || !_.isFunction(provider.log)) {\n        throw new TypeError('A log provider is an object with a log method');\n      } //propogate checkMinLevel function\n\n\n      provider.checkMinLevel = checkMinLevel;\n\n      if (_.isFunction(provider.setConfig)) {\n        provider.setConfig(providerConfig);\n      }\n\n      this.providers = this.providers || [];\n      this.providers.push(provider);\n    };\n    /**\n     * Flush the messages queue into the providers\n     */\n\n\n    loggerFactory.flush = function flush() {\n      if (_.isArray(this.providers) && this.providers.length > 0) {\n        _.forEach(logQueue, function (message) {\n          //forward to the providers\n          _.forEach(loggerFactory.providers, function (provider) {\n            provider.log.call(provider, message);\n          });\n        }); //clear the queue\n\n\n        logQueue = [];\n      }\n    };\n    /**\n     * Change the default level for all loggers\n     * @param {String|Number} [level] - set the default level\n     * @returns {String} the defined level\n     */\n\n\n    loggerFactory.setDefaultLevel = function setDefaultLevel(level) {\n      defaultLevel = getLevel(level);\n      return defaultLevel;\n    };\n\n    return loggerFactory;\n\n});\n\n","define('core/logger',['lodash', 'module', 'core/logger/api'], function (_, module, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    module = module && module.hasOwnProperty('default') ? module['default'] : module;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * The default configuration if nothing\n     * is found on the module config\n     */\n\n    var defaultConfig = {\n      level: loggerFactory.levels.warn,\n      loggers: {\n        'core/logger/console': {\n          level: 'warn'\n        }\n      }\n    }; //the logger providers are configured through the AMD module config\n\n    var config = _.defaults(module.config() || {}, defaultConfig);\n\n    var logger = loggerFactory('core/logger');\n    loggerFactory.setDefaultLevel(config.level);\n    loggerFactory.load(config.loggers);\n    /**\n     * Catch uncaught errors\n     * @param msg - error message\n     * @param url - current url\n     * @param line - line number\n     * @param col - column number\n     * @param error - error object (not all browsers support).\n     * @return {boolean}\n     */\n\n    window.onerror = function (msg, url, line, col, error) {\n      logger.error(\"Caught[via window.onerror]: '\" + msg + \"' from \" + url + ':' + line + ':' + col);\n    };\n    /**\n     * Expose explicitely an direct way to activate log levels\n     * @param {String|Number} level - the new log level\n     * @returns {String} the defined level\n     */\n\n\n    window.setTaoLogLevel = function setTaoLogLevel(level) {\n      return loggerFactory.setDefaultLevel(level);\n    }; //exposes the API\n\n    return loggerFactory;\n\n});\n\n","define('core/eventifier',['lodash', 'core/promise', 'lib/uuid', 'core/logger'], function (_, Promise, uuid, loggerFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    uuid = uuid && uuid.hasOwnProperty('default') ? uuid['default'] : uuid;\n    loggerFactory = loggerFactory && loggerFactory.hasOwnProperty('default') ? loggerFactory['default'] : loggerFactory;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA;\n     *\n     */\n    /**\n     * All events have a namespace, this one is the default\n     */\n\n    var defaultNs = '@';\n    /**\n     * Namespace that targets all event\n     */\n\n    var globalNs = '*';\n    /**\n     * Create a logger\n     */\n\n    var eventifierLogger = loggerFactory('core/eventifier');\n    /**\n     * Get the list of events from an eventName string (ie, separated by spaces)\n     * @param {String} eventNames - the event strings\n     * @returns {String[]} the event list (no empty, no duplicate)\n     */\n\n    function getEventNames(eventNames) {\n      if (!_.isString(eventNames) || _.isEmpty(eventNames)) {\n        return [];\n      }\n\n      return _(eventNames.split(/\\s/g)).compact().uniq().value();\n    }\n    /**\n     * Get the name part of an event name: the 'foo' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the name part\n     */\n\n\n    function getName(eventName) {\n      if (eventName.indexOf('.') > -1) {\n        return eventName.substr(0, eventName.indexOf('.'));\n      }\n\n      return eventName;\n    }\n    /**\n     * Get the namespace part of an event name: the 'bar' of 'foo.bar'\n     * @param {String} eventName - the name of the event\n     * @returns {String} the namespace, that defaults to defaultNs\n     */\n\n\n    function getNamespace(eventName) {\n      if (eventName.indexOf('.') > -1) {\n        return eventName.substr(eventName.indexOf('.') + 1);\n      }\n\n      return defaultNs;\n    }\n    /**\n     * Creates a new EventHandler object structure\n     * @returns {Object} the handler structure\n     */\n\n\n    function getHandlerObject() {\n      return {\n        before: [],\n        between: [],\n        after: []\n      };\n    }\n    /**\n     * Makes the target an event emitter by delegating calls to the event API.\n     * @param {Object} [target] - the target object, a new plain object is created when omited.\n     * @returns {Object} the target for conveniance\n     */\n\n\n    function eventifier(target) {\n      var targetName;\n      var logger;\n      var stoppedEvents; //it stores all the handlers under ns/name/[handlers]\n\n      var eventHandlers = {};\n      /**\n       * Get the handlers for an event type\n       * @param {String} eventName - the event name, namespace included\n       * @param {String} [type='between'] - the type of event in before, between and after\n       * @returns {Function[]} the handlers\n       */\n\n      var getHandlers = function getHandlers(eventName, type) {\n        var name = getName(eventName);\n        var ns = getNamespace(eventName);\n        type = type || 'between';\n        eventHandlers[ns] = eventHandlers[ns] || {};\n        eventHandlers[ns][name] = eventHandlers[ns][name] || getHandlerObject();\n        return eventHandlers[ns][name][type];\n      };\n      /**\n       * The API itself is just a placeholder, all methods will be delegated to a target.\n       */\n\n\n      var eventApi = {\n        /**\n         * Attach an handler to an event.\n         * Calling `on` with the same eventName multiple times add callbacks: they\n         * will all be executed.\n         *\n         * @example target.on('foo', function(bar){ console.log('Cool ' + bar) } );\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        on: function on(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName).push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * Remove ALL handlers for an event.\n         *\n         * @example remove ALL\n         * target.off('foo');\n         *\n         * @example remove targeted namespace\n         * target.off('foo.bar');\n         *\n         * @example remove all handlers by namespace\n         * target.off('.bar');\n         *\n         * @example remove all namespaces, keep non namespace\n         * target.off('.*');\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @returns {Object} the target object\n         */\n        off: function off(eventNames) {\n          _.forEach(getEventNames(eventNames), function (eventName) {\n            var name = getName(eventName);\n            var ns = getNamespace(eventName);\n            var offNamespaces;\n\n            if (ns && !name) {\n              if (ns === globalNs) {\n                offNamespaces = {};\n                offNamespaces[defaultNs] = eventHandlers[defaultNs];\n                eventHandlers = offNamespaces;\n              } else {\n                //off the complete namespace\n                eventHandlers[ns] = {};\n              }\n            } else {\n              _.forEach(eventHandlers, function (nsHandlers, namespace) {\n                if (nsHandlers[name] && (ns === defaultNs || ns === namespace)) {\n                  nsHandlers[name] = getHandlerObject();\n                }\n              });\n            }\n          });\n\n          return this;\n        },\n\n        /**\n         * Remove ALL registered handlers\n         *\n         * @example remove ALL\n         * target.removeAllListeners();\n         *\n         * @this the target\n         * @returns {Object} the target object\n         */\n        removeAllListeners: function removeAllListeners() {\n          // full erase\n          eventHandlers = {};\n          return this;\n        },\n\n        /**\n         * Trigger an event.\n         *\n         * @example target.trigger('foo', 'Awesome');\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event to trigger, or multiple events separated by a space\n         * @returns {Object} the target object\n         */\n        trigger: function trigger(eventNames) {\n          var self = this;\n          var args = [].slice.call(arguments, 1);\n          stoppedEvents = {};\n\n          _.forEach(getEventNames(eventNames), function (eventName) {\n            var ns = getNamespace(eventName);\n            var name = getName(eventName); //check which ns needs to be executed and then merge the handlers to be executed\n\n            var mergedHandlers = _(eventHandlers).filter(function (nsHandlers, namespace) {\n              return nsHandlers[name] && (ns === defaultNs || ns === namespace || namespace === globalNs);\n            }).reduce(function (acc, nsHandlers) {\n              acc.before = acc.before.concat(nsHandlers[name].before);\n              acc.between = acc.between.concat(nsHandlers[name].between);\n              acc.after = acc.after.concat(nsHandlers[name].after);\n              return acc;\n            }, getHandlerObject());\n\n            logger.trace({\n              event: eventName,\n              args: args\n            }, 'trigger %s', eventName);\n\n            if (mergedHandlers) {\n              triggerAllHandlers(mergedHandlers, name, ns);\n            }\n          });\n\n          function triggerAllHandlers(allHandlers, name, ns) {\n            var event = {\n              name: name,\n              namespace: ns\n            };\n\n            if (allHandlers.before.length) {\n              triggerBefore(allHandlers.before, event).then(function () {\n                triggerBetween(allHandlers, event);\n              }).catch(function (err) {\n                logHandlerStop('before', event, err);\n              });\n            } else {\n              triggerBetween(allHandlers, event);\n            }\n          }\n\n          function triggerBefore(handlers, event) {\n            var pHandlers,\n                beforeArgs = args.slice(); // .before() handlers will get a special 'event' object as their first parameter\n\n            beforeArgs.unshift(event);\n            pHandlers = handlers.map(function (handler) {\n              // .before() handlers use to return false to cancel the call stack\n              // to maintain backward compatibility, we treat this case as a rejected Promise\n              var value = shouldStop(event.name) ? false : handler.apply(self, beforeArgs);\n              return value === false ? Promise.reject() : value;\n            });\n            return Promise.all(pHandlers);\n          }\n\n          function triggerBetween(allHandlers, event) {\n            if (shouldStop(event.name)) {\n              logHandlerStop('before', event); // .stopEvent() has been called in an async .before() callback\n            } else {\n              // trigger the event handlers\n              triggerHandlers(allHandlers.between, event).then(function () {\n                triggerAfter(allHandlers.after, event);\n              }).catch(function (err) {\n                logHandlerStop('on', event, err);\n              });\n            }\n          }\n\n          function triggerAfter(handlers, event) {\n            if (shouldStop(event.name)) {\n              logHandlerStop('on', event); // .stopEvent() has been called in an async .on() callback\n            } else {\n              triggerHandlers(handlers, event).then(function () {\n                if (shouldStop(event.name)) {\n                  logHandlerStop('after', event); // .stopEvent() has been called in an async .after() callback\n                }\n              }).catch(function (err) {\n                logHandlerStop('after', event, err);\n              });\n            }\n          }\n\n          function triggerHandlers(handlers, event) {\n            var pHandlers;\n            pHandlers = handlers.map(function (handler) {\n              return shouldStop(event.name) ? Promise.reject() : handler.apply(self, args);\n            });\n            return Promise.all(pHandlers);\n          }\n\n          function logHandlerStop(stoppedIn, event, err) {\n            if (err instanceof Error) {\n              logger.error(err);\n            }\n\n            logger.trace({\n              err: err,\n              event: event.name,\n              stoppedIn: stoppedIn\n            }, event.name + ' handlers stopped');\n          }\n\n          function shouldStop(name) {\n            return stoppedEvents[name];\n          }\n\n          return this;\n        },\n\n        /**\n         * Register a callback that is executed before the given event name\n         * Provides an opportunity to cancel the execution of the event if one of the returned value is false\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        before: function before(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName, 'before').push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * Register a callback that is executed after the given event name\n         * The handlers will all be executed, no matter what\n         *\n         * @this the target\n         * @param {String} eventNames - the name of the event, or multiple events separated by a space\n         * @param {Function} handler - the callback to run once the event is triggered\n         * @returns {Object} the target object\n         */\n        after: function after(eventNames, handler) {\n          if (_.isFunction(handler)) {\n            _.forEach(getEventNames(eventNames), function (eventName) {\n              getHandlers(eventName, 'after').push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * If triggered into an sync handler, this immediately cancels the execution of all following handlers\n         * regardless of their category\n         * If triggered asynchronously, this will only cancel the next category of handlers:\n         * - .on() and .after() if triggered during a .before() handler\n         * - .after() if triggered during a .on() handler\n         * - nothing if triggered during a .after() handler\n         * In an async context, you can also reject a Promise with the same results\n         *\n         * @param {string} name - of the event to stop\n         */\n        stopEvent: function stopEvent(name) {\n          if (_.isString(name) && !_.isEmpty(name.trim())) {\n            stoppedEvents[name.trim()] = true;\n          }\n        },\n\n        /**\n         * Spread events to another eventifier object.\n         * So when an event is triggered on the current target,\n         * it get's triggered on the destination too.\n         *\n         * Be careful, the forward will be triggered only if the event reach the `on` steps\n         * (it can be canceled by a before).\n         *\n         * @param {eventifier} destination - the destination emitter\n         * @param {String|String[]} eventNames - the list of events to forward\n         * @returns {Object} target - chains\n         */\n        spread: function spread(destination, eventNames) {\n          var self = this;\n\n          if (destination && _.isFunction(destination.trigger)) {\n            if (_.isString(eventNames)) {\n              eventNames = getEventNames(eventNames);\n            }\n\n            _.forEach(eventNames, function (eventName) {\n              self.on(eventName, function forwardEventTo() {\n                var args = [eventName].concat([].slice.call(arguments));\n                destination.trigger.apply(destination, args);\n              });\n            });\n          }\n\n          return this;\n        }\n      };\n      target = target || {}; //try to get something that looks like a name, an id or generate one only for logging purposes\n\n      targetName = target.name || target.id || target.serial || uuid(6); //create a child logger per eventifier\n\n      logger = eventifierLogger.child({\n        target: targetName\n      });\n\n      _(eventApi).functions().forEach(function (method) {\n        if (_.isFunction(target[method])) {\n          eventifierLogger.warn('The target object has already a method named ' + method, target);\n        }\n\n        target[method] = function delegate() {\n          var args = [].slice.call(arguments);\n          return eventApi[method].apply(target, args);\n        };\n      });\n\n      return target;\n    }\n\n    return eventifier;\n\n});\n\n","define('util/namespace',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * RegExp that split strings separated by spaces\n     * @type {RegExp}\n     */\n\n    var reSplit = /\\s/g;\n    /**\n     * The namespace separator\n     * @type {String}\n     */\n\n    var namespaceSep = '.';\n    /**\n     * The default namespace\n     */\n\n    var defaultNamespace = '@';\n    /**\n     * The namespace helper\n     * @typedef {namespaceHelper}\n     * @type {namespaceHelper}\n     */\n\n    var namespaceHelper = {\n      /**\n       * Splits a string into single names\n       * @param {String} names - the string containing the names separated by spaces\n       * @param {Boolean} [normalize] - lower case the string to normalize all the names\n       * @returns {String[]} the list of names (no empty, no duplicate)\n       */\n      split: function split(names, normalize) {\n        if (!_.isString(names) || _.isEmpty(names)) {\n          return [];\n        }\n\n        if (normalize) {\n          names = names.toLowerCase();\n        }\n\n        return _(names.trim().split(reSplit)).compact().uniq().value();\n      },\n\n      /**\n       * Get the name without the namespace: the 'foo' of 'foo.bar'\n       * @param {String} namespaced - the namespaced name\n       * @returns {String} the name part\n       */\n      getName: function getName(namespaced) {\n        if (!_.isString(namespaced) || _.isEmpty(namespaced)) {\n          return '';\n        }\n\n        if (namespaced.indexOf(namespaceSep) > -1) {\n          return namespaced.substr(0, namespaced.indexOf(namespaceSep));\n        }\n\n        return namespaced;\n      },\n\n      /**\n       * Get the namespace part of a namespaced name: the 'bar' of 'foo.bar'\n       * @param {String} namespaced - the namespaced name\n       * @param {String} [defaultNs] - the default namespace\n       * @returns {String} the namespace, that defaults to defaultNs\n       */\n      getNamespace: function getNamespace(namespaced, defaultNs) {\n        if (!_.isString(namespaced) || _.isEmpty(namespaced)) {\n          return '';\n        }\n\n        if (namespaced.indexOf(namespaceSep) > -1) {\n          return namespaced.substr(namespaced.indexOf(namespaceSep) + 1);\n        }\n\n        return defaultNs || defaultNamespace;\n      },\n\n      /**\n       * Add a namespace to each name\n       * @param {Array|String} names - The list of names to namespace\n       * @param {String} [namespace] - The namespace to set\n       * @param {Boolean} [normalize] - lower case the string to normalize all the names\n       * @returns {String} - The list of namespaced names\n       */\n      namespaceAll: function namespaceAll(names, namespace, normalize) {\n        var suffix;\n\n        if (!_.isArray(names)) {\n          names = namespaceHelper.split(names, normalize);\n        }\n\n        if (normalize) {\n          namespace = namespace.toLowerCase();\n        }\n\n        suffix = namespace ? namespaceSep + namespace : '';\n        return _(names).map(function (sh) {\n          if (sh.indexOf(namespaceSep) < 0) {\n            return sh + suffix;\n          }\n\n          return sh;\n        }).compact().uniq().value().join(' ');\n      }\n    };\n\n    return namespaceHelper;\n\n});\n\n","define('util/shortcut/registry',['jquery', 'lodash', 'util/namespace'], function ($, _, namespaceHelper) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    namespaceHelper = namespaceHelper && namespaceHelper.hasOwnProperty('default') ? namespaceHelper['default'] : namespaceHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * All shortcuts have a namespace, this one is the default\n     */\n\n    var defaultNs = '*';\n    /**\n     * Translation map from name of modifiers to event property\n     * @type {Object}\n     */\n\n    var modifiers = {\n      ctrl: 'ctrlKey',\n      alt: 'altKey',\n      option: 'altKey',\n      shift: 'shiftKey',\n      meta: 'metaKey',\n      cmd: 'metaKey',\n      win: 'metaKey'\n    };\n    /**\n     * Translation map from normalized name of keys\n     * @type {Object}\n     */\n\n    var translateKeys = {\n      escape: 'esc',\n      arrowdown: 'down',\n      arrowleft: 'left',\n      arrowright: 'right',\n      arrowup: 'up'\n    };\n    /**\n     * List of special keys with their codes\n     * @type {Object}\n     */\n\n    var specialKeys = {\n      8: 'backspace',\n      9: 'tab',\n      13: 'enter',\n      19: 'pause',\n      20: 'capslock',\n      27: 'esc',\n      32: 'space',\n      33: 'pageup',\n      34: 'pagedown',\n      35: 'end',\n      36: 'home',\n      37: 'left',\n      38: 'up',\n      39: 'right',\n      40: 'down',\n      45: 'insert',\n      46: 'delete',\n      91: 'meta',\n      112: 'f1',\n      113: 'f2',\n      114: 'f3',\n      115: 'f4',\n      116: 'f5',\n      117: 'f6',\n      118: 'f7',\n      119: 'f8',\n      120: 'f9',\n      121: 'f10',\n      122: 'f11',\n      123: 'f12',\n      145: 'scrolllock',\n      144: 'numlock'\n    };\n    /**\n     * Registers an event handler on a particular element\n     * @param {Element|Window} target\n     * @param {String} eventName\n     * @param {Function} listener\n     */\n\n    function registerEvent(target, eventName, listener) {\n      if (target.addEventListener) {\n        target.addEventListener(eventName, listener, false);\n      } else if (target.attachEvent) {\n        target.attachEvent('on' + eventName, listener);\n      } else {\n        target['on' + eventName] = listener;\n      }\n    }\n    /**\n     * Removes an event handler from a particular element\n     * @param {Element|Window} target\n     * @param {String} eventName\n     * @param {Function} listener\n     */\n\n\n    function unregisterEvent(target, eventName, listener) {\n      if (target.removeEventListener) {\n        target.removeEventListener(eventName, listener, false);\n      } else if (target.detachEvent) {\n        target.detachEvent('on' + eventName, listener);\n      } else {\n        target['on' + eventName] = null;\n      }\n    }\n    /**\n     * Gets the actual input key\n     * @param {KeyboardEvent} event\n     * @returns {String}\n     */\n\n\n    function getActualKey(event) {\n      // Get the code of the key, used to identify special keys on browser that does not support the full KeyboardEvent API\n      var code = event.which || event.keyCode;\n      var character = code >= 32 ? String.fromCharCode(code).toLowerCase() : ''; // Get the name of the key on browser that have a good support of the KeyboardEvent API\n\n      var key = event.key && event.key.toLowerCase(); // If the browser supports the KeyboardEvent API it may provide the result of the shortcut instead of the actual key.\n      // For instance on Mac if you input \"Alt+V\" the key property will contain \"◊\"\n\n      var keyName = event.code && event.code.toLowerCase();\n\n      if (keyName) {\n        if (keyName.indexOf('key') === 0) {\n          // fix the result key only if the actual key name is not alpha (diff due to local layout)\n          if (key < 'a' || key > 'z') {\n            if (character >= 'a' && character <= 'z') {\n              key = character;\n            }\n          }\n        } else if (keyName.indexOf('digit') === 0) {\n          key = keyName.substr(5);\n        }\n      } //return special key map first, if not fallback to one of the other key identification methods\n\n\n      return specialKeys[code] || key || character;\n    }\n    /**\n     * Gets the pressed buttons\n     * @param {MouseEvent} event\n     * @return {Object}\n     */\n\n\n    function getActualButton(event) {\n      var buttons = {\n        clickLeft: false,\n        clickRight: false,\n        clickMiddle: false,\n        clickBack: false,\n        clickForward: false\n      };\n\n      if (event.buttons) {\n        buttons.clickLeft = !!(event.buttons & 1);\n        buttons.clickRight = !!(event.buttons & 2);\n        buttons.clickMiddle = !!(event.buttons & 4);\n        buttons.clickBack = !!(event.buttons & 8);\n        buttons.clickForward = !!(event.buttons & 16);\n      } else {\n        switch (event.button) {\n          case 0:\n            buttons.clickLeft = true;\n            break;\n\n          case 1:\n            buttons.clickMiddle = true;\n            break;\n\n          case 2:\n            buttons.clickRight = true;\n            break;\n\n          case 3:\n            buttons.clickBack = true;\n            break;\n\n          case 4:\n            buttons.clickForward = true;\n            break;\n        }\n      }\n\n      return buttons;\n    }\n    /**\n     * Gets the scroll direction\n     * @param {WheelEvent} event\n     * @return {Object}\n     */\n\n\n    function getActualScroll(event) {\n      return {\n        scrollUp: event.deltaY < 0,\n        scrollDown: event.deltaY > 0\n      };\n    }\n    /**\n     * Gets a normalized shortcut command from a shortcut descriptor\n     * @param {Object} descriptor\n     * @returns {String}\n     */\n\n\n    function normalizeCommand(descriptor) {\n      var key = translateKeys[descriptor.key] || descriptor.key;\n      var parts = [];\n\n      if (descriptor.ctrlKey) {\n        parts.push('control');\n      }\n\n      if (descriptor.altKey) {\n        parts.push('alt');\n      }\n\n      if (descriptor.shiftKey) {\n        parts.push('shift');\n      }\n\n      if (descriptor.metaKey) {\n        parts.push('meta');\n      }\n\n      if (descriptor.scrollDown) {\n        parts.push('scrollDown');\n      }\n\n      if (descriptor.scrollUp) {\n        parts.push('scrollUp');\n      }\n\n      if (descriptor.clickLeft) {\n        parts.push('clickLeft');\n      }\n\n      if (descriptor.clickRight) {\n        parts.push('clickRight');\n      }\n\n      if (descriptor.clickMiddle) {\n        parts.push('clickMiddle');\n      }\n\n      if (descriptor.clickBack) {\n        parts.push('clickBack');\n      }\n\n      if (descriptor.clickForward) {\n        parts.push('clickForward');\n      }\n\n      if (key && parts.indexOf(key) < 0) {\n        parts.push(key);\n      }\n\n      return parts.join('+');\n    }\n    /**\n     * Parses a shortcut command and return a descriptor\n     * @param {String} shortcut\n     * @returns {Object}\n     */\n\n\n    function parseCommand(shortcut) {\n      var parts = namespaceHelper.getName(shortcut).split('+');\n      var descriptor = {\n        keyboardInvolved: false,\n        mouseClickInvolved: false,\n        mouseWheelInvolved: false,\n        ctrlKey: false,\n        altKey: false,\n        shiftKey: false,\n        metaKey: false,\n        key: null,\n        scrollUp: null,\n        scrollDown: null,\n        clickLeft: null,\n        clickRight: null,\n        clickMiddle: null,\n        clickBack: null,\n        clickForward: null\n      };\n\n      _.forEach(parts, function (part) {\n        if (modifiers[part]) {\n          descriptor[modifiers[part]] = true;\n        } else if (part.indexOf('mouse') >= 0) {\n          if (descriptor.keyboardInvolved) {\n            throw new Error('A shortcut cannot involve both mouse and regular keys!');\n          }\n\n          if (part.indexOf('scroll') >= 0) {\n            descriptor.mouseWheelInvolved = true;\n            descriptor.scrollUp = part.indexOf('up') >= 0;\n            descriptor.scrollDown = part.indexOf('down') >= 0;\n          }\n\n          if (part.indexOf('click') >= 0) {\n            descriptor.mouseClickInvolved = true;\n            descriptor.clickLeft = part.indexOf('left') >= 0;\n            descriptor.clickRight = part.indexOf('right') >= 0;\n            descriptor.clickMiddle = part.indexOf('middle') >= 0;\n            descriptor.clickBack = part.indexOf('back') >= 0;\n            descriptor.clickForward = part.indexOf('forward') >= 0;\n          }\n        } else {\n          if (descriptor.mouseClickInvolved || descriptor.mouseWheelInvolved) {\n            throw new Error('A shortcut cannot involve both mouse and regular keys!');\n          }\n\n          descriptor.keyboardInvolved = true;\n          descriptor.key = part;\n        }\n      });\n\n      return descriptor;\n    }\n    /**\n     * Builds shortcuts registry that manages shortcuts attached to a DOM element\n     *\n     * @param {Element|Window} root - The root element from which listen to events\n     * @param {Object} [defaultOptions] - Default options applied to each shortcut\n     * @param {Boolean} [defaultOptions.propagate] - Allow the event to be propagated after caught\n     * @param {Boolean} [defaultOptions.prevent] - Prevent the default behavior of the shortcut\n     * @param {Boolean} [defaultOptions.avoidInput] - Prevent the shortcut to be caught inside an input field\n     * @param {Boolean} [defaultOptions.allowIn] - Always allows the shortcut if the event source is in the scope of\n     * the provided CSS class, even if the shortcut is triggered from an input field.\n     * @returns {shortcut}\n     */\n\n\n    function shortcutFactory(root, defaultOptions) {\n      var keyboardIsRegistered = false;\n      var mouseClickIsRegistered = false;\n      var mouseWheelIsRegistered = false;\n      var keyboardCount = 0;\n      var mouseClickCount = 0;\n      var mouseWheelCount = 0;\n      var shortcuts = {};\n      var handlers = {};\n      var states = {};\n      /**\n       * Gets the handlers for a shortcut\n       * @param {String} command - the shortcut command\n       * @param {String} namespace - the shortcut namespace\n       * @returns {Function[]} the handlers\n       */\n\n      function getHandlers(command, namespace) {\n        handlers[namespace] = handlers[namespace] || {};\n        handlers[namespace][command] = handlers[namespace][command] || [];\n        return handlers[namespace][command];\n      }\n      /**\n       * Gets all the handlers related to a particular command, not regarding the namespace\n       * @param {String} command - the shortcut command\n       * @returns {Function[]} the handlers\n       */\n\n\n      function getCommandHandlers(command) {\n        return _.reduce(handlers, function (acc, nsHandlers) {\n          if (nsHandlers[command]) {\n            acc = acc.concat(nsHandlers[command]);\n          }\n\n          return acc;\n        }, []);\n      }\n      /**\n       * Clears the handles attached to a shortcut\n       * @param {String} command - the shortcut command\n       * @param {String} namespace - the shortcut namespace\n       */\n\n\n      function clearHandlers(command, namespace) {\n        if (namespace && !command) {\n          handlers[namespace] = {};\n        } else {\n          _.forEach(handlers, function (nsHandlers, ns) {\n            if (nsHandlers[command] && (namespace === defaultNs || namespace === ns)) {\n              nsHandlers[command] = [];\n            }\n          });\n        }\n      }\n      /**\n       * Assign options to a shortcut\n       * @param {Object} descriptor\n       * @param {Object} options\n       */\n\n\n      function setOptions(descriptor, options) {\n        descriptor.options = _.defaults(_.merge(descriptor.options || {}, options), defaultOptions);\n      }\n      /**\n       * Registers a listener for the keyboard shortcuts\n       */\n\n\n      function registerKeyboard() {\n        if (!keyboardIsRegistered) {\n          registerEvent(root, 'keydown', onKeyboard);\n          keyboardIsRegistered = true;\n        }\n\n        keyboardCount++;\n      }\n      /**\n       * Removes the listener of the keyboard shortcuts\n       */\n\n\n      function unregisterKeyboard() {\n        keyboardCount--;\n\n        if (keyboardCount <= 0) {\n          keyboardCount = 0;\n\n          if (keyboardIsRegistered) {\n            unregisterEvent(root, 'keydown', onKeyboard);\n            keyboardIsRegistered = false;\n          }\n        }\n      }\n      /**\n       * Registers a listener for the mouse click shortcuts\n       */\n\n\n      function registerMouseClick() {\n        if (!mouseClickIsRegistered) {\n          registerEvent(root, 'click', onMouseClick);\n          mouseClickIsRegistered = true;\n        }\n\n        mouseClickCount++;\n      }\n      /**\n       * Removes the listener of the mouse click shortcuts\n       */\n\n\n      function unregisterMouseClick() {\n        mouseClickCount--;\n\n        if (mouseClickCount <= 0) {\n          mouseClickCount = 0;\n\n          if (mouseClickIsRegistered) {\n            unregisterEvent(root, 'click', onMouseClick);\n            mouseClickIsRegistered = false;\n          }\n        }\n      }\n      /**\n       * Registers a listener for the mouse wheel shortcuts\n       */\n\n\n      function registerMouseWheel() {\n        if (!mouseWheelIsRegistered) {\n          registerEvent(root, 'wheel', onMouseWheel);\n          mouseWheelIsRegistered = true;\n        }\n\n        mouseWheelCount++;\n      }\n      /**\n       * Removes the listener of the mouse wheel shortcuts\n       */\n\n\n      function unregisterMouseWheel() {\n        mouseWheelCount--;\n\n        if (mouseWheelCount <= 0) {\n          mouseWheelCount = 0;\n\n          if (mouseWheelIsRegistered) {\n            unregisterEvent(root, 'wheel', onMouseWheel);\n            mouseWheelIsRegistered = false;\n          }\n        }\n      }\n      /**\n       * Registers a command shortcut and activates the right event listener\n       * @param {String} command\n       * @param {Object} descriptor\n       */\n\n\n      function registerCommand(command, descriptor) {\n        shortcuts[command] = descriptor;\n\n        if (descriptor.keyboardInvolved) {\n          registerKeyboard();\n        }\n\n        if (descriptor.mouseClickInvolved) {\n          registerMouseClick();\n        }\n\n        if (descriptor.mouseWheelInvolved) {\n          registerMouseWheel();\n        }\n      }\n      /**\n       * Unregisters a command shortcut and removes the related event listener if not used anymore\n       * @param {String} command\n       */\n\n\n      function unregisterCommand(command) {\n        var descriptor = shortcuts[command];\n        shortcuts[command] = null;\n\n        if (descriptor) {\n          if (descriptor.keyboardInvolved) {\n            unregisterKeyboard();\n          }\n\n          if (descriptor.mouseClickInvolved) {\n            unregisterMouseClick();\n          }\n\n          if (descriptor.mouseWheelInvolved) {\n            unregisterMouseWheel();\n          }\n        }\n      }\n      /**\n       * Reacts to a keyboard event\n       * @param {KeyboardEvent} event\n       */\n\n\n      function onKeyboard(event) {\n        processShortcut(event, {\n          keyboardInvolved: true,\n          ctrlKey: event.ctrlKey,\n          altKey: event.altKey,\n          shiftKey: event.shiftKey,\n          metaKey: event.metaKey,\n          key: getActualKey(event)\n        });\n      }\n      /**\n       * Reacts to a mouse click event\n       * @param {MouseEvent} event\n       */\n\n\n      function onMouseClick(event) {\n        processShortcut(event, _.merge({\n          mouseClickInvolved: true,\n          ctrlKey: event.ctrlKey,\n          altKey: event.altKey,\n          shiftKey: event.shiftKey,\n          metaKey: event.metaKey\n        }, getActualButton(event)));\n      }\n      /**\n       * Reacts to a mouse wheel event\n       * @param {WheelEvent} event\n       */\n\n\n      function onMouseWheel(event) {\n        processShortcut(event, _.merge({\n          mouseClickInvolved: true,\n          ctrlKey: event.ctrlKey,\n          altKey: event.altKey,\n          shiftKey: event.shiftKey,\n          metaKey: event.metaKey\n        }, getActualScroll(event)));\n      }\n      /**\n       * Process a shortcut based on its descriptor\n       * @param {Event} event\n       * @param {Object} descriptor\n       */\n\n\n      function processShortcut(event, descriptor) {\n        var command = normalizeCommand(descriptor);\n        var shortcut = shortcuts[command];\n        var shortcutHandlers;\n        var $target;\n\n        if (shortcut && !states.disabled) {\n          if (shortcut.options.avoidInput === true) {\n            $target = $(event.target);\n\n            if ($target.closest('[type=\"text\"],textarea').length) {\n              if (!shortcut.options.allowIn || !$target.closest(shortcut.options.allowIn).length) {\n                return;\n              }\n            }\n          }\n\n          if (shortcut.options.propagate === false) {\n            event.stopPropagation();\n          }\n\n          if (shortcut.options.prevent === true) {\n            event.preventDefault();\n          }\n\n          shortcutHandlers = getCommandHandlers(command);\n\n          if (shortcutHandlers) {\n            _.forEach(shortcutHandlers, function (handler) {\n              handler(event, command);\n            });\n          }\n        }\n      }\n\n      if (root.jquery) {\n        root = root.get(0);\n      }\n      /**\n       * Defines the registry that manages the shortcuts attached to the provided DOM root\n       * @typedef {shortcut}\n       */\n\n\n      return {\n        /**\n         * Sets options for a particular shortcut.\n         * If the shortcut does not already exists, create it\n         * @param {String} shortcut\n         * @param {Object} [options]\n         * @param {Boolean} [options.propagate] - Allow the event to be propagated after caught\n         * @param {Boolean} [options.prevent] - Prevent the default behavior of the shortcut\n         * @param {Boolean} [options.avoidInput] - Prevent the shortcut to be caught inside an input field\n         * @param {Boolean} [options.allowIn] - Always allows the shortcut if the event source is in the scope of\n         * the provided CSS class, even if the shortcut is triggered from an input field.\n         * @returns {shortcut} this\n         */\n        set: function set(shortcut, options) {\n          _.forEach(namespaceHelper.split(shortcut, true), function (normalized) {\n            var descriptor = parseCommand(normalized);\n            var command = normalizeCommand(descriptor);\n            setOptions(descriptor, options);\n            registerCommand(command, descriptor);\n          });\n\n          return this;\n        },\n\n        /**\n         * Registers a new shortcut\n         * @param {String} shortcut\n         * @param {Function} handler\n         * @param {Object} [options]\n         * @param {Boolean} [options.propagate] - Allow the event to be propagated after caught\n         * @param {Boolean} [options.prevent] - Prevent the default behavior of the shortcut\n         * @param {Boolean} [options.avoidInput] - Prevent the shortcut to be caught inside an input field\n         * @param {Boolean} [options.allowIn] - Always allows the shortcut if the event source is in the scope of\n         * the provided CSS class, even if the shortcut is triggered from an input field.\n         * @returns {shortcut} this\n         */\n        add: function add(shortcut, handler, options) {\n          if (_.isFunction(handler)) {\n            _.forEach(namespaceHelper.split(shortcut, true), function (normalized) {\n              var namespace = namespaceHelper.getNamespace(normalized, defaultNs);\n              var descriptor = parseCommand(normalized);\n              var command = normalizeCommand(descriptor);\n              setOptions(descriptor, options);\n              registerCommand(command, descriptor);\n              getHandlers(command, namespace).push(handler);\n            });\n          }\n\n          return this;\n        },\n\n        /**\n         * Removes a shortcut\n         * @param {String} shortcut\n         * @returns {shortcut} this\n         */\n        remove: function remove(shortcut) {\n          _.forEach(namespaceHelper.split(shortcut, true), function (normalized) {\n            var namespace = namespaceHelper.getNamespace(normalized, defaultNs);\n            var descriptor = parseCommand(normalized);\n            var command = normalizeCommand(descriptor);\n            clearHandlers(command, namespace);\n\n            if (!getCommandHandlers(command).length) {\n              unregisterCommand(command);\n            }\n          });\n\n          return this;\n        },\n\n        /**\n         * Checks if a particular shortcut is already registered\n         * @param {String} shortcut\n         * @returns {Boolean}\n         */\n        exists: function exists(shortcut) {\n          var normalized = String(shortcut).trim().toLowerCase();\n          var namespace = namespaceHelper.getNamespace(normalized, defaultNs);\n          var descriptor = parseCommand(normalized);\n          var command = normalizeCommand(descriptor);\n          var shortcutExists = false;\n\n          if (shortcuts[command]) {\n            shortcutExists = namespace === defaultNs || !!getHandlers(command, namespace).length;\n          } else if (!command) {\n            shortcutExists = !_.isEmpty(handlers[namespace]);\n          }\n\n          return shortcutExists;\n        },\n\n        /**\n         * Removes all registered shortcuts\n         * @returns {shortcut} this\n         */\n        clear: function clear() {\n          shortcuts = {};\n          handlers = {};\n          keyboardCount = 0;\n          mouseClickCount = 0;\n          mouseWheelCount = 0;\n          unregisterKeyboard();\n          unregisterMouseClick();\n          unregisterMouseWheel();\n          return this;\n        },\n\n        /**\n         * Checks a particular state\n         * @param {String} name\n         * @returns {Boolean}\n         */\n        getState: function getState(name) {\n          return !!states[name];\n        },\n\n        /**\n         * Sets a particular state\n         * @param {String} name\n         * @param {Boolean} state\n         * @returns {shortcut}\n         */\n        setState: function setState(name, state) {\n          states[name] = !!state;\n          return this;\n        },\n\n        /**\n         * Enables the shortcuts to be listened\n         * @returns {shortcut}\n         */\n        enable: function enable() {\n          this.setState('disabled', false);\n          return this;\n        },\n\n        /**\n         * Prevents the shortcuts to be listened\n         * @returns {shortcut}\n         */\n        disable: function disable() {\n          this.setState('disabled', true);\n          return this;\n        }\n      };\n    }\n\n    return shortcutFactory;\n\n});\n\n","define('util/shortcut',['util/shortcut/registry'], function (shortcutRegistry) { 'use strict';\n\n    shortcutRegistry = shortcutRegistry && shortcutRegistry.hasOwnProperty('default') ? shortcutRegistry['default'] : shortcutRegistry;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Default options applied to each shortcut\n     * @type {Object}\n     */\n\n    var defaultOptions = {\n      propagate: false,\n      prevent: true\n    };\n    /**\n     * Shortcuts registry that manages shortcuts attached to the browser's window\n     * @returns {shortcut}\n     */\n\n    var shortcut = shortcutRegistry(window, defaultOptions);\n\n    return shortcut;\n\n});\n\n","\ndefine('css!taoQtiTestCss/plugins/key-navigation',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Test Runner Content Plugin : Navigate through the item focusable elements using the keyboard\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/content/accessibility/keyNavigation',[\n    'jquery',\n    'lodash',\n    'ui/keyNavigation/navigator',\n    'ui/keyNavigation/navigableDomElement',\n    'ui/keyNavigation/navigableGroupElement',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'css!taoQtiTestCss/plugins/key-navigation'\n], function ($, _, keyNavigator, navigableDomElement, navigableGroupElement, shortcut, namespaceHelper, pluginFactory) {\n    'use strict';\n\n    /**\n     * When either an element or its parents have this class - navigation from it would be disabled.\n     *\n     * @type {String}\n     */\n    var ignoredClass = 'no-key-navigation';\n\n    /**\n     * If we have now config from backend side - we set this default dataset\n     *\n     * @typedef {object}\n     * @properties {string} contentNavigatorType - ('default' | 'linear') - type of content navigation\n     */\n    var defaultPluginConfig = {\n      contentNavigatorType: 'default',\n    };\n\n    /**\n     * Init the navigation in the toolbar\n     *\n     * @param {Object} testRunner\n     * @returns {Array}\n     */\n    function initToolbarNavigation(){\n        var $navigationBar = $('.bottom-action-bar');\n        var $focusables = $navigationBar.find('.action:not(.btn-group):visible, .action.btn-group .li-inner:visible');\n        var navigables = navigableDomElement.createFromDoms($focusables);\n        if (navigables.length) {\n            return [keyNavigator({\n                id : 'bottom-toolbar',\n                replace : true,\n                group : $navigationBar,\n                elements : navigables,\n                //start from the last button \"goto next\"\n                defaultPosition : navigables.length - 1\n            }).on('right down', function(elem){\n                if (!allowedToNavigateFrom(elem)) {\n                    return false;\n                } else {\n                    this.next();\n                }\n            }).on('left up', function(elem){\n                if (!allowedToNavigateFrom(elem)) {\n                    return false;\n                } else {\n                    this.previous();\n                }\n            }).on('activate', function(cursor){\n                cursor.navigable.getElement().click().mousedown();\n            })];\n        }\n        return [];\n    }\n\n    /**\n     * Init the navigation in the header block\n     *\n     * @param {Object} testRunner\n     * @returns {Array}\n     */\n    function initHeaderNavigation(){\n        //need global selector as currently no way to access delivery frame from test runner\n        var $headerElements = $('[data-control=\"exit\"]:visible a');\n        var navigables = navigableDomElement.createFromDoms($headerElements);\n        if (navigables.length) {\n            return [keyNavigator({\n                id : 'header-toolbar',\n                group : $headerElements.closest('.infoControl'),\n                elements : navigables,\n                loop : true,\n                replace : true\n            }).on('activate', function(cursor){\n                cursor.navigable.getElement().click();\n            })];\n        }\n        return [];\n    }\n\n    /**\n     * Init the navigation in the review panel\n     *\n     * @param {Object} testRunner\n     * @returns {Array} the keyNavigator of the main navigation group\n     */\n    function initNavigatorNavigation(testRunner){\n\n        var $panel = testRunner.getAreaBroker().getPanelArea();\n        var $navigator = $panel.find('.qti-navigator');\n        var navigators = [];\n        var filtersNavigator;\n        var itemsNavigator;\n        var $filters, $trees, navigableFilters, navigableTrees;\n\n        //the tag to identify if the item listing has been browsed, to only \"smart jump\" to active item only on the first visit\n        var itemListingVisited = false;\n        //the position of the filter in memory, to only \"smart jump\" to active item only on the first visit\n        var filterCursor;\n\n        if($navigator.length && !$navigator.hasClass('disabled')){\n            $filters = $navigator.find('.qti-navigator-filters .qti-navigator-filter');\n            navigableFilters = navigableDomElement.createFromDoms($filters);\n            if (navigableFilters.length) {\n                filtersNavigator = keyNavigator({\n                    keepState : true,\n                    id : 'navigator-filters',\n                    replace : true,\n                    elements : navigableFilters,\n                    group : $navigator\n                }).on('right', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else {\n                        this.next();\n                    }\n                }).on('left', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else {\n                        this.previous();\n                    }\n                }).on('down', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else if(itemsNavigator){\n                        _.defer(function(){\n                            if(itemListingVisited){\n                                itemsNavigator.focus().first();\n                            }else{\n                                itemsNavigator.focus();\n                            }\n                        });\n                    }\n                }).on('up', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else if(itemsNavigator){\n                        _.defer(function(){\n                            itemsNavigator.last();\n                        });\n                    }\n                }).on('focus', function(cursor, origin){\n                    //activate the tab in the navigators\n                    cursor.navigable.getElement().click();\n\n                    //reset the item listing browsed tag whenever the focus on the filter happens after a focus on another element\n                    if((filterCursor && filterCursor.position !== cursor.position) || origin){\n                        itemListingVisited = false;\n                    }\n                    //set the filter cursor in memory\n                    filterCursor = cursor;\n                });\n                navigators.push(filtersNavigator);\n            }\n\n            $trees = $navigator.find('.qti-navigator-tree .qti-navigator-item:not(.unseen) .qti-navigator-label');\n            navigableTrees = navigableDomElement.createFromDoms($trees);\n            if (navigableTrees.length) {\n                //instantiate a key navigator but do not add it to the returned list of navigators as this is not supposed to be reached with tab key\n                itemsNavigator = keyNavigator({\n                    id : 'navigator-items',\n                    replace : true,\n                    elements : navigableTrees,\n                    defaultPosition : function defaultPosition(navigables){\n                        var pos = 0;\n                        if(filterCursor && filterCursor.navigable.getElement().data('mode') !== 'flagged'){\n                            _.forIn(navigables, function(navigable, i){\n                                var $parent = navigable.getElement().parent('.qti-navigator-item');\n                                //find the first active and visible item\n                                if($parent.hasClass('active') && $parent.is(':visible')){\n                                    pos = i;\n                                    return false;\n                                }\n                            });\n                        }\n                        return pos;\n                    }\n                }).on('down', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else {\n                        this.next();\n                    }\n                }).on('up', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else {\n                        this.previous();\n                    }\n                }).on('right', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else if(filtersNavigator){\n                        filtersNavigator.focus().next();\n                    }\n                }).on('left', function(elem){\n                    if (!allowedToNavigateFrom(elem)) {\n                        return false;\n                    } else if(filtersNavigator){\n                        filtersNavigator.focus().previous();\n                    }\n                }).on('activate', function(cursor){\n                    cursor.navigable.getElement().click();\n                }).on('lowerbound upperbound', function(){\n                    if(filtersNavigator){\n                        filtersNavigator.focus();\n                    }\n                }).on('focus', function(cursor){\n                    itemListingVisited = true;\n                    cursor.navigable.getElement().parent().addClass('key-navigation-highlight');\n                }).on('blur', function(cursor){\n                    cursor.navigable.getElement().parent().removeClass('key-navigation-highlight');\n                });\n            }\n\n        }\n        return navigators;\n    }\n\n    /**\n     * Init the navigation in the item content\n     * Navigable item content are interaction choices and body element with the special class \"key-navigation-focusable\"\n     * It returns an array of keyNavigators as the content is dynamically determined\n     *\n     * @param {Object} testRunner\n     * @returns {Array} of keyNavigator ids\n     */\n    function initDefaultContentNavigation(testRunner){\n        var itemNavigators = [];\n        var $content = testRunner.getAreaBroker().getContentArea();\n\n        //the item focusable body elements are considered scrollable\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable');\n        $content.find('.key-navigation-focusable,.qti-interaction').filter(function(){\n            //filter out interaction as it will be managed separately\n            return (!$(this).parents('.qti-interaction').length);\n        }).each(function(){\n            var $itemElement = $(this);\n            if($itemElement.hasClass('qti-interaction')){\n                itemNavigators = _.union(itemNavigators, initInteractionNavigation($itemElement));\n            }else{\n                itemNavigators.push(keyNavigator({\n                    elements : navigableDomElement.createFromDoms($itemElement),\n                    group : $itemElement,\n                    propagateTab : false\n                }));\n            }\n        });\n\n        return itemNavigators;\n    }\n\n    /**\n     * Init the navigation in the item content\n     * Navigable item content are interaction choices only\n     * It's works with templates for default key\n     *\n     * @param {Object} testRunner\n     * @returns {Array} of keyNavigator ids\n     */\n    function initAllContentButtonsNavigation(testRunner){\n        var navigableElements = [];\n        var $content = testRunner.getAreaBroker().getContentArea();\n        var $qtiIteractionsNodeList = $content.find('.key-navigation-focusable,.qti-interaction').filter(function(){\n            //filter out interaction as it will be managed separately\n            return (!$(this).parents('.qti-interaction').length);\n        });\n        var $qtiChoiceNodesList = $qtiIteractionsNodeList.find('.qti-choice');\n\n        //the item focusable body elements are considered scrollable\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable');\n\n        $qtiChoiceNodesList.each(function(){\n            var $itemElement = $(this);\n            var keyNavigatorItem = keyNavigator({\n                elements : navigableDomElement.createFromDoms($itemElement),\n                group : $itemElement,\n                propagateTab : false\n            });\n\n            keyNavigatorItem.on('activate', function(cursor){\n                var $elt = cursor.navigable.getElement();\n                //jQuery <= 1.9.0 the checkbox values are set\n                //after the click event if triggerred with jQuery\n                if($elt.is(':checkbox')){\n                    $elt.each(function(){\n                        this.click();\n                    });\n                } else {\n                    $elt.click();\n                }\n\n            });\n\n            navigableElements.push(keyNavigatorItem);\n        });\n\n        return navigableElements;\n    }\n\n    /**\n     * Init interaction key navigation from the interaction navigator\n     *\n     * @param {JQuery} $interaction - the interaction container\n     * @returns {Array} array of navigators created from interaction container\n     */\n    function initInteractionNavigation($interaction){\n\n        var $inputs;\n        var interactionNavigables;\n        var interactionNavigators = [];\n\n        //add navigable elements from prompt\n        $interaction.find('.key-navigation-focusable').each(function(){\n            var $nav = $(this);\n            if(!$nav.closest('.qti-choice').length){\n                interactionNavigators.push(keyNavigator({\n                    elements : navigableDomElement.createFromDoms($nav),\n                    group : $nav,\n                    propagateTab : false\n                }));\n            }\n        });\n\n        //reset interaction custom key navigation to override the behaviour with the new one\n        $interaction.off('.keyNavigation');\n\n        //search for inputs that represent the interaction focusable choices\n        $inputs = $interaction.is(':input') ? $interaction : $interaction.find(':input');\n        interactionNavigables = navigableDomElement.createFromDoms($inputs);\n\n        if (interactionNavigables.length) {\n            var keyNavigatorItem = keyNavigator({\n                elements : interactionNavigables,\n                group : $interaction,\n                loop : false\n            });\n\n            keyNavigatorItem.on('right down', function(elem){\n                if (!allowedToNavigateFrom(elem)) {\n                    return false;\n                } else {\n                    this.next();\n                }\n            }).on('left up', function(elem){\n                if (!allowedToNavigateFrom(elem)) {\n                    return false;\n                } else {\n                    this.previous();\n                }\n            }).on('activate', function(cursor){\n                var $elt = cursor.navigable.getElement();\n\n                //jQuery <= 1.9.0 the checkbox values are set\n                //after the click event if triggerred with jQuery\n                if($elt.is(':checkbox')){\n                    $elt.each(function(){\n                        this.click();\n                    });\n                } else {\n                    $elt.click();\n                }\n\n            }).on('focus', function(cursor){\n                cursor.navigable.getElement().closest('.qti-choice').addClass('key-navigation-highlight');\n            }).on('blur', function(cursor){\n                cursor.navigable.getElement().closest('.qti-choice').removeClass('key-navigation-highlight');\n            });\n\n            interactionNavigators.push(keyNavigatorItem);\n        }\n\n        return interactionNavigators;\n    }\n\n    /**\n     * Init the navigation of test rubric blocks\n     * It returns an array of keyNavigator ids as the content is dynamically determined\n     *\n     * @param {Object} testRunner\n     * @returns {Array} of keyNavigator ids\n     */\n    function initRubricNavigation(){\n        var $itemElements;\n        var rubricNavigators = [];\n        var $rubricArea = $('#qti-rubrics');\n\n        $itemElements = $rubricArea.find('.qti-rubricBlock');\n        $itemElements.each(function(){\n            var $itemElement = $(this);\n            var id = 'rubric_element_navigation_group_'+rubricNavigators.length;\n\n            rubricNavigators.push(keyNavigator({\n                id : id,\n                elements : navigableDomElement.createFromDoms($itemElement),\n                group : $itemElement,\n                replace : true\n            }));\n        });\n\n        return rubricNavigators;\n    }\n\n    /**\n     * Init test runner navigation\n     * @param testRunner\n     * @returns {*}\n     */\n    function initTestRunnerNavigation(testRunner, config){\n        var keyNavigatorItem;\n        var navigators;\n\n        //blur current focused element, to reinitialize keyboard navigation\n        if (document.activeElement){\n            document.activeElement.blur();\n        }\n\n        switch (config.contentNavigatorType) {\n            case 'linear' :\n                navigators = _.union(\n                    initRubricNavigation(testRunner),\n                    initAllContentButtonsNavigation(testRunner),\n                    initToolbarNavigation(testRunner),\n                    initNavigatorNavigation(testRunner),\n                    initHeaderNavigation(testRunner)\n                );\n            break;\n\n            default:\n                navigators = _.union(\n                    initRubricNavigation(testRunner),\n                    initDefaultContentNavigation(testRunner),\n                    initToolbarNavigation(testRunner),\n                    initNavigatorNavigation(testRunner),\n                    initHeaderNavigation(testRunner)\n                );\n            break;\n        }\n\n\n        navigators = navigableGroupElement.createFromNavigators(navigators);\n\n        keyNavigatorItem = keyNavigator({\n            id : 'test-runner',\n            replace : true,\n            loop : true,\n            elements : navigators\n        });\n\n        keyNavigatorItem.on('tab', function(elem){\n            if (allowedToNavigateFrom(elem)) {\n                this.next();\n            }\n        }).on('shift+tab', function(elem){\n            if (allowedToNavigateFrom(elem)) {\n                this.previous();\n            }\n        });\n\n        if ( config.contentNavigatorType === 'linear' ) {\n            keyNavigatorItem.on('right', function(elem){\n\n                var isCurrentElementFirst = $(elem).is(':first-child');\n\n                if ( isCurrentElementFirst && allowedToNavigateFrom(elem) ) {\n                    this.next();\n                }\n\n            }).on('left', function(elem){\n                var isCurrentElementLast = $(elem).is(':last-child');\n\n                if ( isCurrentElementLast && allowedToNavigateFrom(elem) ) {\n                    this.previous();\n                }\n            });\n        }\n\n        return keyNavigatorItem;\n    }\n\n    /**\n     * Checks whether element is navigable from\n     *\n     * @param {HTMLElement} element\n     * @returns {boolean}\n     */\n    function allowedToNavigateFrom(element)\n    {\n        var $element = $(element);\n\n        if ($element.hasClass(ignoredClass) || $element.parents('.' + ignoredClass).length > 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'keyNavigation',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginConfig = _.defaults((testConfig.plugins || {})[self.getName()] || {}, defaultPluginConfig);\n\n            //start disabled\n            this.disable();\n\n            /**\n             *  Update plugin state based on changes\n             */\n            testRunner\n                .after('renderitem', function () {\n                    self.groupNavigator = initTestRunnerNavigation(testRunner, pluginConfig);\n\n                    shortcut.add('tab shift+tab', function(e){\n                        if (!allowedToNavigateFrom(e.target)) {\n                            return false;\n                        }\n                        if(!self.groupNavigator.isFocused()){\n                            self.groupNavigator.focus();\n                        }\n                    });\n                })\n                .on('unloaditem', function () {\n                    self.disable();\n                })\n                /**\n                 * @param {string} type - type of content tab navigation,\n                 * can be: 'default' || 'linear'\n                 */\n                .on('setcontenttabtype', function(type) {\n                    pluginConfig.contentNavigatorType = type;\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n            if(this.groupNavigator) {\n                this.groupNavigator.destroy();\n            }\n        }\n    });\n});\n\n","define('core/pluginifier',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n  $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n  _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  /**\n   * Abstract plugin used to provide common behavior to the plugins\n   */\n\n  var basePlugin = {\n    /**\n     * Set options of the plugin\n     *\n     * @example $('selector').pluginName('options', { key: value });\n     * @param  {String} dataNs - the data namespace\n     * @param  {String} ns - the event namespace\n     * @param  {Object} options - the options to set\n     */\n    options: function options(dataNs, ns, _options) {\n      return this.each(function () {\n        var $elt = $(this);\n        var currentOptions = $elt.data(dataNs);\n\n        if (currentOptions) {\n          $elt.data(dataNs, _.merge(currentOptions, _options));\n        }\n      });\n    },\n\n    /**\n     * Disable the component.\n     *\n     * It can be called prior to the plugin initilization.\n     *\n     * Called the jQuery way once registered by the Pluginifier.\n     * @example $('selector').pluginName('disable');\n     * @param  {String} dataNs - the data namespace\n     * @param  {String} ns - the event namespace\n     * @fires  basePlugin#disable.ns\n     */\n    disable: function disable(dataNs, ns) {\n      return this.each(function () {\n        var $elt = $(this);\n        var options = $elt.data(dataNs);\n\n        if (options) {\n          $elt.addClass(options.disableClass || 'disabled').trigger('disable.' + ns);\n        }\n      });\n    },\n\n    /**\n     * Enable the component.\n     *\n     * Called the jQuery way once registered by the Pluginifier.\n     * @example $('selector').pluginName('enable');\n     * @param  {String} dataNs - the data namespace\n     * @param  {String} ns - the event namespace\n     * @fires  basePlugin#enable.ns\n     */\n    enable: function enable(dataNs, ns) {\n      return this.each(function () {\n        var $elt = $(this);\n        var options = $elt.data(dataNs);\n\n        if (options) {\n          $elt.removeClass(options.disableClass || 'disabled').trigger('enable.' + ns);\n        }\n      });\n    }\n  };\n  /**\n   * Helps you to create a jQuery plugin, the Cards way\n   * @exports core/pluginifer\n   */\n\n  var Pluginifier = {\n    /**\n     * Regsiter a new jQuery plugin, the Cards way\n     * @param {string} pluginName - the name of the plugin to regsiter. ie $('selector').pluginName();\n     * @param {Object} plugin - the plugin as a plain object\n     * @param {Function} plugin.init - the entry point of the plugin is always an init method\n     * @param {Object} [config] - plugin configuration\n     * @param {String} [config.ns = pluginName] - plugin namespace (used for events and data-attr)\n     * @param {String} [config.dataNs = ui.pluginName] - plugin namespace (used for events and data-attr)\n     * @param {Array<String>} [config.expose] - list of methods to expose\n     */\n    register: function register(pluginName, plugin, config) {\n      config = config || {};\n      var ns = config.ns || pluginName.toLowerCase();\n      var dataNs = config.dataNs || 'ui.' + ns;\n      var expose = config.expose || []; //checks\n\n      if (_.isFunction($.fn[pluginName])) {\n        return $.error('A plugin named ' + pluginName + ' is already registered');\n      }\n\n      if (!_.isPlainObject(plugin) || !_.isFunction(plugin.init)) {\n        return $.error('The object to register as a jQuery plugin must be a plain object with an `init` method.');\n      } //configure and augments the plugin\n\n\n      _.assign(plugin, _.transform(basePlugin, function (result, prop, key) {\n        if (_.isFunction(prop)) {\n          result[key] = _.partial(basePlugin[key], dataNs, ns);\n        }\n      })); //set up public methods to wrap privates the jquery way\n\n\n      _.forEach(expose, function (toExposeName) {\n        var privateMethod = toExposeName;\n        var publicMethod = toExposeName;\n\n        if (!/^_/.test(expose)) {\n          privateMethod = '_' + privateMethod;\n        } else {\n          publicMethod = publicMethod.replace(/^_/, '');\n        } //do not override if exists\n\n\n        if (_.isFunction(plugin[privateMethod]) && !_.isFunction(plugin[publicMethod])) {\n          plugin[publicMethod] = function () {\n            var returnValue;\n            var args = Array.prototype.slice.call(arguments, 0);\n            this.each(function () {\n              //call plugin._method($element, [remainingArgs...]);\n              returnValue = plugin[privateMethod].apply(plugin, [$(this)].concat(args));\n            });\n            return returnValue || this;\n          };\n        }\n      }); // map $('selector').pluginName() to plugin.init\n      // map $('selector').pluginName('method', params) to plugin.method(params) to plugin._method($elt, params);\n      // disable direct call to private (starting with _) methods\n\n\n      $.fn[pluginName] = function (method) {\n        if (plugin[method]) {\n          if (/^_/.test(method)) {\n            $.error('Trying to call a private method `' + method + '`');\n          } else {\n            return plugin[method].apply(this, Array.prototype.slice.call(arguments, 1));\n          }\n        } else if (_typeof(method) === 'object' || !method) {\n          return plugin.init.apply(this, arguments);\n        }\n\n        $.error('Method ' + method + ' does not exist on plugin');\n      };\n    }\n  };\n\n  return Pluginifier;\n\n});\n\n","define('core/dataattrhandler',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var defaults = {\n      container: false,\n      listenerEvent: 'click',\n      useTarget: true,\n      bubbled: false\n    };\n    var letDefaultOn = [':radio', ':checkbox'];\n    /**\n     * Some elements (listed in letDefaultOn) need the usual action to be triggered, check that\n     * @param {jQueryElement} $elt\n     * @returns {boolean}\n     */\n\n    var shouldPreventDefault = function shouldPreventDefault($elt) {\n      return !$elt.is(letDefaultOn.join(','));\n    };\n    /**\n     * This callback is used either to perform actions on data-attr element\n     * @callback dataAttrCallback\n     * @params {jQueryElmement} $elt - the element that contains the data-attr\n     * @params {jQueryElmement} $target - the element targeted by the data-attr\n     */\n\n    /**\n     * The DataAttrHandler helps you to listen events from data attribute elements\n     * and bound a jQuery plugin behavior.\n     * @exports core/dataattrhandler\n     *\n     * @contructor\n     * @param {string} attrName - the name of the attribute, ie. `toggle` for `data-toggle`\n     * @param {Object} options - the handler options\n     * @param {string} options.namespace - the jQuery plugin namespace\n     * @param {jQueryElement|boolean} [options.container = false] - the root context to listen in\n     * @param {string} [options.listenerEvent = 'click'] - the event to listen on\n     * @param {boolean} [options.preventDefault = true] - to prevent the default event to be fired\n     * @param {string} [options.inner] - a selector inside the element to bind the event to\n     * @param {boolean} [options.useTarget = true] - if the content of the data-attr is as target or not\n     * @param {boolean} [options.bubbled = false] - handle the event if bubbled from a child\n     */\n\n\n    var DataAttrHandler = function construct(attrName, options) {\n      var self = this;\n      this.options = _.defaults(options, defaults);\n      var selector = '[data-' + attrName + ']'; //check namespace\n\n      if (!_.has(this.options, 'namespace') || !_.isString(this.options.namespace)) {\n        return $.error('The plugin data namespace option is required');\n      }\n\n      if (this.options.container && this.options.container.selector) {\n        selector = this.options.container.selector + ' ' + selector;\n      }\n\n      if (this.options.inner) {\n        selector += ' ' + this.options.inner;\n      } //listen for events on selector (the listening works even though the DOM changes).\n\n\n      $(document).off(this.options.listenerEvent, selector).on(this.options.listenerEvent, selector, function (e) {\n        var $elt = $(e.target);\n\n        if (self.options.bubbled === true || $elt.is(selector)) {\n          var $target, $outer;\n\n          if ($elt.data(attrName) === undefined && (self.options.inner || self.options.bubbled)) {\n            $outer = $elt;\n            $elt = $elt.parents('[data-' + attrName + ']');\n          }\n\n          $target = self.options.useTarget === true ? DataAttrHandler.getTarget(attrName, $elt) : self.options.inner ? $outer : undefined; //check if the plugin is already bound to the element\n\n          if (!$elt.data(self.options.namespace)) {\n            if (typeof self.createPlugin === 'function') {\n              self.createPlugin($elt, $target);\n            } //for radio bind also the method call to the group...\n\n\n            if ($elt.is(':radio') && $elt.attr('name')) {\n              $(':radio[name=\"' + $elt.attr('name') + '\"]').not($elt).on(self.options.listenerEvent, function (e) {\n                if (typeof self.callPluginMethod === 'function') {\n                  self.callPluginMethod($elt, $target);\n                }\n\n                if (shouldPreventDefault($elt)) {\n                  e.preventDefault();\n                }\n              });\n            }\n          } //call the method bound to this event\n\n\n          if (typeof self.callPluginMethod === 'function') {\n            self.callPluginMethod($elt, $target);\n          }\n          /*else {\n            //if there is no action to call we top listening (init plugin only)\n            $(document).off(self.options.listenerEvent, selector);\n          }*/\n\n\n          if (shouldPreventDefault($elt)) {\n            e.preventDefault();\n          }\n        }\n      });\n    };\n    /**\n     * Add the callback used to initialise the plugin,\n     * the cb will be executed only once\n     * @param {dataAttrCallback} cb - callback\n     * @returns {DataAttrHandler} for chaining\n     */\n\n\n    DataAttrHandler.prototype.init = function (cb) {\n      this.createPlugin = cb;\n      return this;\n    };\n    /**\n     * Add the callback used to trigger an action each time the event is fired.\n     * @param {dataAttrCallback} cb - callback\n     * @returns {DataAttrHandler} for chaining\n     */\n\n\n    DataAttrHandler.prototype.trigger = function (cb) {\n      this.callPluginMethod = cb;\n      return this;\n    };\n    /**\n     * Loads the target element from the data-attr (and fallback to href or a named attribute).\n     * The value of the data-attr is a CSS selector, it will be applied directly or with $elt as context.\n     *\n     * @param {String} attrName - the name of the attribute, ie. `toggle` for `data-toggle`\n     * @param {jQueryElement} $elt - the element that holds the data attr\n     * @returns {jQueryElement} the target\n     */\n\n\n    DataAttrHandler.getTarget = function getTarget(attrName, $elt) {\n      var relativeRegex = /^(\\+|>|~|:parent|<)/;\n      var $target = [];\n      var targetSelector = $elt.attr('data-' + attrName) || $elt.attr('href') || $elt.attr('attrName');\n\n      if (!_.isEmpty(targetSelector)) {\n        //try to contextualize from the current element before selcting globally\n        var matches = relativeRegex.exec(targetSelector);\n\n        if (matches !== null) {\n          var selector = targetSelector.replace(relativeRegex, '');\n\n          if (matches[0] === ':parent' || matches[0] === '<') {\n            $target = $elt.parents(selector);\n          } else if (matches[0] === '~') {\n            $target = $elt.siblings(selector);\n          } else if (matches[0] === '+') {\n            $target = $elt.next(selector);\n          } else {\n            $target = $(selector, $elt);\n          }\n        } else {\n          $target = $(targetSelector);\n        }\n      }\n\n      return $target;\n    }; //expose the handler\n\n    return DataAttrHandler;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : Overlay\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/dialog/dialog',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/dialog/alert',\n    'ui/dialog/confirm',\n    'util/shortcut/registry',\n    'util/shortcut',\n    'util/namespace'\n], function ($, _, __, pluginFactory, dialogAlert, dialogConfirm, shortcutRegistry, globalShortcut, namespaceHelper){\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'dialog';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultOptions = {\n        alert: {\n            focus: 'ok'\n        },\n        confirm: {\n            focus: 'ok'\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {}, defaultOptions);\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n            var alerts = [];\n            var confirms = [];\n            var opened = [];\n            var dialogShortcut = shortcutRegistry($('body'), {\n                propagate: false,\n                prevent: true\n            });\n\n            /**\n             * Closes a dialog with accept\n             * @param {dialog} dialog - The instance of the dialog\n             */\n            function closeAccept(dialog) {\n                // TODO: improve the dialog implementation in order to provide a better API\n                dialog.trigger('okbtn.modal').hide();\n            }\n\n            /**\n             * Closes a dialog with rejection\n             * @param {dialog} dialog - The instance of the dialog\n             */\n            function closeReject(dialog) {\n                dialog.hide();\n            }\n\n            /**\n             * Closes the last opened dialog\n             * @param {Boolean} accept Whether the dialog should be accepted or not\n             * @param {String} [shortcut] The shortcut that caused the action\n             */\n            function closeLast(accept, shortcut) {\n                var handle = opened.length && opened[opened.length - 1];\n                if (handle) {\n                    handle.shortcut = shortcut;\n                    if (accept) {\n                        closeAccept(handle.dialog);\n                    } else {\n                        closeReject(handle.dialog);\n                    }\n                }\n            }\n\n            /**\n             * Add dialog on top of the provided stack\n             * @param {String} namespace - The event namespace that scope the dialog\n             * @param {Array} stack - The dialogs stack on which push the new instance\n             * @param {Function} dialog - The constructor of the dialog\n             * @param {String} message - The message to display\n             * @param {Function} accept - The callback for accept\n             * @param {Function} reject - The callback for reject\n             * @param {Object} options - Dialog options\n             */\n            function addHandle(namespace, stack, dialog, message, accept, reject, options) {\n                var handle = {\n                    context: namespace,\n                    dialog: dialog(message, doAccept, doReject, options)\n                };\n\n                function doAccept(e, reason) {\n                    if (_.isFunction(accept)) {\n                        accept(handle.shortcut || reason);\n                    }\n                }\n                function doReject(e, reason) {\n                    if (_.isFunction(reject)) {\n                        reject(handle.shortcut || reason);\n                    }\n                }\n\n                // prevents all registered shortcuts to be triggered\n                // and brings back the dialog shortcuts\n                globalShortcut.disable();\n                dialogShortcut.enable();\n\n                stack.push(handle);\n                opened.push(handle);\n\n                handle.dialog.focus(options.focus);\n                handle.dialog.on('closed.modal', function() {\n                    removeHandle(stack, handle.dialog);\n                    removeHandle(opened, handle.dialog);\n\n                    // if all dialogs have been closed allows all registered shortcuts to be triggered\n                    // also disables the dialog shortcuts\n                    if (!opened.length) {\n                        globalShortcut.enable();\n                        dialogShortcut.disable();\n                    }\n                });\n            }\n\n            /**\n             * Remove a dialog from the provided stack\n             * @param {Array} stack - The dialogs stack from which remove the dialog instance\n             * @param {dialog} dialog - The instance of the dialog\n             */\n            function removeHandle(stack, dialog) {\n                if (dialog) {\n                    _.remove(stack, function(handle) {\n                        if (handle && dialog === handle.dialog) {\n                            return true;\n                        }\n                    });\n                }\n            }\n\n            /**\n             * Closes all dialogs within the provided stack\n             * @param {String} namespace - The event namespace that scope the dialogs to close\n             * @param {Boolean} accept - Whether (`true`) or not (`false`) to close the dialogs with accept\n             * @param {Array} stack - The dialogs stack in which close the dialogs\n             */\n            function closeDialogs(namespace, accept, stack) {\n                if (stack) {\n                    _.forEach(stack, function(handle) {\n                        if (handle && (namespace === '@' || namespace === handle.context)) {\n                            if (accept) {\n                                closeAccept(handle.dialog);\n                            } else {\n                                closeReject(handle.dialog);\n                            }\n                        }\n                    });\n                } else {\n                    closeDialogs(namespace, accept, alerts);\n                    closeDialogs(namespace, accept, confirms);\n                }\n            }\n\n            // starts with shortcuts disabled, prevents the TAB key to be used to move outside the dialog box\n            dialogShortcut.disable().set('Tab Shift+Tab');\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function(command, key) {\n                    dialogShortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function(e, shortcut) {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key, shortcut);\n                    });\n                });\n            }\n\n            //change plugin state\n            testRunner\n                .before('alert.*', function(e, msg, accept, options) {\n                    addHandle(e.namespace, alerts, dialogAlert, msg, accept, accept, _.merge({}, pluginConfig.alert, options));\n                })\n                .before('confirm.*', function(e, msg, accept, reject, options) {\n                    addHandle(e.namespace, confirms, dialogConfirm, msg, accept, reject, _.merge({}, pluginConfig.confirm, options));\n                })\n                .before('closedialog.*', function(e, accept) {\n                    closeDialogs(e.namespace, accept);\n                })\n                .on(actionPrefix + 'accept', function(shortcut) {\n                    closeLast(true, shortcut);\n                })\n                .on(actionPrefix + 'reject', function(shortcut) {\n                    closeLast(false, shortcut);\n                })\n                .on('destroy', function() {\n                    closeDialogs('.@');\n\n                    dialogShortcut.clear();\n                    dialogShortcut = null;\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/content/dialog/exitMessages',[\n    'lodash',\n    'core/promise',\n    'taoTests/runner/plugin'\n], function (_, Promise, pluginFactory) {\n    'use strict';\n\n    /**\n     * Creates the testState plugin.\n     * Displays exit message, then leaves the runner once the user has acknowledged\n     */\n    return pluginFactory({\n\n        name: 'exitMessages',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            // this function is mandatory\n        },\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         */\n        install: function install() {\n            var testRunner = this.getTestRunner();\n\n            // intercepts the `leave` event,\n            // then if a message needs to be displayed displays it and waits the user acknowledges it\n            testRunner.before('leave', function leave(e, data) {\n                if (_.isObject(data) && data.message) {\n                    return new Promise(function(resolve) {\n                        var context = testRunner.getTestContext();\n\n                        // the leave can occurs when the runner is in inconsistent state (i.e. error)\n                        // prevent side error with item disabling\n                        if (context && context.itemIdentifier) {\n                            testRunner.disableItem(context.itemIdentifier);\n                        }\n                        // wait for the message acknowledge before leaving the runner\n                        testRunner\n                            .trigger('disablefeedbackalerts')\n                            .trigger('alert.leave', data.message, function() {\n                                testRunner.trigger('enablefeedbackalerts');\n                                resolve();\n                            });\n                    });\n                }\n            });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\n\n/**\n * Create dialog form with message, with overlapped content\n */\ndefine('taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',[\n    'jquery',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin'\n], function($, __, hider, pluginFactory) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'itemAlertMessage',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            this.$element = $(this.getContent().dom);\n\n            this.$element\n                // for GUI actions\n                .on('closed.modal', function(){\n                    $(this).modal('destroy');\n                })\n                .on('destroyed.modal', function(){\n                    self.$element = null;\n                    self.trigger('resume', self);\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var testRunner = this.getTestRunner();\n            var itemRunner = testRunner.itemRunner;\n            var $modalsContainer = this.getContent().$container;\n            if (!$modalsContainer) {\n                $modalsContainer = $('#modalFeedbacks', itemRunner._item.container);\n            }\n            $modalsContainer.append(this.$element);\n\n            this.$element.modal({\n                startClosed : false,\n                top : 200\n            });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            if (this.$element && this.$element.length){\n                this.$element.modal('close');\n            }\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/templates/button', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" \";\n  if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\";\n  return buffer;\n  }\nfunction program4(depth0,data) {\n  \n  \n  return \" no-label\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"text\\\">\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  buffer += \"<li data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"small btn-info action\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\" onclick=\\\"return false\\\">\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </a>\\n</li>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\n/**\n * Create form with message in test runner and replace all control buttons on his personal\n */\n\ndefine('taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',[\n    'jquery',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function($, __, hider, pluginFactory, buttonTpl) {\n    'use strict';\n\n    /**\n     * The display of the next button\n     */\n    var buttonData = {\n        next : {\n            control : 'move-forward',\n            title   : __('Submit and go to the next item'),\n            icon    : 'forward',\n            text    : __('OK')\n        },\n        end : {\n            control : 'move-end',\n            title   : __('Submit and go to the end of the test'),\n            icon    : 'fast-forward',\n            text    : __('OK & End test')\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'itemInlineMessage',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Create the button based on the current context\n             * @returns {*|jQuery|HTMLElement} the button\n             */\n            var createOkButton = function createElement(){\n                var dataType = !!testRunner.getTestContext().isLast ? 'end' : 'next';\n                var $btn = $(buttonTpl(buttonData[dataType]));\n                $btn.addClass('modalFeedback-button');\n\n                //plugin behavior\n                $btn.on('click', function(e){\n                    e.preventDefault();\n\n                    self.disable();\n                    if($(this).data('control') === 'move-end'){\n                        self.trigger('end');\n                    }\n\n                    $btn.remove();\n                    self.$element.remove();\n\n                    self.trigger('resume', self);\n                });\n\n                return $btn;\n            };\n\n            this.$button = createOkButton();\n            this.$element = $(this.getContent().dom);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $navigationContainer = this.getAreaBroker().getNavigationArea();\n            var testRunner = this.getTestRunner();\n            var itemRunner = testRunner.itemRunner;\n            var $inlineContainer = this.getContent().$container;\n            if (!$inlineContainer && itemRunner._item.container) {\n                $inlineContainer = $('.qti-itemBody', itemRunner._item.container);\n            }\n\n            $inlineContainer.append(this.$element);\n\n            // hide all navigation buttons, create new instead of\n            if (!$('.modalFeedback-button', $navigationContainer).length){\n                $navigationContainer.append(this.$button);\n            }\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$button.removeProp('disabled')\n                .removeClass('disabled');\n        },\n\n        disable: function disable (){\n            this.$button.prop('disabled', true)\n                .addClass('disabled');\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$button.click();\n        }\n    });\n});\n\n","define('util/regexEscape',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * Escapes -\\/\\\\^$*+?.()|[\\]{} inside a string. Use when\n     * concatenating a string for usage in new RegExp().\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n    function regexEscape (s) {\n      return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    return regexEscape;\n\n});\n\n","define('util/wrapLongWords',['util/regexEscape'], function (regexEscape) { 'use strict';\n\n    regexEscape = regexEscape && regexEscape.hasOwnProperty('default') ? regexEscape['default'] : regexEscape;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n    /**\n     * Builds a chunked term from a too long one.\n     *\n     * Internet Explorer will not insert a line-break before a period or a colon (and possibly other characters),\n     * even when they're preceded by a space. To address this chunks starting with one of the problematic characters\n     * will have this removed and it will be appended to the previous chunk.\n     *\n     * @param longWord\n     * @param chunkExp\n     * @returns {string}\n     */\n\n    var getCutTerm = function getCutTerm(longWord, chunkExp) {\n      var cutTerms = longWord.match(chunkExp),\n          i = cutTerms.length,\n          oldFirst = '',\n          newFirst = '',\n          offenders = ['.', ':', ';'];\n\n      while (i--) {\n        newFirst = cutTerms[i].charAt(0);\n\n        if (offenders.indexOf(newFirst) > -1) {\n          cutTerms[i] = cutTerms[i].substr(1);\n        }\n\n        if (offenders.indexOf(oldFirst) > -1) {\n          cutTerms[i] = cutTerms[i] + oldFirst;\n        }\n\n        oldFirst = newFirst;\n      }\n\n      return cutTerms.join(' ');\n    };\n    /**\n     * Wrap very long strings after n characters\n     *\n     * @param str\n     * @param threshold number of characters to break after\n     * @returns {string}\n     */\n\n\n    function wrapLongWords(str, threshold) {\n      // add whitespaces to provoke line breaks before HTML tags\n      str = str.toString().replace(/([\\w])</g, '$1 <');\n      var chunkExp = new RegExp('.{1,' + threshold + '}', 'g'),\n          longWords = str.match(new RegExp('[\\\\S]{' + threshold + ',}', 'g')) || [],\n          i = longWords.length,\n          cut;\n\n      while (i--) {\n        cut = getCutTerm(longWords[i], chunkExp);\n        str = str.replace(new RegExp(regexEscape(longWords[i]), 'g'), cut);\n      }\n\n      return str;\n    }\n\n    return wrapLongWords;\n\n});\n\n","define('util/encode',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     *\n     * @author dieter <dieter@taotesting.com>\n     */\n    var _reQuot = /\"/g;\n    var _reApos = /'/g;\n    /**\n     * Encodes an HTML string to be safely displayed without code interpretation\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n\n    var encodeHTML = function encodeHTML(html) {\n      // @see http://tinyurl.com/ko75kph\n      return document.createElement('a').appendChild(document.createTextNode(html)).parentNode.innerHTML;\n    };\n    /**\n     * Encodes an HTML string to be safely use inside an attribute\n     *\n     * @param {String} html\n     * @returns {String}\n     */\n\n\n    var encodeAttribute = function encodeAttribute(html) {\n      // use replaces chain instead of unified replace with map for performances reasons\n      // @see http://jsperf.com/htmlencoderegex/68\n      return encodeHTML(html).replace(_reQuot, '&quot;').replace(_reApos, '&apos;');\n    };\n    /**\n     * Encodes a Unicode string to Base64.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n\n\n    function encodeBase64(str) {\n      // first we use encodeURIComponent to get percent-encoded UTF-8,\n      // then we convert the percent encodings into raw bytes which\n      // can be fed into btoa.\n      return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n        return String.fromCharCode('0x' + p1);\n      }));\n    }\n    /**\n     * Decodes a Base64 string to Unicode string.\n     * Borrowed from MDN: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n     * @param {String} str\n     * @returns {String}\n     */\n\n\n    function decodeBase64(str) {\n      // Going backwards: from bytestream, to percent-encoding, to original string.\n      return decodeURIComponent(Array.prototype.map.call(atob(str), function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n    }\n\n    var encode = {\n      html: encodeHTML,\n      attribute: encodeAttribute,\n      encodeBase64: encodeBase64,\n      decodeBase64: decodeBase64\n    };\n\n    return encode;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : Feedback\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/feedback/feedback',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/feedback'\n], function ($, __, pluginFactory, feedback){\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'feedback',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            //keep a ref of the feedbacks\n            var currentFeedback;\n\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Close the current feedback\n             */\n            var closeCurrent = function closeCurrent(){\n                if(currentFeedback){\n                    currentFeedback.close();\n                }\n            };\n\n            this.setState('enabled', true);\n\n            //change plugin state\n            testRunner\n                .on('error', function(err){\n                    var message = err;\n                    var type = 'error';\n                    if (self.getState('enabled')) {\n                        if ('object' === typeof err) {\n                            message = err.message;\n                            type = err.type;\n                        }\n\n                        if (!message) {\n                            switch (type) {\n                                case 'TestState':\n                                    message = __('The test has been closed/suspended!');\n                                    break;\n\n                                case 'FileNotFound':\n                                    message = __('File not found!');\n                                    break;\n\n                                default:\n                                    message = __('An error occurred!');\n                            }\n                        }\n\n                        currentFeedback = feedback().error(message);\n                    }\n                })\n                .on('danger', function(message){\n                    if (self.getState('enabled')) {\n                        currentFeedback = feedback().danger(message);\n                    }\n                })\n                .on('warning', function(message){\n                    if (self.getState('enabled')) {\n                        currentFeedback = feedback().warning(message);\n                    }\n                })\n                .on('info', function(message){\n                    if (self.getState('enabled')) {\n                        currentFeedback = feedback().info(message);\n                    }\n                })\n                .on('alert.* confirm.* unloaditem', closeCurrent)\n                .on('disablefeedbackalerts', function() {\n                    closeCurrent();\n                    self.setState('enabled', false);\n                })\n                .on('enablefeedbackalerts', function() {\n                    self.setState('enabled', true);\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/content/loading/loading',[\n    'layout/loading-bar',\n    'taoTests/runner/plugin'\n], function (loadingBar, pluginFactory) {\n    'use strict';\n\n    /**\n     * Creates the loading bar plugin.\n     * Displays a loading bar when a blocking task is running\n     */\n    return pluginFactory({\n\n        name: 'loading',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var testRunner = this.getTestRunner();\n            testRunner\n                .on('unloaditem', function () {\n                    loadingBar.start();\n                })\n                .on('renderitem', function () {\n                    loadingBar.stop();\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\n/**\n * @see http://www.imsglobal.org/question/qtiv2p1/imsqti_implv2p1.html#section10008 modalFeedback\n */\n\ndefine('taoQtiTest/runner/plugins/content/modalFeedback/modalFeedback',[\n    'jquery',\n    'lodash',\n    'module',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',\n    'taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',\n    'ui/autoscroll'\n], function ($, _, module, pluginFactory, inlineMessage, alertMessage, autoscroll) {\n    'use strict';\n\n    /**\n     * Modal or inline type of the messages\n     */\n    var inlineMode;\n\n    /**\n     * Form of the feedback\n     * by default dialog (modal) form\n     */\n    var messagePlugin;\n\n    /**\n     * All feedback messages\n     */\n    var renderedFeedbacks;\n\n    /**\n     * modalFeedback was resolved and all components were destroyed\n     */\n    var isDestroyed;\n\n    /**\n     * Method which should be halted after modalFeedbacks confirmation action\n     */\n    var nextStep;\n\n    function destroyFeedback(feedback) {\n\n        var removed = false;\n        _.remove(renderedFeedbacks, function (storedFeedback) {\n\n            var found = storedFeedback === feedback;\n            if (found) {\n                removed = true;\n            }\n            return found;\n        });\n\n        if (removed) {\n            feedback.destroy();\n\n            if (!renderedFeedbacks.length) {\n                nextStep();\n            }\n        }\n    }\n\n    function defineMode(inline) {\n        inlineMode = inline;\n        messagePlugin = inlineMode ? inlineMessage : alertMessage;\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'QtiModalFeedback',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            nextStep = function(){};\n\n            defineMode(!!module.config().inlineModalFeedback);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            var createMessages = function createMessages(renderingQueue, inline){\n\n                var bInlineMode = inlineMode;\n\n                isDestroyed = false;\n                renderedFeedbacks = [];\n\n                if (_.isBoolean(inline)) {\n                    defineMode(inline);\n                }\n\n                if (renderingQueue.length) {\n\n                    _.forEach(renderingQueue, function (renderingToken) {\n\n                        var feedback = messagePlugin(testRunner, testRunner.getAreaBroker());\n                        feedback.init({\n                            dom: renderingToken.feedback.render({\n                                inline: inlineMode\n                            }),\n                            // for alerts will be used #modalMessages container\n                            $container: inlineMode ? renderingToken.$container : null\n                        });\n                        feedback.render();\n\n                        renderedFeedbacks.push(feedback);\n                    });\n\n                    // auto scroll to the first feedback, only for the \"inline\" mode\n                    if (inlineMode && renderedFeedbacks) {\n                        autoscroll($('.qti-modalFeedback', testRunner.getAreaBroker().getContentArea()).first(), testRunner.getAreaBroker().getContentArea().parents('.content-wrapper'));\n                    }\n                } else {\n                    nextStep();\n                }\n\n                // restore global feedback mode\n                defineMode(bInlineMode);\n            };\n\n            if (inlineMode) {\n                testRunner\n                    .off('plugin-resume.itemInlineMessage')\n                    .on('plugin-resume.itemInlineMessage', function () {\n                        self.destroy();\n                    });\n            } else {\n                testRunner\n                    .off('plugin-resume.itemAlertMessage')\n                    .on('plugin-resume.itemAlertMessage', function (feedback) {\n                        destroyFeedback(feedback);\n                    });\n            }\n\n            testRunner.on('modalFeedbacks', function(renderingQueue, done, inline) {\n                nextStep = done;\n                createMessages(renderingQueue, inline);\n            });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         * allow to run that function only once\n         */\n        destroy: function destroy() {\n            var tFeedbacks, i;\n            if (!isDestroyed) {\n                isDestroyed = true;\n\n                if (!renderedFeedbacks) {\n                    nextStep();\n                } else {\n                    tFeedbacks = renderedFeedbacks.slice(0);\n                    for (i in tFeedbacks) {\n                        destroyFeedback(tFeedbacks[i]);\n                    }\n                }\n            }\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : Overlay\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/overlay/overlay',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin'\n], function ($, __, pluginFactory){\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'overlay',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            this.$element = $('<div />');\n            this.$element.on('click mousedown mouseup touchstart touchend keyup keydow keypress scroll drop', function(e){\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n            });\n\n            var shield = function shield(){\n                self.enable();\n            };\n            var unshield = function unshield(itemRef){\n                self.disable();\n            };\n\n            //change plugin state\n            testRunner\n                .on('disableitem',  shield)\n                .on('enableitem unloaditem', unshield);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render (){\n            var $contentArea = this.getTestRunner().getAreaBroker().getContentArea();\n            $contentArea.after(this.$element);\n        },\n\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the overlay\n         */\n        enable : function enable (){\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginsConfig = testConfig.plugins || {};\n            var overlayConfig = pluginsConfig.overlay || {};\n\n            this.$element.addClass('overlay');\n\n            if (overlayConfig.full) {\n                this.$element.addClass('overlay-full');\n            }\n        },\n\n        /**\n         * Disable the overlay\n         */\n        disable : function disable (){\n            this.$element.removeClass('overlay overlay-full');\n        },\n\n        /**\n         * Show the overlay\n         */\n        show: function show(){\n            this.enable();\n        },\n\n        /**\n         * Hide the overlay\n         */\n        hide: function hide(){\n            this.disable();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n * @author Christophe Noël <christophe@taotesting.com>\n * @author Dieter Raber <dieter@taotesting.com>\n */\n\n\ndefine('taoQtiTest/runner/plugins/content/responsiveness/collapser',[\n    'lodash',\n    'jquery',\n    'taoTests/runner/plugin'\n], function (_, $, pluginFactory) {\n    'use strict';\n\n    /**\n     * Event namespace\n     * @type {String}\n     */\n    var ns = '.collapser';\n\n    /**\n     * Name of the CSS class used to collapse the buttons\n     * @type {String}\n     */\n    var noLabelCls = 'tool-label-collapsed';\n\n    /**\n     * Name of the CSS class used to collapse the buttons and allow to expand on mouse over\n     * @type {String}\n     */\n    var noLabelHoverCls = 'tool-label-collapsed-hover';\n\n    /**\n     * Name of the  CSS class used to hide the label of the button independently of responsiveness\n     * @type {string}\n     */\n    var labelHiddenCls = 'no-tool-label';\n\n\n    /**\n     * Name of the  CSS class for separators\n     * @type {string}\n     */\n    var separatorCls = 'separator';\n\n    /**\n     * Default plugin options\n     * @type {Object}\n     */\n    var defaults = {\n        collapseTools: true,        // collapse the tools buttons\n        collapseNavigation: false,  // collapse the navigation buttons\n        collapseInOrder: false,     // collapse any button in the given order\n        hover: false,               // expand when the mouse is over a button,\n\n        /**\n         * Allow to set manually which buttons should collapse and in which order.\n         * This can be set by triggering the \"collapser-set-order\" event on the testRunner.\n         * Given as an array of jQuery selectors: first index will be the first to be collapsed, and so on.\n         * If no selector is given for a button, then this one will never collapse.\n         * ex:\n         * var collapseOrder = [\n         *      '[data-control=\"highlight-clear\"],[data-control=\"highlight-trigger\"]',  // those will collapse first...\n         *      '[data-control=\"hide-review\"]',                                         // this one second...\n         *      '[data-control=\"set-item-flag\"]',                                       // third...\n         *      ...                                                                     // ...\n         * ];\n         * @type {String[]}\n         */\n        collapseOrder: []\n    };\n\n    var $window = $(window);\n\n    /**\n     * Creates the responsiveness collapser plugin.\n     * Reduce the size of the action bar tools when the available space is below the needed one.\n     */\n    return pluginFactory({\n\n        name: 'collapser',\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         */\n        init: function init() {\n            var testRunner = this.getTestRunner(),\n                testData = testRunner.getTestData() || {},\n                testConfig = testData.config || {},\n                pluginsConfig = testConfig.plugins || {},\n                config = _.defaults(pluginsConfig.collapser || {}, defaults),\n                collapseCls = config.hover ? noLabelHoverCls : noLabelCls;\n\n            var areaBroker = testRunner.getAreaBroker();\n\n            var $actionsBar = areaBroker.getArea('actionsBar'),\n                $toolbox = areaBroker.getToolboxArea(),\n                $navigation = areaBroker.getNavigationArea();\n\n            var allCollapsibles,\n                availableWidth,\n                previousAvailableWidth;\n\n            /**\n             * Get a reference of all collapsibles\n             */\n            function buildCollapsiblesList() {\n\n                // use the given order to build the collapsibles list or generate on in natural order\n                if(config.collapseInOrder && config.collapseOrder.length) {\n                    allCollapsibles = getCollapsiblesFromConfig();\n                }\n                // get values from DOM, grouped by prefix\n                else if(config.collapseInOrder) {\n                    allCollapsibles = getSortedCollapsiblesFromDom();\n                }\n                // get all in one chunk\n                else {\n                    allCollapsibles = getUnsortedCollapsiblesFromDom();\n                }\n            }\n\n            /**\n             * @param {jQuery} $element\n             * @returns {number} Size difference, in pixels, between collapsed and expanded state of $element\n             */\n            function getExtraWidth($element) {\n                var expandedWidth,\n                    collapsedWidth;\n\n                $element.removeClass(collapseCls);\n                expandedWidth = $element.outerWidth(true);\n                $element.addClass(collapseCls);\n                collapsedWidth = $element.outerWidth(true);\n                $element.removeClass(collapseCls);\n\n                return expandedWidth - collapsedWidth;\n            }\n\n            /**\n             * Expand or collapse elements\n             */\n            function toggleCollapsibles() {\n                availableWidth = getAvailableWidth();\n\n                availableWidth < previousAvailableWidth ? collapseInOrder() : expandInOrder();\n\n                previousAvailableWidth = availableWidth;\n            }\n\n            function collapseInOrder() {\n                var collapsiblesCopy = _.clone(allCollapsibles),\n                    toCollapse;\n\n                while (collapseNeeded() && collapsiblesCopy.length) {\n                    toCollapse = collapsiblesCopy.shift();\n                    toCollapse.$elements.addClass(collapseCls);\n                }\n            }\n\n            function collapseNeeded() {\n                return getToolbarWidth() > getAvailableWidth();\n            }\n\n            function expandInOrder() {\n                _.forEachRight(allCollapsibles, function(toExpand) {\n                    if (toExpand.$elements.hasClass(collapseCls)) {\n                        if (expandPossible(toExpand.extraWidth)) {\n                            toExpand.$elements.removeClass(collapseCls);\n                        } else {\n                            return false;\n                        }\n                    }\n                });\n            }\n\n            function expandPossible(extraWidth) {\n                return (getToolbarWidth() + extraWidth) < getAvailableWidth();\n            }\n\n            function getAvailableWidth() {\n                // Scrollbars are commonly between ~12px and ~18px in width. Subtracting 20px from the available width\n                // makes sure that scrollbars are always taken in account. The worst case scenario is that the buttons\n                // start to collapse, although they would still have had 20px available.\n                return $actionsBar.width() - 20;\n            }\n\n            function getToolbarWidth() {\n                return $toolbox.outerWidth(true) + $navigation.outerWidth(true);\n            }\n\n            /**\n             * Parse DOM for controls that can be collapsed\n             * @returns {*|jQuery|HTMLElement}\n             */\n            function getControlsFromDom() {\n                var $controls = $(),\n                    selector = '>ul>[data-control]';\n\n                if(config.collapseTools) {\n                    $controls = $controls.add($toolbox.find(selector).not('.' + labelHiddenCls).not('.' + separatorCls));\n                }\n\n                if(config.collapseNavigation) {\n                    $controls = $controls.add($navigation.find(selector).not('.' + labelHiddenCls).not('.' + separatorCls));\n                }\n\n                return $controls;\n            }\n\n            /**\n             * Get allCollapsibles based on configuration\n             *\n             * @returns {Array}\n             */\n            function getCollapsiblesFromConfig() {\n\n                return _.compact(config.collapseOrder.map(function(selector) {\n                    // some buttons are collapsed by configuration, some other are only separators: we should leave them alone\n                    var $elements = $(selector).not('.' + labelHiddenCls).not('.' + separatorCls);\n                    var extraWidth = 0;\n\n                    if ($elements.length) {\n                        $elements.each(function() {\n                            extraWidth += getExtraWidth($(this));\n                        });\n                        return {\n                            $elements: $elements,\n                            extraWidth: extraWidth\n                        };\n                    }\n                    return false;\n                }));\n            }\n\n            /**\n             * Get allCollapsibles based on DOM\n             * Build the collapse order from the left to the right, related elements are grouped.\n             *\n             * @returns {Array}\n             */\n            function getSortedCollapsiblesFromDom() {\n\n                var $elements = getControlsFromDom(),\n                    _allCollapsibles = [],\n                    order = {};\n\n                // group items by prefix\n                // eg. zoomIn and zoomOut -> zoom\n                $elements.each(function() {\n                    var ctrl = this.dataset.control,\n                        // re makes group `foo` from `foo-bar`, `fooBar` and `foo_bar`\n                        // if we do not have a prefix use the control name as key to ensure uniqueness\n                        key = ctrl.substring(0, ctrl.search(/[A-Z-_]/)) || ctrl;\n\n                    order[key] = order[key] || $();\n                    order[key] = order[key].add($(this));\n                });\n\n                // move items to allCollapsibles\n                _.forOwn(order, function($elements) {\n                    var extraWidth = 0;\n                    $elements.each(function() {\n                        extraWidth += getExtraWidth($(this));\n                    });\n                    _allCollapsibles.push({\n                        $elements: $elements,\n                        extraWidth: extraWidth\n                    })\n                });\n\n                return _.compact(_allCollapsibles);\n            }\n\n            /**\n             * Get allCollapsibles based on DOM, all buttons will be collapsed at once\n             *\n             * @returns {Array}\n             */\n            function getUnsortedCollapsiblesFromDom() {\n                var $elements = getControlsFromDom(),\n                    _allCollapsibles = [],\n                    extraWidth = 0;\n\n                $elements.each(function() {\n                    extraWidth += getExtraWidth($(this));\n                });\n\n                _allCollapsibles.push({\n                    $elements: $elements,\n                    extraWidth: extraWidth\n                });\n\n                return _.compact(_allCollapsibles);\n            }\n\n\n\n            $window.on('resize' + ns, _.throttle(function() {\n                testRunner.trigger('collapseTools');\n            }, 40));\n\n            testRunner\n                .after('renderitem loaditem', function() {\n                    previousAvailableWidth = Infinity;\n\n                    buildCollapsiblesList();\n\n                    testRunner.trigger('collapseTools');\n                })\n                .on('collapseTools' + ns, function() {\n                    toggleCollapsibles();\n                });\n        },\n\n        destroy: function destroy() {\n            $window.off(ns);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div id=\\\"qti-rubrics\\\"></div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Content Plugin : RubricBlock\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock',[\n    'jquery',\n    'i18n',\n    'core/promise',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock'\n], function ($, __, Promise, hider, pluginFactory, containerTpl){\n    'use strict';\n\n    /**\n     * Ensure the <a> links opens to blank pages\n     * @param {jQueryElement} $container - lookup scope\n     */\n    var blankifyLinks = function blankifyLinks($container){\n        $('a', $container).attr('target', '_blank');\n    };\n\n    /**\n     * Apply mathjax\n     */\n    var mathify = function mathify($container) {\n\n        return new Promise(function(resolve){\n            if($('math', $container).length > 0){\n                //load mathjax only if necessary\n                require(['mathJax'], function(MathJax){\n                    if(MathJax){\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $container[0]);\n                        MathJax.Hub.Queue(resolve);\n                    } else {\n                        resolve();\n                    }\n                }, resolve);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'rubricBlock',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            this.$element = $(containerTpl());\n\n            this.hide();\n\n            //change plugin state\n            testRunner\n                .on('ready', function(){\n                    self.hide();\n                })\n                .on('loaditem', function(){\n                    var context = testRunner.getTestContext();\n                    if(context.rubrics) {\n                        self.$element.html(context.rubrics);\n\n                        blankifyLinks(self.$element);\n                        mathify(self.$element).then(function(){\n                            // notify that the rubric blocks are loaded\n                            testRunner.trigger('rubricblock');\n                        });\n                    }\n                })\n                .on('renderitem', function(){\n                    self.show();\n                })\n                .on('unloaditem', function(){\n                    self.hide();\n                    self.$element.empty();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            //attach the element before the content area\n            var $container = this.getAreaBroker().getContentArea();\n            $container.before(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the container\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the container\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the container\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the container\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","define('core/polling',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n    eventifier = eventifier && eventifier.hasOwnProperty('default') ? eventifier['default'] : eventifier;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The default value of the polling interval\n     * @type {Number}\n     * @private\n     */\n\n    var _defaultInterval = 60 * 1000;\n    /**\n     * Create a polling manager for a particular action\n     * @param {Object|Function} [config] - A config object, or the action called on each iteration\n     * @param {Function} [config.action] - The callback action called on each iteration, the polling instance is provided as first argument\n     * @param {Number|String} [config.interval] - The minimal time between two iterations\n     * @param {Number|String} [config.max] - Set a max number of iterations, after what the polling is stopped.\n     * @param {Boolean} [config.autoStart] - Whether or not the polling should start immediately\n     * @param {Object} [config.context] - An optional context to apply on each action call\n     * @returns {polling}\n     */\n\n\n    var pollingFactory = function pollingFactory(config) {\n      var timer, promise, interval, max, iter, action, context, autoStart;\n      var state = {};\n      /**\n       * Fires a new timer\n       */\n\n      var startTimer = function startTimer() {\n        timer = setTimeout(iteration, interval);\n        state.stopped = false;\n        state.pending = true;\n      };\n      /**\n       * Stops the current timer\n       */\n\n\n      var stopTimer = function stopTimer() {\n        clearTimeout(timer);\n        timer = null;\n        state.stopped = true;\n        state.pending = false;\n      };\n      /**\n       * Runs an iteration of the polling loop\n       */\n\n\n      var iteration = function iteration() {\n        // prevent more iterations than needed to be ran\n        if (max && iter >= max) {\n          // breaks the polling\n          polling.stop();\n          return;\n        } // count the iteration\n\n\n        iter = (iter || 0) + 1;\n        state.processing = true;\n        state.pending = false;\n        /**\n         * Notifies the action is about to be called\n         * @event polling#call\n         */\n\n        polling.trigger('call'); // process the action in the right context\n\n        action.call(context, polling); // next iteration in synchronous mode\n\n        if (!promise && !state.stopped) {\n          state.processing = false;\n          startTimer();\n        }\n      };\n      /**\n       * Defines the polling manager\n       * @type {Object}\n       */\n\n\n      var polling = {\n        /**\n         * Gets the current action into asynchronous mode.\n         * The next iteration won't be executed until the resolve method has been called.\n         * However if the reject method is called, the polling is then stopped!\n         * @returns {Object} Returns a promise resolver that provides resolve() and reject() methods\n         */\n        async: function async() {\n          var resolver = {}; // create a promise and extract the control callbacks\n\n          promise = new Promise(function (resolve, reject) {\n            resolver.resolve = resolve;\n            resolver.reject = reject;\n          }); // directly install the pending actions\n\n          promise.then(function () {\n            promise = null;\n            state.processing = false; // next iteration only if allowed\n\n            if (!state.stopped) {\n              startTimer();\n            }\n            /**\n             * Notifies the polling continues\n             * @event polling#resolved\n             */\n\n\n            polling.trigger('resolved');\n          }).catch(function () {\n            promise = null;\n            state.processing = false; // breaks the polling\n\n            polling.stop();\n            /**\n             * Notifies the polling has been halted\n             * @event polling#rejected\n             */\n\n            polling.trigger('rejected');\n          });\n          /**\n           * Notifies the current action is asynchronous\n           * @event polling#async\n           * @param {Object} resolver\n           * @param {Function} resolver.resolve\n           * @param {Function} resolver.reject\n           */\n\n          polling.trigger('async', resolver);\n          return resolver;\n        },\n\n        /**\n         * Forces the next iteration to be executed now, unless it is already running.\n         * If the polling has been stopped, start it again.\n         * @returns {polling}\n         */\n        next: function next() {\n          var _next; // reset the counter if the polling is stopped\n\n\n          if (state.stopped) {\n            iter = 0;\n          } // ensure the scheduling if off\n\n\n          stopTimer(); // prevent more iterations than needed to be ran\n\n          if (max && iter >= max) {\n            return this;\n          } // the next() method can be called either to force a next iteration or to start immediately the action\n          // so we need to ensure the schedule is not blocked\n\n\n          state.stopped = false;\n\n          if (!promise) {\n            /**\n             * Notifies the action\n             * @event polling#next\n             * @param {polling} polling\n             */\n            this.trigger('next');\n            iteration();\n          } else {\n            // as a promise is still pending, ensure a call to next() will be processed after\n            _next = this.next.bind(this);\n            promise.then(_next).catch(_next);\n          }\n\n          return this;\n        },\n\n        /**\n         * Starts the polling if it is not currently running\n         * @returns {polling}\n         */\n        start: function start() {\n          if (!timer) {\n            iter = 0;\n            startTimer();\n            /**\n             * Notifies the start\n             * @event polling#start\n             */\n\n            this.trigger('start');\n          }\n\n          return this;\n        },\n\n        /**\n         * Stops the polling if it is currently running\n         * @returns {polling}\n         */\n        stop: function stop() {\n          stopTimer();\n          /**\n           * Notifies the stop\n           * @event polling#stop\n           */\n\n          this.trigger('stop');\n          return this;\n        },\n\n        /**\n         * Sets the minimum time interval between two actions\n         * @param {Number|String} value\n         * @returns {polling}\n         */\n        setInterval: function setInterval(value) {\n          interval = Math.abs(parseInt(value, 10) || _defaultInterval);\n          /**\n           * Notifies the interval change\n           * @event polling#setinterval\n           * @param {Number} interval\n           */\n\n          this.trigger('setinterval', interval);\n          return this;\n        },\n\n        /**\n         * Gets the minimum time interval between two actions\n         * @returns {Number}\n         */\n        getInterval: function getInterval() {\n          return interval;\n        },\n\n        /**\n         * Sets the polling action\n         * @param {Function} fn\n         * @returns {polling}\n         */\n        setAction: function setAction(fn) {\n          action = fn;\n          /**\n           * Notifies the action change\n           * @event polling#setaction\n           * @param {Function} action\n           */\n\n          this.trigger('setaction', action);\n          return this;\n        },\n\n        /**\n         * Gets the polling action\n         * @returns {Function}\n         */\n        getAction: function getAction() {\n          return action;\n        },\n\n        /**\n         * Sets the context applied on each action call\n         * @param {Object} ctx\n         * @returns {polling}\n         */\n        setContext: function setContext(ctx) {\n          context = ctx || this;\n          /**\n           * Notifies the context change\n           * @event polling#setcontext\n           * @param {Object} context\n           */\n\n          this.trigger('setcontext', ctx);\n          return this;\n        },\n\n        /**\n         * Gets the context applied on each action call\n         * @returns {Object}\n         */\n        getContext: function getContext() {\n          return context;\n        },\n\n        /**\n         * Sets the max number of polling occurrences\n         * @param {Number} value\n         * @returns {polling}\n         */\n        setMax: function setMax(value) {\n          max = Math.abs(parseInt(value, 10) || 0);\n          return this;\n        },\n\n        /**\n         * Gets the max number of polling occurrences\n         * @returns {Number}\n         */\n        getMax: function getMax() {\n          return max;\n        },\n\n        /**\n         * Gets the number of ran iterations\n         * @returns {Number}\n         */\n        getIteration: function getIteration() {\n          return iter || 0;\n        },\n\n        /**\n         * Checks if the manager is in a particular state\n         * @param {String} stateName The name of the state to check. Possible values are:\n         * - stopped: the polling manager is stopped, and won't process action until restart\n         * - pending: the polling manager has scheduled an action an is waiting for it processing\n         * - processing: the polling manager is currently processing an action and wait for its completion\n         * @returns {Boolean}\n         */\n        is: function is(stateName) {\n          return !!state[stateName];\n        }\n      };\n      eventifier(polling); // some defaults\n\n      interval = _defaultInterval;\n      context = polling;\n      action = null;\n      state.stopped = true;\n      autoStart = false;\n      iter = 0; // maybe only the action is provided\n\n      if (_.isFunction(config)) {\n        polling.setAction(config);\n        config = null;\n      } // loads the config\n\n\n      if (_.isObject(config)) {\n        polling.setAction(config.action);\n        polling.setInterval(config.interval || arguments[1]);\n        polling.setContext(config.context);\n        polling.setMax(config.max);\n        autoStart = !!config.autoStart;\n      }\n\n      if (autoStart) {\n        polling.start();\n      }\n\n      return polling;\n    };\n\n    return pollingFactory;\n\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/connectivity/connectivity', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"connectivity-box \";\n  if (helper = helpers.state) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.state); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span data-control=\\\"connectivity-connected\\\" class=\\\"qti-controls icon-connect\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Connected to server\", options) : helperMissing.call(depth0, \"__\", \"Connected to server\", options)))\n    + \"\\\"></span>\\n    <span data-control=\\\"connectivity-disconnected\\\" class=\\\"qti-controls icon-disconnect\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Disconnected from server\", options) : helperMissing.call(depth0, \"__\", \"Disconnected from server\", options)))\n    + \"\\\"></span>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/connectivity/connectivity',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'core/polling',\n    'ui/waitingDialog/waitingDialog',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/controls/connectivity/connectivity'\n], function ($, _, __, Promise, pollingFactory, waitingDialog, pluginFactory, connectivityTpl) {\n    'use strict';\n\n\n    /**\n     * The plugin default configuration\n     * @type {Object}\n     * @property {Number} checkInterval - when offline, interval to check if we're back online\n     * @property {Boolean} indicator - do we display the indicator in the test UI\n     */\n    var defaultConfig = {\n        checkInterval : 30 * 1000,\n        indicator     : true\n    };\n\n\n    /**\n     * Creates the connectivity plugin.\n     * Detects connectivity issues\n     */\n    return pluginFactory({\n\n        name: 'connectivity',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self       = this;\n            var testRunner = this.getTestRunner();\n            var proxy      = testRunner.getProxy();\n            var config     = _.defaults(this.getConfig() || {}, defaultConfig);\n\n            //Displays a connectivity indicator\n            if(config && config.indicator){\n\n                //create the indicator\n                this.$element = $(connectivityTpl({\n                    state: proxy.isOnline() ? 'connected' : 'disconnected'\n                }));\n\n                testRunner\n                    .on('disconnect', function(){\n                        self.$element.removeClass('connected').addClass('disconnected');\n                    })\n                    .on('reconnect', function() {\n                        self.$element.removeClass('disconnected').addClass('connected');\n                    });\n            }\n\n            //update the interval, with the new value\n            if(this.polling && _.isNumber(config.checkInterval)){\n                this.polling.setInterval(config.checkInterval);\n            }\n        },\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         * We do it before init to catch even offline during the init sequence\n         */\n        install: function install() {\n            var self = this;\n\n            var waiting    = false;\n\n            var testRunner = this.getTestRunner();\n            var proxy      = testRunner.getProxy();\n\n            /**\n             * Display the waiting dialog, while waiting the connection to be back\n             * @param {String} [messsage] - additional message for the dialog\n             * @returns {Promise} resolves once the wait is over and the user click on 'proceed'\n             */\n            this.displayWaitingDialog = function displayWaitingDialog(message){\n\n                var dialog;\n                return new Promise(function(resolve) {\n                    if(!waiting){\n                        waiting = true;\n\n                        //if a pause event occurs while waiting,\n                        //we also wait the connection to be back\n                        testRunner.before('pause.waiting', function(){\n                            return new Promise(function(pauseResolve){\n                                proxy.off('reconnect.pausing')\n                                    .after('reconnect.pausing', pauseResolve);\n                            });\n                        });\n\n                        //creates the waiting modal dialog\n                        dialog = waitingDialog({\n                            message : __('You are encountering a prolonged connectivity loss. ') + message,\n                            waitContent : __('Please wait while we try to restore the connection.'),\n                            proceedContent : __('The connection seems to be back, please proceed')\n                        })\n                        .on('proceed', function(){\n                            resolve();\n                        })\n                        .on('render', function(){\n                            proxy\n                                .off('reconnect.waiting')\n                                .after('reconnect.waiting', function(){\n                                    testRunner.off('pause.waiting');\n                                    waiting = false;\n                                    dialog.endWait();\n                                });\n                        });\n                    }\n                });\n            };\n\n            //Last chance to check the connection,\n            //by regular polling on the \"up\" signal\n            this.polling = pollingFactory({\n                action: function action () {\n                    testRunner.getProxy()\n                        .telemetry(testRunner.getTestContext().itemIdentifier, 'up')\n                        .catch(_.noop);\n                },\n                interval: defaultConfig.checkInterval,\n                autoStart: false\n            });\n\n\n            //the Proxy is the only one to know something about connectivity\n            proxy.on('disconnect', function disconnect(source) {\n                if (!testRunner.getState('disconnected')) {\n                    testRunner.setState('disconnected', true);\n                    testRunner.trigger('disconnect', source);\n                    self.polling.start();\n                }\n            })\n            .on('reconnect', function reconnect() {\n                if (testRunner.getState('disconnected')) {\n                    testRunner.setState('disconnected', false);\n                    testRunner.trigger('reconnect');\n                    self.polling.stop();\n                }\n            });\n\n            //intercept tries to leave while offline\n            //this could be caused by pauses for example.\n            //If caused by an action like exitTest it will be handled\n            //by navigation errors (see below)\n            testRunner.before('leave', function(e, data){\n                if (proxy.isOffline()) {\n                    self.displayWaitingDialog(data.message)\n                        .then(function(){\n                            testRunner.trigger('leave', data);\n                        })\n                        .catch(function(generalErr){\n                            testRunner.trigger('error', generalErr);\n                        });\n\n                    return false;\n                }\n            });\n\n            //intercept offline navigation errors\n            testRunner.before('error.connectivity', function(e, err) {\n\n                // detect and prevent connectivity errors\n                if (proxy.isConnectivityError(err)){\n                    return false;\n                }\n\n                if (proxy.isOffline()) {\n                    self.displayWaitingDialog(err.message)\n                        .then(function(){\n                            if(err.type === 'nav'){\n                                testRunner.loadItem(testRunner.getTestContext().itemIdentifier);\n                            }\n                            if(err.type === 'finish'){\n                                testRunner.finish();\n                            }\n                            if(err.type === 'pause'){\n                                testRunner.trigger('pause', {\n                                    reasons: err.data && err.data.reasons,\n                                    message : err.data && err.data.comment\n                                });\n                            }\n                        })\n                        .catch(function(generalErr){\n                            testRunner.trigger('error', generalErr);\n                        });\n                    return false;\n                }\n            });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $container = this.getAreaBroker().getControlArea();\n            if(this.$element){\n                $container.append(this.$element);\n            }\n        }\n    });\n});\n\n","define('core/timer',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n     */\n\n    /**\n     * Gets a timer\n     * @param {Object|Boolean} config - The init config\n     * @param {Boolean} [config.autoStart] - Auto start the timer (default: true)\n     * @param {Number} [config.startDuration] - Initial duration (default: 0)\n     * @returns {timer}\n     */\n    function timerFactory(config) {\n      var initConfig = config || {};\n      var begin = now();\n      var last = begin;\n      var duration = initConfig.startDuration || 0;\n      var state = {};\n      var disableAutoStart = false === initConfig.autoStart;\n      /**\n       * The timer instance\n       * @type {timer}\n       */\n\n      var timer = {\n        /**\n         * Starts the timer\n         * @param {Number} [startDuration] - Initial duration (default: 0)\n         * @returns {timer}\n         */\n        start: function start(startDuration) {\n          begin = now();\n          last = begin;\n          duration = startDuration || 0;\n          state.running = true;\n          state.started = true;\n          return this;\n        },\n\n        /**\n         * Gets the time elapsed since the last tick\n         * @returns {number}\n         */\n        tick: function tick() {\n          var timestamp = now();\n          var elapsed;\n\n          if (state.running) {\n            elapsed = timestamp - last;\n            last = timestamp;\n          }\n\n          return elapsed;\n        },\n\n        /**\n         * Pause the timer\n         * @returns {timer}\n         */\n        pause: function pause() {\n          if (state.running) {\n            duration += now() - begin;\n            state.running = false;\n          }\n\n          return this;\n        },\n\n        /**\n         * Resume the timer\n         * @returns {timer}\n         */\n        resume: function resume() {\n          if (!state.running) {\n            begin = now();\n            last = begin;\n            state.started = true;\n            state.running = true;\n          }\n\n          return this;\n        },\n\n        /**\n         * Stops the timer\n         * @returns {timer}\n         */\n        stop: function stop() {\n          if (state.running) {\n            duration += now() - begin;\n          }\n\n          state.running = false;\n          state.started = false;\n          return this;\n        },\n\n        /**\n         * Gets the time elapsed since the last start.\n         * If the timer is stopped, gets the total duration between start and stop.\n         * @returns {number}\n         */\n        getDuration: function getDuration() {\n          if (state.running) {\n            return duration + (now() - begin);\n          }\n\n          return duration;\n        },\n\n        /**\n         * Checks if the timer is in a particular state\n         * @param {String} stateName\n         * @returns {Boolean}\n         */\n        is: function is(stateName) {\n          return !!state[stateName];\n        },\n\n        /**\n         * Add time to the timer\n         * @param {Number} time\n         * @returns {timer}\n         */\n        add: function add(time) {\n          time = parseFloat(time);\n          duration += time;\n          last -= time;\n          return this;\n        },\n\n        /**\n         * Remove time from the timer\n         * @param {Number} time\n         * @returns {timer}\n         */\n        sub: function sub(time) {\n          time = parseFloat(time);\n          duration -= time;\n          last += time;\n          return this;\n        }\n      };\n      /**\n       * Simple wrapper around the time provider\n       * @returns {Number}\n       */\n\n      function now() {\n        return window.performance.now();\n      }\n\n      if (!disableAutoStart) {\n        timer.start(initConfig.startDuration);\n      }\n\n      return timer;\n    }\n\n    return timerFactory;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Duration (record exact spent time duration)\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/duration/duration',[\n    'lodash',\n    'core/polling',\n    'core/timer',\n    'core/promise',\n    'taoTests/runner/plugin',\n], function(_, pollingFactory, timerFactory, Promise, pluginFactory) {\n    'use strict';\n\n    /**\n     * Time interval between duration capture in ms\n     * @type {Number}\n     */\n    var refresh = 1000;\n\n\n    /**\n     * Creates the timer plugin\n     */\n    return pluginFactory({\n\n        name: 'duration',\n\n        /**\n         * Install step, add behavior before the lifecycle.\n         */\n        install: function install() {\n            //define the \"duration\" store as \"volatile\" (removed on browser change).\n            this.getTestRunner().getTestStore().setVolatile(this.getName());\n        },\n\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            //where the duration of attempts are stored\n            return testRunner.getPluginStore(this.getName())\n                .then(function(durationStore) {\n\n                    /**\n                     * Gets the duration of a particular item from the store\n                     * @param {String} attemptId - the attempt id to get the duration for\n                     * @returns {Promise}\n                     */\n                    function getItemDuration(attemptId) {\n                        if (!/^(.*)+#+\\d+$/.test(attemptId)) {\n                            return Promise.reject(new Error('Is it really an attempt id, like \"itemid#attempt\"'));\n                        }\n\n                        return durationStore.getItem(attemptId);\n                    }\n\n                    //one stopwatch to count the time\n                    self.stopwatch = timerFactory({\n                        autoStart: false\n                    });\n\n                    //update the duration on a regular basis\n                    self.polling = pollingFactory({\n\n                        action: function updateDuration() {\n\n                            //how many time elapsed from the last tick ?\n\n                            var context = testRunner.getTestContext();\n\n                            //store by attempt\n                            var itemAttemptId = context.itemIdentifier + '#' + context.attempt;\n\n                            durationStore.getItem(itemAttemptId).then(function(duration){\n                                var elapsed = self.stopwatch.tick();\n                                duration = _.isNumber(duration) ? duration : 0;\n                                elapsed = _.isNumber(elapsed) && elapsed > 0 ? (elapsed / 1000) : 0;\n\n                                //store the last duration\n                                durationStore.setItem(itemAttemptId, duration + elapsed);\n                            });\n                        },\n                        interval: refresh,\n                        autoStart: false\n                    });\n\n                    //change plugin state\n                    testRunner\n\n                        .after('renderitem', function(){\n                            self.enable();\n                        })\n                        .on('enableitem', function() {\n                            self.enable();\n                        })\n\n                        .before('move skip exit timeout', function() {\n                            var context = testRunner.getTestContext();\n                            var itemAttemptId = context.itemIdentifier + '#' + context.attempt;\n\n                            return getItemDuration(itemAttemptId).then(function(duration) {\n                                var params = {\n                                    itemDuration: 0\n                                };\n                                if (_.isNumber(duration) && duration > 0) {\n                                    params.itemDuration = duration;\n                                }\n\n                                // the duration will be sent to the server with the next request,\n                                // usually submitItem() or callItemAction()\n                                testRunner.getProxy().addCallActionParams(params);\n                            });\n                        })\n\n                        .on('move skip exit timeout error disableitem', function(){\n                            self.disable();\n                        })\n\n                        /**\n                          * @event duration.get\n                          * @param {String} attemptId - the attempt id to get the duration for\n                          * @param {getDuration} getDuration - a receiver callback\n                          */\n                        .on('plugin-get.duration', function(e, attemptId, getDuration) {\n                            if (_.isFunction(getDuration)) {\n                                getDuration(getItemDuration(attemptId));\n                            }\n                        });\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.polling.stop();\n            this.stopwatch.stop();\n        },\n\n        /**\n         * Enables the duration count\n         */\n        enable: function enable() {\n            if (!this.getState('enabled')) {\n                this.polling.start();\n                this.stopwatch.resume();\n            }\n        },\n\n        /**\n         * Disables the duration count\n         */\n        disable: function disable() {\n            if (this.getState('enabled')) {\n                this.polling.stop();\n                this.stopwatch.pause();\n            }\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/map',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * @typedef {Object} itemStats\n     * @property {Number} questions - the number of questions items\n     * @property {Number} answered - the number of answered questions\n     * @property {Number} flagged - the number of items flagged for review\n     * @property {Number} viewed - the number of viewed items\n     * @property {Number} total - the total number of items\n     * @property {Number} questionsViewed - the number of viewed questions\n     */\n\n    /**\n     * Gets an empty stats record\n     * @returns {itemStats}\n     */\n    function getEmptyStats() {\n        return {\n            questions: 0,\n            answered: 0,\n            flagged: 0,\n            viewed: 0,\n            total: 0,\n            questionsViewed: 0,\n        };\n    }\n\n    /**\n     * Defines a helper that provides extractors for an assessment test map\n     */\n    return {\n        /**\n         * Gets the jumps table\n         * @param {Object} map - The assessment test map\n         * @returns {Object}\n         */\n        getJumps: function getJumps(map) {\n            return map && map.jumps;\n        },\n\n        /**\n         * Gets the parts table\n         * @param {Object} map - The assessment test map\n         * @returns {Object}\n         */\n        getParts: function getParts(map) {\n            return map && map.parts;\n        },\n\n        /**\n         * Get sections table\n         * @param {Object} map - The assessment test map\n         * @returns {Object} the sections\n         */\n        getSections: function getSections(map) {\n            var parts = this.getParts(map),\n                result = {};\n\n            _.forEach(parts, function (part) {\n                var sections = part.sections;\n                if (sections) {\n                    _.forEach(sections, function (section) {\n                        result[section.id] = section;\n                    });\n                }\n            });\n            return result;\n        },\n\n        /**\n         * Get active item from the test map\n         * @param {Object} map - The assessment test map\n         * @returns {Object} the active item\n         */\n        getActiveItem: function getActiveItem(map) {\n            var parts = this.getParts(map),\n                result = {};\n\n            _.forEach(parts, function (part) {\n                var sections = part.sections;\n                if (sections) {\n                    _.forEach(sections, function (section) {\n                        if (section.active) {\n                            var items = section.items;\n                            _.forEach(items, function(item) {\n                                if (item.active) {\n                                    result = item;\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n            return result;\n        },\n\n        /**\n         * Return the list of remaining sections.\n         * @param {Object} map - The assessment test map\n         * @param {String} sectionId - The next sections will be gathered once this sectionId has been reached\n         * @returns {Object} the next sections\n         */\n        getNextSections: function getNextSections(map, sectionId) {\n            var sections = this.getSections(map),\n                result = {},\n                canList = false;\n\n            _.forEach(sections, function (section) {\n                if (canList) {\n                    result[section.id] = section;\n                }\n                if (section.id === sectionId) {\n                    canList = true;\n                }\n            });\n\n            return result;\n        },\n\n        /**\n         * Gets the jump at a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getJump: function getJump(map, position) {\n            var jumps = this.getJumps(map);\n            return jumps && jumps[position];\n        },\n\n        /**\n         * Gets a test part by its identifier\n         * @param {Object} map - The assessment test map\n         * @param {String} partName - The identifier of the test part\n         * @returns {Object}\n         */\n        getPart: function getPart(map, partName) {\n            var parts = this.getParts(map);\n            return parts && parts[partName];\n        },\n\n        /**\n         * Gets a test section by its identifier\n         * @param {Object} map - The assessment test map\n         * @param {String} sectionName - The identifier of the test section\n         * @returns {Object}\n         */\n        getSection: function getSection(map, sectionName) {\n            var parts = this.getParts(map);\n            var section = null;\n            _.forEach(parts, function (part) {\n                var sections = part.sections;\n                if (sections && sections[sectionName]) {\n                    section = sections[sectionName];\n                    return false;\n                }\n            });\n            return section;\n        },\n\n        /**\n         * Gets a test item by its identifier\n         * @param {Object} map - The assessment test map\n         * @param {String} itemName - The identifier of the test item\n         * @returns {Object}\n         */\n        getItem: function getItem(map, itemName) {\n            var jump = _.find(this.getJumps(map), {identifier: itemName});\n            return this.getItemAt(map, jump && jump.position);\n        },\n\n        /**\n         * Gets the global stats of the assessment test\n         * @param {Object} map - The assessment test map\n         * @returns {itemStats}\n         */\n        getTestStats: function getTestStats(map) {\n            return map && map.stats;\n        },\n\n        /**\n         * Gets the stats of the test part containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {String} partName - The identifier of the test part\n         * @returns {itemStats}\n         */\n        getPartStats: function getPartStats(map, partName) {\n            var part = this.getPart(map, partName);\n            return part && part.stats;\n        },\n\n        /**\n         * Gets the stats of the test section containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {String} sectionName - The identifier of the test section\n         * @returns {itemStats}\n         */\n        getSectionStats: function getSectionStats(map, sectionName) {\n            var section = this.getSection(map, sectionName);\n            return section && section.stats;\n        },\n\n        /**\n         * Gets the stats related to a particular scope\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The current position\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n         * @returns {itemStats}\n         */\n        getScopeStats: function getScopeStats(map, position, scope) {\n            var jump = this.getJump(map, position);\n            switch (scope) {\n                case 'section':\n                case 'testSection':\n                    return this.getSectionStats(map, jump && jump.section);\n\n                case 'part':\n                case 'testPart':\n                    return this.getPartStats(map, jump && jump.part);\n\n                default:\n                case 'test':\n                    return this.getTestStats(map);\n            }\n        },\n\n        /**\n         * Gets the map of a particular scope from a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The current position\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n         * @returns {object} The scoped map\n         */\n        getScopeMap: function getScopeMap(map, position, scope) {\n            // need a clone of the map as we will change some properties\n            var scopeMap = _.cloneDeep(map || {});\n\n            // gets the current part and section\n            var jump = this.getJump(scopeMap, position);\n            var part = this.getPart(scopeMap, jump && jump.part);\n            var section = this.getSection(scopeMap, jump && jump.section);\n\n            // reduce the map to the scope part\n            if (scope && scope !== 'test') {\n                scopeMap.parts = {};\n                if (part) {\n                    scopeMap.parts[jump.part] = part;\n                }\n            }\n\n            // reduce the map to the scope section\n            if (part && (scope === 'section' || scope === 'testSection')) {\n                part.sections = {};\n                if (section) {\n                    part.sections[jump.section] = section;\n                }\n            }\n\n            // update the stats to reflect the scope\n            if (section) {\n                section.stats = this.computeItemStats(section.items);\n            }\n            if (part) {\n                part.stats = this.computeStats(part.sections);\n            }\n            scopeMap.stats = this.computeStats(scopeMap.parts);\n\n            return scopeMap;\n        },\n\n        /**\n         * Gets the map of a particular scope from a current context\n         * @param {Object} map - The assessment test map\n         * @param {Object} context - The current session context\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n         * @returns {object} The scoped map\n         */\n        getScopeMapFromContext: function getScopeMapFromContext(map, context, scope) {\n            // need a clone of the map as we will change some properties\n            var scopeMap = _.cloneDeep(map || {});\n            var part;\n            var section;\n\n            // gets the current part and section\n            if (context && context.testPartId) {\n                part = this.getPart(scopeMap, context.testPartId);\n            }\n            if (context && context.sectionId) {\n                section = this.getSection(scopeMap, context.sectionId);\n            }\n\n            // reduce the map to the scope part\n            if (scope && scope !== 'test') {\n                scopeMap.parts = {};\n                if (part) {\n                    scopeMap.parts[context.testPartId] = part;\n                }\n            }\n\n            // reduce the map to the scope section\n            if (part && (scope === 'section' || scope === 'testSection')) {\n                part.sections = {};\n                if (section) {\n                    part.sections[context.sectionId] = section;\n                }\n            }\n\n            // update the stats to reflect the scope\n            if (section) {\n                section.stats = this.computeItemStats(section.items);\n            }\n            if (part) {\n                part.stats = this.computeStats(part.sections);\n            }\n            scopeMap.stats = this.computeStats(scopeMap.parts);\n\n            return scopeMap;\n        },\n\n        /**\n         * Gets the test part containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getItemPart: function getItemPart(map, position) {\n            var jump = this.getJump(map, position);\n            return this.getPart(map, jump && jump.part);\n        },\n\n        /**\n         * Gets the test section containing a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getItemSection: function getItemSection(map, position) {\n            var jump = this.getJump(map, position);\n            var part = this.getPart(map, jump && jump.part);\n            var sections = part && part.sections;\n            return sections && sections[jump && jump.section];\n        },\n\n        /**\n         * Gets the item located at a particular position\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        getItemAt: function getItemAt(map, position) {\n            var jump = this.getJump(map, position);\n            var part = this.getPart(map, jump && jump.part);\n            var sections = part && part.sections;\n            var section = sections && sections[jump && jump.section];\n            var items = section && section.items;\n            return items && items[jump && jump.identifier];\n        },\n\n        /**\n         * Gets the identifier of an existing item\n         * @param {Object} map - The assessment test map\n         * @param {Number|String} position - The position of the item, can already be the identifier\n         * @returns {String}\n         */\n        getItemIdentifier: function getItemIdentifier(map, position) {\n            var item;\n            if (_.isFinite(position)) {\n                item = this.getItemAt(map, position);\n            } else {\n                item = this.getItem(map, position);\n            }\n            return item && item.id;\n        },\n\n        /**\n         * Applies a callback on each item of the provided map\n         * @param {Object} map - The assessment test map\n         * @param {Function} callback(item, section, part, map) - A callback to apply on each item\n         * @returns {Object}\n         */\n        each: function each(map, callback) {\n            if (_.isFunction(callback)) {\n                _.forEach(map && map.parts, function(part) {\n                    _.forEach(part && part.sections, function(section) {\n                        _.forEach(section && section.items, function(item) {\n                            callback(item, section, part, map);\n                        });\n                    });\n                });\n            }\n            return map;\n        },\n\n        /**\n         * Update the map stats from a particular item\n         * @param {Object} map - The assessment test map\n         * @param {Number} position - The position of the item\n         * @returns {Object}\n         */\n        updateItemStats: function updateItemStats(map, position) {\n            var jump = this.getJump(map, position);\n            var part = this.getPart(map, jump && jump.part);\n            var sections = part && part.sections;\n            var section = sections && sections[jump && jump.section];\n\n            if (section) {\n                section.stats = this.computeItemStats(section.items);\n            }\n            if (part) {\n                part.stats = this.computeStats(part.sections);\n            }\n            if (map) {\n                map.stats = this.computeStats(map.parts);\n            }\n\n            return map;\n        },\n\n        /**\n         * Computes the stats for a list of items\n         * @param {Object} items\n         * @returns {itemStats}\n         */\n        computeItemStats: function computeItemStats(items) {\n            return _.reduce(items, function accStats(acc, item) {\n                if (!item.informational) {\n                    acc.questions++;\n\n                    if (item.answered) {\n                        acc.answered++;\n                    }\n\n                    if (item.viewed) {\n                        acc.questionsViewed++;\n                    }\n                }\n                if (item.flagged) {\n                    acc.flagged++;\n                }\n                if (item.viewed) {\n                    acc.viewed++;\n                }\n                acc.total++;\n                return acc;\n            }, getEmptyStats());\n        },\n\n        /**\n         * Computes the global stats of a collection of stats\n         * @param {Object} collection\n         * @returns {itemStats}\n         */\n        computeStats: function computeStats(collection) {\n            return _.reduce(collection, function accStats(acc, item) {\n                acc.questions += item.stats.questions;\n                acc.answered += item.stats.answered;\n                acc.flagged += item.stats.flagged;\n                acc.viewed += item.stats.viewed;\n                acc.total += item.stats.total;\n                acc.questionsViewed += item.stats.questionsViewed;\n                return acc;\n            }, getEmptyStats());\n        },\n\n        /**\n         * Patch a testMap with a partial testMap.\n         *\n         * If the currentMap is null or the scope is test,\n         * we just use the partialMap as it is.\n         *\n         * Indexes, position and stats will be (re)built.\n         *\n         * @param {Object} currentMap - the map to patch\n         * @param {Object} partialMap - the patch\n         * @param {String} partialMap.scope - indicate the scope of the patch (test, part or section)\n         * @returns {Object} the patched testMap\n         * @throws {TypeError} if the partialMap is no a map\n         */\n        patch : function patch(currentMap, partialMap) {\n            var self = this;\n            var targetMap;\n\n            if(!_.isPlainObject(partialMap) || !partialMap.parts) {\n                throw new TypeError('Invalid test map format');\n            }\n\n            if(!currentMap || partialMap.scope === 'test'){\n                targetMap = _.cloneDeep(partialMap);\n            } else {\n\n                targetMap = _.cloneDeep(currentMap);\n\n                _.forEach(partialMap.parts, function(partialPart, targetPartId){\n                    if (partialMap.scope === 'part') {\n                        //replace the target part\n                        targetMap.parts[targetPartId] = _.cloneDeep(partialPart);\n                    }\n                    if (partialMap.scope === 'section') {\n                        _.forEach(partialPart.sections, function(partialSection, targetSectionId){\n                            //replace the target section\n                            targetMap.parts[targetPartId].sections[targetSectionId] = _.cloneDeep(partialSection);\n\n                            //compte new section stats\n                            targetMap.parts[targetPartId].sections[targetSectionId].stats = self.computeItemStats(targetMap.parts[targetPartId].sections[targetSectionId].items);\n                        });\n                    }\n                    //compte new/updated part stats\n                    targetMap.parts[targetPartId].stats = self.computeStats(targetMap.parts[targetPartId].sections);\n                });\n                //compte updated test stats\n                targetMap.stats = this.computeStats(targetMap.parts);\n            }\n\n            //the updated map can have a different size than the original\n            targetMap = this.reindex(targetMap);\n\n            return targetMap;\n        },\n\n        /**\n         * Rebuild the indexes, positions of all map parts.\n         * Then recreate the jump table.\n         *\n         * @param {Object} map - the map to reindex\n         * @returns {Object} the brand new map\n         * @throws {TypeError} if the map is no a map\n         */\n        reindex : function reindex(map){\n            var offset        = 0;\n            var offsetPart    = 0;\n            var offsetSection = 0;\n            var lastPartId;\n            var lastSectionId;\n\n            if(!_.isPlainObject(map) || !map.parts) {\n                throw new TypeError('Invalid test map format');\n            }\n\n            //remove the jump table\n            map.jumps = [];\n\n            //browse the test map, by position\n            _.sortBy(map && map.parts, 'position').forEach(function(part) {\n                _.sortBy(part && part.sections, 'position').forEach(function(section) {\n                    _.sortBy(section && section.items, 'position').forEach(function(item) {\n\n                        if(lastPartId !== part.id){\n                            offsetPart = 0;\n                            lastPartId = part.id;\n                            part.position = offset;\n                        }\n                        if(lastSectionId !== section.id){\n                            offsetSection = 0;\n                            lastSectionId = section.id;\n                            section.position = offset;\n                        }\n                        item.position = offset;\n                        item.index    = offsetSection + 1;\n                        item.positionInPart = offsetPart;\n                        item.positionInSection = offsetSection;\n\n                        map.jumps[offset] = {\n                            identifier : item.id,\n                            section    : section.id ,\n                            part       : part.id,\n                            position   : offset\n                        };\n\n                        offset++;\n                        offsetSection++;\n                        offsetPart++;\n                    });\n                });\n            });\n\n            return map;\n        },\n\n        /**\n         * Create the jump table for a test map\n         *\n         * @param {Object} map - the map\n         * @returns {Object} the brand new map with a jump table\n         * @throws {TypeError} if the map is no a map\n         */\n        createJumpTable : function createJumpTable(map){\n\n            if(!_.isPlainObject(map) || !map.parts) {\n                throw new TypeError('Invalid test map format');\n            }\n\n            map.jumps = [];\n\n            this.each(map, function (item, section, part){\n                var offset = item.position;\n                map.jumps[offset] = {\n                    identifier : item.id,\n                    section    : section.id ,\n                    part       : part.id,\n                    position   : offset\n                };\n            });\n\n            return map;\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Compute the current progress in the Test Runner\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/progressbar/progress',[\n    'lodash',\n    'i18n',\n    'core/format',\n    'taoQtiTest/runner/helpers/map'\n], function (_, __, format, mapHelper) {\n    'use strict';\n\n    /**\n     * @typedef {Object} progressDetails\n     * @property {Number} position - the position in the current element\n     * @property {Number} reached - the number of reached elements (at least one item viewed)\n     * @property {Number} viewed - the number of viewed elements (all items viewed)\n     * @property {Number} completed - the number of completed elements (all questions answered)\n     * @property {Number} total - the total number of elements\n     */\n\n    /**\n     * @typedef {itemStats} progressData\n     * @property {Number} position - the position in the scope\n     * @property {Number} overallCompleted - the number of completed items in the test\n     * @property {Number} overall - the total number of items in the test\n     * @property {progressDetails} sections - the details of testSections in the scope\n     * @property {progressDetails} parts - the details of testParts in the scope\n     * @property {progressDetails} answerableSections - the details of testSections that contain questions in the scope\n     * @property {progressDetails} answerableParts - the details of testParts that contain questions in the scope\n     * @property {progressDetails} matchedCategories - the details of items that match the expected categories in the scope\n     */\n\n    /**\n     * @typedef {Object} progressIndicator\n     * @property {Number} position - the position in the scope\n     * @property {Number} total - the length of the scope\n     * @property {Number} ratio - the progress ratio of the indicator\n     * @property {String} label - the text to display for the indicator\n     */\n\n    /**\n     * @typedef {Object} progressConfig\n     * @property {String} scope - the scope of the progression\n     * @property {String} indicator - the type of progression\n     * @property {Bool} showTotal - display 'item x of y' (true) | 'item x'\n     * @property {Array} categories - categories to count by them\n     */\n\n    /**\n     * Default progress config\n     * @type {Object}\n     */\n    var defaultConfig = {\n        scope: 'test',\n        indicator: 'percentage',\n        showTotal: true,\n        categories: []\n    };\n\n    /**\n     * List of labels by types\n     * @type {Object}\n     */\n    var labels = {\n        item: {\n            long: __('Item %d of %d'),\n            short: __('Item %d')\n        },\n        section: {\n            long: __('Section %d of %d'),\n            short: __('Section %d')\n        }\n    };\n\n    /**\n     * Simple map of progress stats computers\n     * @type {Object}\n     */\n    var scopes = {\n        /**\n         * Gets stats for the whole test\n         * @param {Object} testMap - the actual test map\n         * @param {Object} testContext - the actual test context\n         * @param {progressConfig} config - a config object\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @returns {progressData}\n         */\n        test: function test(testMap, testContext, config) {\n            var stats = getProgressStats(testMap, testContext, config, 'test');\n            var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n            stats.position = item.position + 1;\n            return stats;\n        },\n\n        /**\n         * Gets stats for the current test part\n         * @param {Object} testMap - the actual test map\n         * @param {Object} testContext - the actual test context\n         * @param {progressConfig} config - a config object\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @returns {progressData}\n         */\n        testPart: function testPart(testMap, testContext, config) {\n            var stats = getProgressStats(testMap, testContext, config, 'testPart');\n            var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n            stats.position = item.positionInPart + 1;\n            return stats;\n        },\n\n        /**\n         * Gets stats for the current test section\n         * @param {Object} testMap - the actual test map\n         * @param {Object} testContext - the actual test context\n         * @param {progressConfig} config - a config object\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @returns {progressData}\n         */\n        testSection: function testSection(testMap, testContext, config) {\n            var stats = getProgressStats(testMap, testContext, config, 'testSection');\n            var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n            stats.position = item.positionInSection + 1;\n            return stats;\n        }\n    };\n\n    /**\n     * Simple map of progress indicator computers\n     * @type {Object}\n     */\n    var indicators = {\n        /**\n         * Indicator that shows the percentage of completed items\n         * @param {progressData} stats\n         * @returns {progressIndicator}\n         */\n        percentage: function percentage(stats) {\n            return getRatioProgression(stats.answered, stats.questions);\n        },\n\n        /**\n         * Indicator that shows the position of current item\n         * @param {progressData} stats\n         * @param {progressConfig} config\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @returns {progressIndicator}\n         */\n        position: function position(stats, config) {\n            return getPositionProgression(stats.position, stats.total, 'item', config);\n        },\n\n        /**\n         * Indicator that shows the number of viewed questions\n         * @param {progressData} stats\n         * @param {progressConfig} config\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @returns {progressIndicator}\n         */\n        questions: function questions(stats, config) {\n            return getPositionProgression(stats.questionsViewed, stats.questions, 'item', config);\n        },\n\n        /**\n         * Indicator that shows the number of reached answerable sections\n         * @param {progressData} stats\n         * @param {progressConfig} config\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @returns {progressIndicator}\n         */\n        sections: function sections(stats, config) {\n            return getPositionProgression(stats.answerableSections.reached, stats.answerableSections.total, 'section', config);\n        },\n\n        /**\n         * Indicator that shows the number of viewed items which have categories from the configuration\n         * (show all if categories are not set)\n         * @param {progressData} stats\n         * @param {progressConfig} config\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         */\n        categories: function categories(stats, config) {\n            return getPositionProgression(stats.matchedCategories.position, stats.matchedCategories.total, 'item', config);\n        }\n    };\n\n    /**\n     * Fix the test map if the current test part is linear, as the current item should not be answered.\n     * @param {Object} testMap - the actual test map\n     * @param {Object} testContext - the actual test context\n     * @returns {Object} The fixed test map\n     */\n    function getFixedMap(testMap, testContext) {\n        var item;\n        if (testContext.itemAnswered && testContext.isLinear) {\n            testMap = _.cloneDeep(testMap);\n            item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n            item.answered = false;\n        }\n        return testMap;\n    }\n\n    /**\n     * Gets an empty stats record\n     * @returns {progressDetails}\n     */\n    function getEmptyStats() {\n        return {\n            position: 0,\n            reached: 0,\n            viewed: 0,\n            completed: 0,\n            total: 0\n        };\n    }\n\n    /**\n     * Updates the progress stats from the given element\n     * @param {progressDetails} stats - The stats details to update\n     * @param {Object} element - The element from which take the details\n     * @param {Number} position - The current item position\n     */\n    function updateStats(stats, element, position) {\n        if (element.position <= position) {\n            stats.position++;\n        }\n        if (element.stats.viewed) {\n            stats.reached++;\n\n            if (element.stats.viewed === element.stats.total) {\n                stats.viewed++;\n            }\n        }\n        if (element.stats.answered) {\n            if (element.stats.answered === element.stats.questions) {\n                stats.completed++;\n            }\n        }\n        stats.total++;\n    }\n\n    /**\n     * Updates the progress stats from the given element\n     * @param {progressDetails} stats - The stats details to update\n     * @param {Object} element - The element from which take the details\n     * @param {Number} position - The current item position\n     */\n    function updateItemStats(stats, element, position) {\n        if (element.position <= position) {\n            stats.position++;\n        }\n        if (element.viewed) {\n            stats.reached++;\n            stats.viewed++;\n        }\n        if (element.answered) {\n            stats.completed++;\n        }\n        stats.total++;\n    }\n\n    /**\n     * Convert list of the categories to the hashtable to improve performance\n     * @param categories\n     * @returns {*}\n     */\n    function getCategoriesToMatch(categories) {\n        var matchSize = categories && categories.length;\n        return matchSize && _.reduce(categories, function(map, category) {\n            map[category] = true;\n            return map;\n        }, {});\n    }\n\n    /**\n     * Completes the progression stats\n     * @param {Object} testMap - the actual test map\n     * @param {Object} testContext - the actual test context\n     * @param {progressConfig} config\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\n     * @returns {progressData}\n     */\n    function getProgressStats(testMap, testContext, config, scope) {\n        var fixedMap = getFixedMap(testMap, testContext);\n        var scopedMap = mapHelper.getScopeMap(fixedMap, testContext.itemPosition, scope);\n        var stats = _.clone(scopedMap.stats);\n        var categoriesToMatch;\n        var matchSize;\n\n        if (config.indicator === 'categories') {\n            categoriesToMatch = getCategoriesToMatch(config.categories);\n            matchSize = config.categories && config.categories.length;\n            stats.matchedCategories = getEmptyStats();\n        }\n\n        stats.parts = getEmptyStats();\n        stats.sections = getEmptyStats();\n        stats.answerableParts = getEmptyStats();\n        stats.answerableSections = getEmptyStats();\n\n        _.forEach(scopedMap.parts, function (part) {\n            updateStats(stats.parts, part, testContext.itemPosition);\n\n            if (part.stats.questions > 0) {\n                updateStats(stats.answerableParts, part, testContext.itemPosition);\n            }\n\n            _.forEach(part.sections, function (section) {\n                updateStats(stats.sections, section, testContext.itemPosition);\n\n                if (section.stats.questions > 0) {\n                    updateStats(stats.answerableSections, section, testContext.itemPosition);\n                }\n\n                if (config.indicator === 'categories') {\n                    _.forEach(section.items, function (item) {\n                        if (matchCategories(item.categories, categoriesToMatch, matchSize)) {\n                            updateItemStats(stats.matchedCategories, item, testContext.itemPosition);\n                        }\n                    });\n                }\n            });\n        });\n\n        return stats;\n    }\n\n    /**\n     *\n     * @param {Array} categories - List of categories to check\n     * @param {Object} expectedCategories - Hashtable of expected categories\n     * @param {Number} minWanted - Minimal number of expected categories that should match\n     * @returns {Boolean}\n     */\n    function matchCategories(categories, expectedCategories, minWanted) {\n        var matched = 0;\n\n        if (expectedCategories) {\n            _.forEach(categories, function(category) {\n                if (expectedCategories[category]) {\n                    matched ++;\n                    if (matched >= minWanted) {\n                        return false;\n                    }\n                }\n            });\n        }\n        return matched === minWanted;\n    }\n\n    /**\n     * Gets the progression ratio\n     * @param {Number} position\n     * @param {Number} total\n     * @returns {Number}\n     */\n    function getRatio(position, total) {\n        if (position && total > 0) {\n            return Math.floor(position / total * 100);\n        }\n        return 0;\n    }\n\n    /**\n     * Gets the label of the progress bar for an item\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @param {String} type - the type of element that is represented\n     * @param {progressConfig} config - a config object\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @returns {String}\n     */\n    function getProgressionLabel(position, total, type, config) {\n        var patterns = labels[type] || labels.item;\n        var pattern = config.showTotal ? patterns.long : patterns.short;\n        return format(pattern, position || '0', total || '0');\n    }\n\n    /**\n     * Gets the progression based on position\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @param {String} type - the type of element that is represented\n     * @param {progressConfig} config - a config object\n     * @param {String} config.scope - the scope of the progression\n     * @param {Array} config.categories - categories to count by them\n     * @returns {progressIndicator}\n     */\n    function getPositionProgression(position, total, type, config) {\n        return {\n            position: position || 0,\n            total: total || 0,\n            ratio: getRatio(position, total),\n            label: getProgressionLabel(position, total, type, config)\n        };\n    }\n\n    /**\n     * Gets the progression based on a ratio\n     * @param {Number} position - the current position\n     * @param {Number} total - the total number of items\n     * @returns {progressIndicator}\n     */\n    function getRatioProgression(position, total) {\n        var ratio = getRatio(position, total);\n        return {\n            position: position || 0,\n            total: total || 0,\n            ratio: ratio,\n            label: ratio + '%'\n        };\n    }\n\n    return {\n\n        /**\n         * Checks that categories matched\n         * @param categories\n         * @param expectedCategories\n         * @returns {Boolean}\n         */\n        isMatchedCategories: function validCategories(categories, expectedCategories) {\n            var categoriesToMatch = getCategoriesToMatch(expectedCategories);\n            var matchSize = expectedCategories && expectedCategories.length;\n            return matchCategories(categories, categoriesToMatch, matchSize);\n        },\n\n        /**\n         * Computes the progress stats for the specified scope\n         * @param {Object} testMap - the actual test map\n         * @param {Object} testContext - the actual test context\n         * @param {progressConfig} config - a config object\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @returns {progressData}\n         */\n        computeStats: function computeStats(testMap, testContext, config) {\n            var statsComputer = (config.scope && scopes[config.scope]) || scopes.test;\n            var stats = statsComputer(testMap, testContext, config || defaultConfig);\n            stats.overallCompleted = testContext.numberCompleted;\n            stats.overall = testContext.numberItems;\n            return stats;\n        },\n\n        /**\n         * Computes the specified progress indicator\n         * @param {progressData} stats - the progress stats\n         * @param {String} type - the [type=\"percentage\"] of indicator to compute (could be: percentage, position, questions, sections)\n         * @param {progressConfig} [config] - a config object\n         * @param {Boolean} [config.showTotal] - display 'item x of y' (true) | 'item x'\n         * @returns {progressIndicator}\n         */\n        computeIndicator: function computeIndicator(stats, type, config) {\n            var indicatorComputer = (type && indicators[type]) || indicators.percentage;\n            return indicatorComputer(stats || {}, config || defaultConfig);\n        },\n\n        /**\n         *\n         * @param {Object} testMap - the actual test map\n         * @param {Object} testContext - the actual test context\n         * @param {progressConfig} config - a config object\n         * @param {String} config.indicator - the type of progression\n         * @param {String} config.scope - the scope of the progression\n         * @param {Array} config.categories - categories to count by them\n         * @param {Boolean} [config.showTotal=true] - display 'item x of y' (true) | 'item x'\n         */\n        computeProgress: function computeProgress(testMap, testContext, config) {\n            var progressData;\n            config = _.defaults(config || {}, defaultConfig);\n            progressData = this.computeStats(testMap, testContext, config);\n            return this.computeIndicator(progressData, config.indicator, config);\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"progress-box\\\">\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar info\\\"></div>\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\n</div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage',[\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage',\n    'ui/progressbar'\n], function (component, percentageTpl) {\n    'use strict';\n\n    /**\n     * Default config values\n     * @type {Object}\n     */\n    var defaults = {\n        showLabel: true\n    };\n\n    /**\n     * Builds percentage indicator renderer\n     * @param {Object} [config] - a config object\n     * @param {Boolean} [config.showLabel=true] - show/hide the progress label\n     * @param {Object} [progressData] - the initial dataset\n     */\n    return function percentageIndicatorRenderer(config, progressData) {\n        var rendererApi = {\n            /**\n             * Update the progress bar according to the provided indicator data\n             * @param {progressIndicator} data\n             */\n            update: function update(data) {\n                progressData = data;\n                if (this.is('rendered') && this.controls) {\n                    this.controls.$label.text(progressData.label);\n                    this.controls.$bar.progressbar('value', progressData.ratio);\n                }\n\n                /**\n                 * Executes extra tasks on update\n                 * @event percentageIndicatorRenderer#update\n                 * @param {progressIndicator} data\n                 */\n                this.trigger('update', data);\n            }\n        };\n\n        return component(rendererApi, defaults)\n            .setTemplate(percentageTpl)\n            .on('render', function() {\n                // get access to the controls\n                this.controls = {\n                    $label: this.getElement().find('[data-control=\"progress-label\"]'),\n                    $bar: this.getElement().find('[data-control=\"progress-bar\"]')\n                };\n\n                // apply option\n                if (!this.config.showLabel) {\n                    this.controls.$label.hide();\n                }\n\n                // and initialize the progress bar component\n                this.controls.$bar.progressbar();\n\n                // set the right progression according to init data\n                if (progressData) {\n                    this.update(progressData);\n                }\n\n                // forward the hidden state if it has been set before render\n                if (this.is('hidden')) {\n                    this.hide();\n                }\n            })\n            .on('destroy', function() {\n                this.controls = null;\n            })\n            .init(config);\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/progressbar/renderer/position', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"progress-box\\\">\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar\\\">\\n        <div class=\\\"progressbar-points\\\"></div>\\n    </div>\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\n</div>\";\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/progressbar/renderer/position-point', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\";\n  buffer += \"\\n<span class=\\\"progressbar-point\\\" data-index=\\\"\"\n    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n    + \"\\\"></span>\\n\";\n  return buffer;\n  }\n\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/progressbar/renderer/position',[\n    'lodash',\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/controls/progressbar/renderer/position',\n    'tpl!taoQtiTest/runner/plugins/controls/progressbar/renderer/position-point'\n], function (_, component, positionTpl, pointTpl) {\n    'use strict';\n\n    /**\n     * Default config values\n     * @type {Object}\n     */\n    var defaults = {\n        showLabel: true\n    };\n\n    /**\n     * Builds percentage indicator renderer\n     * @param {Object} [config] - a config object\n     * @param {Boolean} [config.showLabel=true] - show/hide the progress label\n     * @param {Object} [progressData] - the initial dataset\n     */\n    return function positionIndicatorRenderer(config, progressData) {\n        var count = 0;\n\n        var rendererApi = {\n            /**\n             * Update the progress bar according to the provided indicator data\n             * @param {progressIndicator} data\n             */\n            update: function update(data) {\n                progressData = data;\n                if (this.is('rendered') && this.controls) {\n                    if (count !== progressData.total) {\n                        // the number of points have changed, regenerate the full bar\n                        count = progressData.total;\n                        this.controls.$bar.empty().append(pointTpl(_.range(count)));\n                    }\n                    this.controls.$label.text(progressData.label);\n                    this.controls.$bar\n                        // remove progression from all points\n                        .children().removeClass('reached current')\n                        // set progression to each reached point\n                        .slice(0, progressData.position).addClass('reached')\n                        // set current position\n                        .slice(-1).addClass('current');\n                }\n\n                /**\n                 * Executes extra tasks on update\n                 * @event positionIndicatorRenderer#update\n                 * @param {progressIndicator} data\n                 */\n                this.trigger('update', data);\n            }\n        };\n\n        return component(rendererApi, defaults)\n            .setTemplate(positionTpl)\n            .on('render', function() {\n                // get access to the controls\n                this.controls = {\n                    $label: this.getElement().find('[data-control=\"progress-label\"]'),\n                    $bar: this.getElement().find('[data-control=\"progress-bar\"] .progressbar-points')\n                };\n\n                // apply option\n                if (!this.config.showLabel) {\n                    this.controls.$label.hide();\n                }\n\n                // set the right progression according to init data\n                if (progressData) {\n                    this.update(progressData);\n                }\n\n                // forward the hidden state if it has been set before render\n                if (this.is('hidden')) {\n                    this.hide();\n                }\n            })\n            .on('destroy', function() {\n                this.controls = null;\n            })\n            .init(config);\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Progress Bar\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/progressbar/progressbar',[\n    'lodash',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/plugins/controls/progressbar/progress',\n    'taoQtiTest/runner/plugins/controls/progressbar/renderer/percentage',\n    'taoQtiTest/runner/plugins/controls/progressbar/renderer/position'\n], function (_, pluginFactory, mapHelper, progressHelper, percentageRendererFactory, positionRendererFactory){\n    'use strict';\n\n    /**\n     * List of available progress indicator renderers\n     * @type {Object}\n     */\n    var renderers = {\n        percentage: percentageRendererFactory,\n        position: positionRendererFactory\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'progressBar',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var testRunner = this.getTestRunner();\n            var testData   = testRunner.getTestData();\n            var config     = _.defaults(this.getConfig(), testData.config.progressIndicator || {});\n            var self       = this;\n\n            var rendererFactory = renderers[config.renderer] || renderers.percentage;\n            var progressConfig = {\n                indicator: config.type || 'percentage',\n                scope: config.scope || 'test',\n                showLabel: config.showLabel,\n                showTotal: config.showTotal,\n                categories: config.categories\n            };\n\n            var hiddenByQuestions = function hiddenByQuestions(item) {\n                return item && item.informational && progressConfig.indicator === 'questions';\n            };\n\n            var hiddenByCategories = function (item) {\n                return item\n                    && progressConfig.indicator === 'categories'\n                    && !progressHelper.isMatchedCategories(item.categories, progressConfig.categories);\n            };\n\n            /**\n             * Check if progress bar should be hidden\n             */\n            var isProgressbarHidden = function isProgressbarHidden(item) {\n                return hiddenByQuestions(item) || hiddenByCategories(item);\n            };\n\n            /**\n             * Update the progress bar\n             */\n            var update = function update (){\n                var testContext = testRunner.getTestContext();\n                var testMap = testRunner.getTestMap();\n                var item = mapHelper.getItemAt(testMap, testContext.itemPosition);\n\n                if (isProgressbarHidden(item)) {\n                    self.renderer.hide();\n                } else {\n                    self.renderer.show();\n                    self.renderer.update(progressHelper.computeProgress(testMap, testContext, progressConfig));\n                }\n            };\n\n            //create the progressbar\n            this.renderer = rendererFactory(progressConfig);\n\n            //let update the progression\n            update();\n\n            testRunner.on('ready loaditem', update);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render() {\n            var $container = this.getAreaBroker().getControlArea();\n            this.renderer.render($container);\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        destroy : function destroy() {\n            if (this.renderer) {\n                this.renderer.destroy();\n            }\n            this.renderer = null;\n        },\n\n        /**\n         * Show the progress bar\n         */\n        show: function show() {\n            if (this.renderer) {\n                this.renderer.show();\n            }\n        },\n\n        /**\n         * Hide the progress bar\n         */\n        hide: function hide() {\n            if (this.renderer) {\n                this.renderer.hide();\n            }\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/testState/testState',[\n    'lodash',\n    'taoTests/runner/plugin'\n], function (_, pluginFactory) {\n    'use strict';\n\n    /**\n     * Creates the testState plugin.\n     * Handle particular states of the assessment test\n     */\n    return pluginFactory({\n\n        name: 'testState',\n\n        /**\n         * Installs the plugin (called when the runner bind the plugin)\n         */\n        install: function install() {\n            var testRunner = this.getTestRunner();\n\n            // middleware invoked on every requests\n            testRunner.getProxy()\n                .use(function qtiFilter(req, res, next) {\n                    var data = res && res.data;\n\n                    // test has been closed/suspended => redirect to the index page after message acknowledge\n                    if (data && data.type && data.type === 'TestState' && !testRunner.getState('closedOrSuspended')) {\n\n                        // spread the world about the reason of the leave\n                        testRunner.setState('closedOrSuspended', true);\n\n                        if (!testRunner.getState('ready')) {\n                            // if we open an inconsistent test just leave\n                            // should happen if we refresh an auto paused test\n                            testRunner.trigger('destroy');\n                        } else if (_.isEmpty(data.messages) || !_.find(data.messages, {channel: 'teststate'})) {\n                            testRunner.trigger('leave', data);\n                        }\n                        // break the chain to avoid uncaught exception in promise...\n                        // this will lead to unresolved promise, but the browser will be redirected soon!\n                        return;\n                    }\n                    next();\n                });\n        },\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var testRunner = this.getTestRunner();\n            var isLeaving = false;\n\n            // immediate handling of proctor's actions\n            testRunner.getProxy()\n                .channel('teststate', function (data) {\n                    if (!isLeaving && data && ('close' === data.type || 'pause' === data.type) && !testRunner.getState('closedOrSuspended')) {\n                        isLeaving = true;\n\n                        testRunner.setState('closedOrSuspended', true);\n\n                        testRunner.trigger('leave', data);\n                    }\n                });\n        }\n    });\n});\n\n","define('core/encoder/time',['moment'], function (moment) { 'use strict';\n\n    moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n     */\n    var format = 'HH:mm:ss';\n    var time = {\n      encode: function encode(modelValue) {\n        //seconds to hh:mm:ss\n        var seconds = parseInt(modelValue, 10);\n\n        if (isNaN(seconds)) {\n          seconds = 0;\n        }\n\n        var time = moment.duration(seconds, 'seconds');\n        var h = time.get('hours') >= 10 ? time.get('hours') : '0' + time.get('hours');\n        var m = time.get('minutes') >= 10 ? time.get('minutes') : '0' + time.get('minutes');\n        var s = time.get('seconds') >= 10 ? time.get('seconds') : '0' + time.get('seconds');\n        return h + ':' + m + ':' + s;\n      },\n      decode: function decode(nodeValue) {\n        //hh:mm:ss to seconds\n        var time = moment(nodeValue, format);\n        return time.seconds() + time.minutes() * 60 + time.hours() * 3600;\n      }\n    };\n\n    return time;\n\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/timer/component/tpl/countdown', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"countdown\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-type=\\\"\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-scope=\\\"\";\n  if (helper = helpers.scope) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.scope); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" disabled>\\n    <span class=\\\"label truncate\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"time\\\"></span>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/controls/timer/component/css/countdown',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Component that controls the display of a countdown.\n *\n * You can either control the countdown externally  or internally\n *\n * @example\n * countdown(document.querySelector('.stopwatch'), {\n *      id : 'timer1',\n *      label : 'Stop watch',\n *      remaingTime : 60000\n * })\n * .on('complete', () => console.log('done'))\n * .start();\n *\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/component/countdown',[\n    'jquery',\n    'lodash',\n    'core/encoder/time',\n    'core/polling',\n    'core/timer',\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/controls/timer/component/tpl/countdown',\n    'ui/tooltip',\n    'css!taoQtiTest/runner/plugins/controls/timer/component/css/countdown.css'\n], function ($, _, timeEncoder, pollingFactory, timerFactory, component, countdownTpl, tooltip) {\n    'use strict';\n\n    //Precision is milliseconds\n    var precision = 1000;\n\n    /**\n     * Default config values, see below.\n     */\n    var defaults = {\n        showBeforeStart : true,\n        displayWarning : true,\n        polling   : true,\n        frequency : 500\n    };\n\n    /**\n     * time to display warnings\n     */\n    var warningTimeout =  {\n        info:    2000,\n        success: 2000,\n        warning: 4000,\n        danger:  4000,\n        error:   8000\n    };\n\n    /**\n     * Creates, initialize and render a countdown component.\n     *\n     * @param {jQueryElement|HTMLElement} $container - where to append the countdown\n     * @param {Object} config\n     * @param {String} config.id - the timer unique identifier\n     * @param {String} config.label - the text to display above the timer\n     * @param {String} config.type - the type of countdown (to categorize them)\n     * @param {Number} [config.remainingTime] - the current value of the countdown, in milliseconds\n     * @param {Boolean} [config.polling = true] - does the countdown handles the polling itself ?\n     * @param {Number} [config.frequency = 500] - polling frequency in ms (if active)\n     * @param {Boolean} [config.showBeforeStart = true] - do we show the time before starting\n     * @param {Boolean} [config.displayWarning = true] - do we display the warnings or trigger only the event\n     * @param {Object[]} [config.warnings] - define warnings thresholds\n     * @param {Number} [config.warnings.threshold] - when the warning is shown, in milliseconds\n     * @param {String} [config.warnings.message] - the warning message\n     * @param {String} [config.warnings.level = warn] - the feedback level in (success, info, warn, danger and error)\n     * @returns {countdown} the component, initialized and rendered\n     */\n    return function countdownFactory($container, config){\n        var $time;\n\n        /**\n         * @typedef {Object} countdown\n         */\n        var countdown = component({\n\n            /**\n             * Update the countdown\n             * @param {Number} remainingTime - the time remaining (milliseconds)\n             * @returns {countdown} chains\n             * @fires countdown#change - when the value has changed\n             * @fires countdown#warn - when a threshold is reached\n             */\n            update: function udpate(remainingTime){\n                var self = this;\n                var encodedTime;\n                var warningId;\n                var warningMessage;\n\n                if(!this.is('completed')){\n                    if(remainingTime <= 0){\n                        this.remainingTime = 0;\n                    } else {\n                        this.remainingTime = parseInt(remainingTime, 10);\n                    }\n                    if (this.is('rendered') && this.is('running')){\n\n                        encodedTime = timeEncoder.encode(this.remainingTime / precision );\n                        if(encodedTime !== this.encodedTime){\n                            this.encodedTime = encodedTime;\n\n                            $time.text(this.encodedTime);\n                        }\n\n                        if(this.warnings) {\n                            //the warnings have already be sorted\n                            warningId =  _.findLastKey(this.warnings, function(warning){\n                                return warning && !warning.shown &&\n                                       warning.threshold > 0 &&\n                                       warning.threshold >= self.remainingTime;\n\n                            });\n                            if(warningId){\n\n                                this.warnings[warningId].shown = true;\n\n                                if(_.isFunction(this.warnings[warningId].message)){\n                                    warningMessage = this.warnings[warningId].message(this.remainingTime);\n                                } else {\n                                    warningMessage = this.warnings[warningId].message;\n                                }\n\n                                /**\n                                 * Warn user the timer reach a threshold\n                                 * @event countdown#warn\n                                 * @param {String} message\n                                 * @param {String} level\n                                 */\n                                this.trigger('warn', warningMessage, this.warnings[warningId].level);\n                            }\n                        }\n\n                        /**\n                         * The current value has changed\n                         * @event countdown#change\n                         * @param {Number} remainingTime - the updated time\n                         * @param {String} displayed - the displayed value\n                         */\n                        this.trigger('change', this.remainingTime, encodedTime);\n                    }\n                    if(this.remainingTime === 0){\n                        this.complete();\n                    }\n                }\n                return this;\n            },\n\n            /**\n             * Starts the countdown\n             * @returns {countdown} chains\n             * @fires countdown#start\n             */\n            start : function start(){\n                if(this.is('rendered') && !this.is('running') && !this.is('completed')){\n\n                    this.enable();\n                    this.setState('running', true);\n\n                    if(this.polling){\n                        this.polling.start();\n\n                        if(!this.is('started')){\n                            this.setState('started', true);\n                            this.timer.start();\n                        } else {\n                            this.timer.resume();\n                        }\n                    }\n\n                    /**\n                     * The count has started\n                     * @event countdown#start\n                     */\n                    this.trigger('start');\n                }\n                return this;\n            },\n\n\n            /**\n             * Stops the countdown (can be restarted then)\n             * @returns {countdown} chains\n             * @fires countdown#stop\n             */\n            stop : function stop(){\n                if(this.is('rendered') && this.is('running')){\n\n                    this.setState('running', false);\n\n                    if(this.polling){\n                        this.timer.pause();\n                        this.polling.stop();\n                    }\n\n                    /**\n                     * The count is stopped\n                     * @event countdown#stop\n                     */\n                    this.trigger('stop');\n                }\n                return this;\n            },\n\n            /**\n             * Calls to complete the countdown,\n             * it can't be resumed after.\n             *\n             * @returns {countdown} chains\n             *\n             * @fires countdown#complete\n             * @fires countdown#end\n             */\n            complete : function complete(){\n                if(this.is('rendered') && this.is('running') && !this.is('completed')){\n\n                    this.stop();\n                    this.setState('completed', true);\n\n                    /**\n                     * The countdown has ended, is completed\n                     * @event countdown#complete\n                     * @event countdown#end (alias)\n                     */\n                    this.trigger('complete end');\n                }\n                return this;\n            }\n\n\n        }, defaults)\n        .on('init', function(){\n            var self = this;\n\n            this.remainingTime = this.config.remainingTime;\n\n            if(this.config.warnings){\n                this.warnings = _.sortBy(this.config.warnings, 'threshold');\n            }\n\n            //if configured, create a polling for the countdown\n            if(this.config.polling === true && this.config.frequency > 0){\n                this.timer   = timerFactory({\n                    autoStart: false\n                });\n                this.polling = pollingFactory({\n                    action: function pollingAction(){\n                        var elapsed = self.timer.tick();\n                        self.update(self.remainingTime - elapsed);\n                    },\n                    interval: this.config.frequency,\n                    autoStart: false\n                });\n            }\n\n            //auto renders\n            this.render($container);\n        })\n        .on('render', function(){\n            $time = $('.time', this.getElement());\n\n            if(this.config.showBeforeStart === true){\n                $time.text(timeEncoder.encode(this.remainingTime / precision ));\n            }\n        })\n        .on('warn', function(message, level){\n            var countdownTooltip;\n            level = level || 'warning';\n\n            if (this.is('rendered') && this.is('running') &&\n                _.isString(message) && !_.isEmpty(message)) {\n\n                $time\n                    .removeClass('txt-success txt-info txt-warning txt-danger txt-error')\n                    .addClass('txt-' + level);\n\n                if(this.config.displayWarning === true){\n                    countdownTooltip = tooltip.create(this.getElement(), message, {\n                        trigger: 'manual',\n                        theme : level,\n                        placement:'bottom'\n                    });\n                    countdownTooltip.show();\n                    setTimeout(function () {\n                        countdownTooltip.hide();\n                        countdownTooltip.dispose();\n                    }, warningTimeout[level] || 2000);\n                }\n            }\n        });\n\n        countdown.setTemplate(countdownTpl);\n\n        _.defer(function(){\n            countdown.init(config);\n        });\n\n        return countdown;\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/timer/component/tpl/timerbox', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <a href=\\\"#\\\" class=\\\"timer-toggler hidden\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide timers\", options) : helperMissing.call(depth0, \"__\", \"Hide timers\", options)))\n    + \"\\\"><span class=\\\"icon-clock\\\"></span></a>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"timer-box\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.zenMode)),stack1 == null || stack1 === false ? stack1 : stack1.enabled), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"timer-wrapper\\\">\\n\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoQtiTest/runner/plugins/controls/timer/component/css/timerbox',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * The timerbox manages timers and display multiple countdowns.\n *\n * @example\n * timerbox({\n *     timers : [{\n *         id : 'timer1',\n *         label : 'Max test time',\n *         type : 'max',\n *         scope: 'test',\n *         remainingTime: 60000\n *      }, {\n *         id : 'timer2',\n *         label : 'Stay at least',\n *         type : 'min',\n *         scope: 'item',\n *         remainingTime: 15000\n *      }]\n *  })\n *  .on('render', function(){\n *     this.start();\n *  })\n *  .render(document.querySelector('nav'));\n *\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/component/timerbox',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'ui/component',\n    'ui/hider',\n    'taoQtiTest/runner/plugins/controls/timer/component/countdown',\n    'tpl!taoQtiTest/runner/plugins/controls/timer/component/tpl/timerbox',\n    'css!taoQtiTest/runner/plugins/controls/timer/component/css/timerbox.css'\n], function ($, _, __, Promise, component, hider, countdownFactory, timerboxTpl) {\n    'use strict';\n\n    /**\n     * Default config values, see below.\n     */\n    var defaults = {\n        zenMode : {\n            enabled : true,\n            startHidden : false\n        }\n    };\n\n    /**\n     * Creates and initialize the timerbox component.\n     * Please not the component IS NOT rendered.\n     * You'll have to render it by yourself.\n     *\n     * @param {Object} config\n     * @param {Boolean} [config.zenMode = true] - zen mode adds a button to hide the countdowns to stay zen\n     * @param {Object[]} [config.timers] - the timers to start with\n     * @param {Boolean} [config.displayWarning = true] - let the countdown display their warning (contextual)\n     * @returns {timerbox} the component, initialized and rendered\n     */\n    return function timerboxFactory(config){\n        var $zenModeToggler;\n        var $countdownContainer;\n\n        /**\n         * @typedef {Object} timerbox\n         */\n        var timerbox = component({\n\n            /***\n             * Update the displayed timers.\n             * Compare the current and the given, it will add,remove and update timers.\n             *\n             * @param {Object[]} timers - the new timers\n             * @returns {Promise<Array>} resolves when all timers are up to date (with the result of all the update operations)\n             *\n             * @fires timerbox#update the update is done\n             */\n            update : function update(timers){\n                var self = this;\n\n                var updating = [];\n\n                //remove timers\n                var timerIdsToRemove =_.difference(_.keys(this.timers), _.keys(timers));\n                if(timerIdsToRemove.length){\n                    _.forEach(timerIdsToRemove, function(timerId) {\n                        updating.push(self.removeTimer(timerId));\n                    });\n                }\n\n                //add/update\n                _.forEach(timers, function(timer, id){\n                    if(typeof self.timers[id] === 'undefined'){\n                        updating.push(self.addTimer(id, timer));\n                    } else {\n                        updating.push(self.updateTimer(id, timer));\n                    }\n                });\n\n                return Promise.all(updating)\n                    .then(function(results){\n\n                        //show the toggler only if there's timers\n                        if(_.size(self.timers) > 0){\n                            hider.show($zenModeToggler);\n                        } else {\n                            hider.hide($zenModeToggler);\n                        }\n\n                        /**\n                         * The timer box update is done\n                         * @event timerbox#update\n                         * @param {Object[]} timers - ALL update results (includes removals)\n                         */\n                        self.trigger('update', results);\n\n                        return results;\n                    });\n            },\n\n            /**\n             * Get the current timers\n             * @return {Object[]} the timers\n             */\n            getTimers : function getTimers(){\n                return this.timers;\n            },\n\n            /**\n             * Adds a new timer to the box\n             * @param {String} id - the timer unique identifier\n             * @param {Object} timer - the new timer\n             * @return {Promise<Object|Boolean>} resolves with the timer once added or false\n             *\n             * @fires timerbox#timerchange something changes in a timer\n             * @fires timerbox#timeradd a new timer is in the box\n             * @fires timerbox#timerstart a timer get started\n             * @fires timerbox#timerstop a timer get stopped\n             * @fires timerbox#timerend a timer get completed\n             * @fires timerbox#change spread from the countdown\n             */\n            addTimer: function addTimer(id, timer){\n                var self = this;\n\n                if (this.is('rendered') && typeof this.timers[id] === 'undefined') {\n                    return new Promise(function(resolve){\n                        var countdown = countdownFactory($countdownContainer, _.defaults(timer, {\n                            displayWarning : self.config.displayWarning\n                        }))\n                        .on('render', function(){\n\n                            //keep track of the new timer\n                            //and the countdown component\n                            self.timers[id] = _.clone(timer);\n                            self.timers[id].countdown = this;\n\n                            /**\n                             * The timers have changed (add, update, remove)\n                             * @event timerbox#timerchange\n                             * @param {String} action - add, update, remove\n                             * @param {Object} timer\n                             */\n                            self.trigger('timerchange', 'add', self.timers[id]);\n\n                            /**\n                             * A new timer is added\n                             * @event timerbox#timeradd\n                             * @param {Object} timer\n                             */\n                            self.trigger('timeradd', self.timers[id]);\n\n                            resolve(self.timers[id]);\n                        })\n                        .on('start', function(){\n\n                            /**\n                              * A timer starts\n                              * @event timerbox#timerstart\n                              * @param {Object} timer\n                              */\n                            self.trigger('timerstart', self.timers[id]);\n                        })\n                        .on('stop', function(){\n\n                            /**\n                                * A timer stops\n                                * @event timerbox#timerstop\n                                * @param {Object} timer\n                                */\n                            self.trigger('timerstop', self.timers[id]);\n\n                        })\n                        .on('end', function(){\n\n                            /**\n                                * A timer ends\n                                * @event timerbox#timerend\n                                * @param {Object} timer\n                                */\n                            self.trigger('timerend', self.timers[id]);\n\n                        })\n                        .on('change', function(value){\n                            if(self.timers[id]){\n                                //keep the current timer data in sync\n                                self.timers[id].remainingTime = value;\n                            }\n                        });\n                        countdown.spread(self, ['error', 'change', 'warn']);\n                    });\n                }\n                return Promise.resolve(false);\n            },\n\n            /**\n             * Updates an existing timer\n             * @param {String} id - the timer unique identifier\n             * @param {Object} timer - the new timer\n             * @return {Promise<Object|Boolean>} resolves with the timer once updated or false\n             *\n             * @fires timerbox#timerchange something changes in a timer\n             * @fires timerbox#timerupdate an existing timer is updated\n             */\n            updateTimer: function updateTimer(id, timer){\n\n                if (this.is('rendered') && typeof this.timers[id] !== 'undefined') {\n\n                    this.timers[id].remainingTime = timer.remainingTime;\n                    this.timers[id].extraTime     = timer.extraTime;\n\n                    if(_.isNumber(timer.remainingWithoutExtraTime)){\n                        this.timers[id].remainingWithoutExtraTime = timer.remainingWithoutExtraTime;\n                    }\n\n                    if (this.timers[id].countdown){\n                        this.timers[id].countdown.update(timer.remainingTime);\n                    }\n\n                    this.trigger('timerchange', 'update', this.timers[id]);\n\n                    /**\n                     * A timer has been updated with external values\n                     * @event timerbox#timerupdate\n                     * @param {Object} timer\n                     */\n                    this.trigger('timerupdate', this.timers[id]);\n\n                    return Promise.resolve(this.timers[id]);\n                }\n                return Promise.resolve(false);\n            },\n\n            /**\n             * Remove a timer\n             * @param {String} id - the timer unique identifier\n             * @return {Promise<Object|Boolean>} resolves with the timer once removed or false\n             *\n             * @fires timerbox#timerchange something changes in a timer\n             * @fires timerbox#timerremove a timer is removed\n             */\n            removeTimer: function removeTimer(id){\n\n                var self = this;\n\n                if (this.is('rendered') && typeof this.timers[id] !== 'undefined') {\n                    return new Promise(function(resolve){\n\n                        /**\n                         * Artifact function, remove the timer from the component index\n                         */\n                        var deindex = function deindex(){\n                            //keep a clone, without the component, for the event\n                            var removed = _.omit(self.timers[id], 'countdown');\n\n                            //remove the timer from the list\n                            self.timers = _.omit(self.timers, id);\n\n                            self.trigger('timerchange', 'remove', removed);\n\n                            /**\n                             * A timer has been updated with external values\n                             * @event timerbox#timerupdate\n                             * @param {Object} timer\n                             */\n                            self.trigger('timerremove', removed);\n\n                            resolve(removed);\n                        };\n                        if(self.timers[id].countdown){\n                            self.timers[id].countdown\n                                .on('destroy', deindex)\n                                .destroy();\n                        } else {\n                            deindex();\n                        }\n                    });\n                }\n                return Promise.resolve();\n            },\n\n            /**\n             * Starts all the timers contained in the box\n             * @returns {timerbox} chains\n             */\n            start : function start(){\n                _.forEach(this.timers, function(timer){\n                    if(timer.countdown){\n                        timer.countdown.start();\n                    }\n                });\n                return this;\n            },\n\n            /**\n             * Stops all the timers contained in the box\n             * @returns {timerbox} chains\n             */\n            stop : function stop(){\n                _.forEach(this.timers, function(timer){\n                    if(timer.countdown){\n                        timer.countdown.stop();\n                    }\n                });\n                return this;\n            },\n\n            /**\n             * Show/hide the timers aka \"zen mode\"\n             * @returns {timerbox} chains\n             * @fires timerbox#zenchange\n             */\n            toggleZenMode : function toggleZenMode() {\n                if(this.is('rendered') && this.config.zenMode.enabled ){\n                    if(this.is('zen')){\n                        this.setState('zen', false);\n                        $zenModeToggler.attr('title', __('Hide timers'));\n                    } else {\n                        this.setState('zen', true);\n                        $zenModeToggler.attr('title', __('Show timers'));\n                    }\n\n                    /**\n                     * @event timerbox#zenchange\n                     * @param {Boolean} isZen\n                     */\n                    this.trigger('zenchange', this.is('zen'));\n                }\n                return this;\n            }\n\n        }, defaults)\n        .on('init', function(){\n\n            //index the current timers\n            this.timers = {};\n        })\n        .on('render', function(){\n            var self = this;\n            var $element = this.getElement();\n\n            //where we append the countdowns components\n            $countdownContainer = $('.timer-wrapper', $element);\n\n            //set up the zen mode toggler\n            if(this.config.zenMode.enabled){\n                $zenModeToggler = $('.timer-toggler', $element);\n                self.setState('zen', !!self.config.zenMode.startHidden);\n                $zenModeToggler.on('click', function(e){\n                    e.preventDefault();\n                    self.toggleZenMode();\n                });\n            }\n\n            //if timers are provided with the config, we perform the 1st update\n            if(this.config.timers){\n                this.update(this.config.timers);\n            }\n        });\n\n        timerbox.setTemplate(timerboxTpl);\n\n        _.defer(function(){\n            timerbox.init(config);\n        });\n\n        return timerbox;\n    };\n});\n\n","\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Timer strategy that enforce the test taker to stay in\n * front of the item until the timer completes,\n * by disabling the navigation elements.\n *\n * Applies on item scope, min timers if the testPart is linear\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/strategy/enforcedStay',[], function(){\n    'use strict';\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    return function enforcedStayStrategy(testRunner, timer){\n        var testContext = testRunner.getTestContext();\n\n        if( timer && timer.type === 'min' && timer.scope === 'item' &&\n            testContext.isLinear){\n            return {\n                name : 'enforcedStay',\n\n                /**\n                 * setUp entry point : disable the navigation\n                 */\n                setUp : function setUp(){\n                    testRunner.on('enablenav.enforcestay', function(){\n                        testRunner.trigger('disablenav');\n                    });\n                    testRunner.trigger('disablenav');\n                },\n\n                /**\n                 * complete entry point : enables back the navigation\n                 */\n                complete : function complete(){\n                    this.tearDown();\n                    testRunner.trigger('enablenav');\n                },\n\n                /**\n                 * tearDown entry point : remove the listeners\n                 */\n                tearDown : function tearDown(){\n                    testRunner.off('enablenav.enforcestay');\n                }\n            };\n        }\n        return false;\n    };\n});\n\n","\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Track consumed extra time and add it to the next move request\n *\n * Applies when the timer contains an extraTime\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/strategy/extraTime',[\n    'lodash'\n], function(_){\n    'use strict';\n\n    var precision = 1000;\n    var lastConsumedExtraTime = 0;\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    return function extraTimeStrategy(testRunner, timer){\n\n        /**\n         * Apply the extra time to the timer 'once' and\n         * listen for test movment to add the consumed extrat time as parameter\n         * Since the extra time is global, if multiple timers use the extra time part,\n         * we take the biggest consumed extra time.\n         */\n        var applyExtraTime = function applyExtraTime(){\n            if(_.isNumber(timer.extraTime) && timer.extraTime > 0 && !timer.extraTimeSetup){\n                timer.extraTimeSetup = true;\n\n                testRunner.before('move.extra skip.extra exit.extra timeout.extra', function() {\n                    var consumedExtraTime = 0;\n                    var testContext = testRunner.getTestContext();\n                    if(timer.remainingTime < timer.extraTime){\n                        consumedExtraTime = Math.max(timer.extraTime - timer.remainingTime, 0) / precision;\n                        lastConsumedExtraTime = Math.max(\n                                consumedExtraTime,\n                                lastConsumedExtraTime,\n                                testContext.extraTime.consumed\n                            );\n\n                        testRunner.getProxy().addCallActionParams({\n                            consumedExtraTime: lastConsumedExtraTime\n                        });\n                    }\n                })\n                .after('move.extra skip.extra exit.extra timeout.extra', function(){\n                    lastConsumedExtraTime = 0;\n                });\n\n            }\n        };\n\n        if( timer && timer.type === 'max'){\n            return {\n                name : 'extraTime',\n\n                /**\n                 * setUp entry point : adds the extratime to the timer\n                 */\n                setUp : function setUp(){\n                    applyExtraTime();\n                },\n\n                /**\n                 * setUp entry point : adds the extratime to the timer\n                 */\n                start : function start(){\n                    //apply at start also in case the extra time is added in between\n                    applyExtraTime();\n                },\n\n                /**\n                 * tearDown entry point : remove the listeners\n                 */\n                tearDown : function tearDown(){\n                    testRunner.off('move.extra skip.extra exit.extra timeout.extra');\n                }\n            };\n        }\n        return false;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Timer strategy that enforce the test taker to stay in\n * front of the item until the timer completes,\n * by hidding the navigation elements.\n * Once the timer completes, the test moves to the next item.\n *\n * Applies on item scope, locked timers only, linear test part and\n * the test configuration \"guidedNavigation\"\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/strategy/guidedNavigation',[], function(){\n    'use strict';\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    return function guidedNavigationStrategy(testRunner, timer){\n        var testData = testRunner.getTestData();\n        var testContext = testRunner.getTestContext();\n        var config = testData && testData.config ;\n\n        if( timer && timer.type === 'locked' && timer.scope === 'item' &&\n            config.guidedNavigation === true && testContext.isLinear === true){\n\n            return {\n                name : 'guidedNavigation',\n\n                /**\n                 * setUp entry point : hides the navigation\n                 */\n                setUp : function setUp(){\n                    testRunner.trigger('hidenav');\n                },\n\n                /**\n                 * complete entry point : enables back the navigation\n                 */\n                complete : function complete(){\n                    testRunner.trigger('disableitem disablenav shownav');\n\n                    setTimeout(function(){\n                        testRunner.trigger('move', 'next', 'item');\n                    }, 500);\n                }\n            };\n        }\n        return false;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Timeout strategy, the given scope is timedout when the timer completes.\n *\n * Applies on all max timers\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/strategy/timeout',[], function(){\n    'use strict';\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    return function timeoutStrategy(testRunner, timer){\n\n        if(timer && timer.type === 'max'){\n            return {\n                name : 'timeout',\n\n                /**\n                 * complete entry point : timeout\n                 */\n                complete : function complete(){\n                    if(timer.qtiClassName && timer.source){\n                        return testRunner.timeout(timer.qtiClassName, timer.source, timer);\n                    }\n                }\n            };\n        }\n        return false;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * This helper provides information about the current item\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/currentItem',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * List of QTI model cardinalities\n     * @type {Object}\n     */\n    var responseCardinalities = {\n        single: 'base',\n        multiple: 'list',\n        ordered: 'list',\n        record: 'record'\n    };\n\n    /**\n     * List of QTI interaction minConstraint properties\n     * @type {Object}\n     */\n    var interactionMinConstraintProperties = {\n        matchInteraction: 'minAssociations',\n        choiceInteraction: 'minChoices',\n        orderInteraction: 'minChoices',\n        associateInteraction: 'minAssociations',\n        hottextInteraction: 'minChoices',\n        hotspotInteraction: 'minChoices',\n        graphicOrderInteraction: 'minChoices',\n        graphicAssociateInteraction: 'minAssociations',\n        selectPointInteraction: 'minChoices'\n    };\n\n    /**\n     * @typedef {currentItemHelper}\n     */\n    var currentItemHelper = {\n        /**\n         * Gets the responses declarations of the current item.\n         * @param {Object} runner - testRunner instance\n         * @returns {Object}\n         */\n        getDeclarations: function getDeclarations(runner) {\n            var itemRunner = runner.itemRunner;\n            return itemRunner._item && itemRunner._item.responses;\n        },\n\n        /**\n         * Gets a response declaration by the identifier of the response\n         * @param {Object} runner - testRunner instance\n         * @param {String} identifier - The identifier of the response\n         * @returns {Object|null}\n         */\n        getResponseDeclaration: function getResponseDeclaration(runner, identifier) {\n            var found = null;\n            _.forEach(currentItemHelper.getDeclarations(runner), function (declaration) {\n                var attributes = declaration.attributes || {};\n                if (attributes.identifier === identifier) {\n                    found = declaration;\n                    return false;\n                }\n            });\n            return found;\n        },\n\n        /**\n         * Convert a value to a response object\n         * @param {Array|String} value\n         * @param {String} baseType\n         * @param {String} cardinality\n         * @returns {Object}\n         */\n        toResponse: function toResponse(value, baseType, cardinality) {\n            var mappedCardinality = responseCardinalities[cardinality];\n            var response = {};\n\n            if (_.isString(value)) {\n                value = [value];\n            }\n\n            value = _.map(value || [], function (v) {\n                return (baseType === 'boolean') ? (v === true || v === 'true') : v;\n            });\n\n            if (mappedCardinality) {\n                if (mappedCardinality === 'base') {\n                    if (value.length === 0) {\n                        //return empty response:\n                        response.base = null;\n                    } else {\n                        response.base = {};\n                        response.base[baseType] = value[0];\n                    }\n                } else {\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = value;\n                }\n            }\n\n            return response;\n        },\n\n        /**\n         * Checks if the provided value can be considered as null\n         * @param {Object} value\n         * @param {String} baseType\n         * @param {String} cardinality\n         * @returns {boolean}\n         */\n        isQtiValueNull: function isQtiValueNull(value, baseType, cardinality) {\n            var mappedCardinality = responseCardinalities[cardinality];\n\n            if (_.isObject(value) && value[mappedCardinality] === null) {\n                value = null;\n            }\n\n            if (_.isObject(value) && value[mappedCardinality] && 'undefined' !== typeof value[mappedCardinality][baseType]) {\n                value = value[mappedCardinality][baseType];\n            }\n\n            return null === value || ('string' === baseType && _.isEmpty(value)) || (cardinality !== 'single' && _.isEmpty(value));\n        },\n\n        /**\n         * Tells if an item question has been answered or not\n         * @param {Object} response\n         * @param {String} baseType\n         * @param {String} cardinality\n         * @param {Object} [defaultValue]\n         * @param {Object} constraintValue\n         * @returns {*}\n         */\n        isQuestionAnswered: function isQuestionAnswered(response, baseType, cardinality, defaultValue, constraintValue) {\n            var answered, currentCardinality, responses;\n            var fullyAnswered = true;\n            defaultValue = defaultValue || null;\n            constraintValue = constraintValue || 0;\n\n            if (currentItemHelper.isQtiValueNull(response, baseType, cardinality)) {\n                answered = false;\n            } else {\n                answered = !_.isEqual(response, currentItemHelper.toResponse(defaultValue, baseType, cardinality));\n\n                if (constraintValue !== 0) {\n                    currentCardinality = responseCardinalities[cardinality];\n                    responses = response[currentCardinality][baseType] || [];\n                    fullyAnswered = responses && (responses.length >= constraintValue);\n                }\n\n                answered = answered && fullyAnswered;\n            }\n            return answered;\n        },\n\n        guessInteractionConstraintValues: function guessInteractionConstraintValues(runner) {\n            var itemRunner = runner.itemRunner;\n            var itemBody = (itemRunner._item && itemRunner._item.bdy) || {};\n            var interactions = itemBody.elements || {};\n\n            var constraintValues = {};\n\n            _.forEach(interactions, function(interaction) {\n                var attributes = interaction.attributes || {};\n                var qtiClass = interaction.__proto__.qtiClass;\n                var constraintProperty;\n\n                if (interactionMinConstraintProperties.hasOwnProperty(qtiClass)) {\n                    constraintProperty = interactionMinConstraintProperties[qtiClass];\n                    constraintValues[attributes.responseIdentifier] = attributes[constraintProperty];\n                }\n            });\n\n            return constraintValues;\n        },\n\n        /**\n         * Tells is the current item has been answered or not\n         * The item is considered answered when at least one response has been set to not empty {base : null}\n         * @param {Object} runner - testRunner instance\n         * @param {Boolean} [partially=true] - if false all questions must have been answered\n         * @returns {Boolean}\n         */\n        isAnswered: function isAnswered(runner, partially) {\n            var itemRunner = runner.itemRunner;\n            var responses = itemRunner && itemRunner.getResponses();\n            var count = 0;\n            var empty = 0;\n\n            var declarations, constraintValues;\n\n            if (itemRunner) {\n                declarations = currentItemHelper.getDeclarations(runner);\n                constraintValues = currentItemHelper.guessInteractionConstraintValues(runner);\n\n                _.forEach(declarations, function (declaration) {\n                    var attributes = declaration.attributes || {};\n                    var response = responses[attributes.identifier];\n                    var baseType = attributes.baseType;\n                    var cardinality = attributes.cardinality;\n\n                    count++;\n                    if (!currentItemHelper.isQuestionAnswered(response, baseType, cardinality, declaration.defaultValue, constraintValues[attributes.identifier])) {\n                        empty++;\n                    }\n                });\n            }\n            if( partially === false ){\n                return count > 0 && empty === 0;\n            }\n            return count > 0 && empty < count;\n        },\n\n        /**\n         * Gets list of shared stimuli hrefs in the current item\n         *\n         * @param {Object} runner - testRunner instance\n         * @returns {Array}\n         */\n        getStimuliHrefs: function getStimuliHrefs(runner) {\n            var itemRunner = runner.itemRunner;\n            var itemBody = (itemRunner._item && itemRunner._item.bdy) || {};\n            var interactions = itemBody.elements || {};\n\n            return _(interactions)\n                .values()\n                .filter(function(element) {\n                    return element.qtiClass === 'include';\n                })\n                .pluck('attributes')\n                .pluck('href')\n                .value();\n        },\n\n        /**\n         * Find the list of text stimulus ids in the current item\n         * Depends on the DOM already being loaded\n         * @param {Object} runner - testRunner instance\n         * @returns {Array}\n         */\n        getTextStimuliHrefs: function getTextStimuliHrefs(runner) {\n            var stimuli = this.getStimuliHrefs(runner);\n            var textStimuli;\n            if (stimuli.length > 0) {\n                // Filter the ones containing text:\n                textStimuli = stimuli.filter(function(stimulusHref) {\n                    var domNode = document.querySelector('.qti-include[data-href=\"' + stimulusHref + '\"]');\n                    return _(domNode.childNodes)\n                            .some(function(child) {\n                                return child.nodeType === child.TEXT_NODE;\n                            });\n                });\n                return textStimuli;\n            }\n            return [];\n        }\n    };\n\n    return currentItemHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * This helper provides more statistics about the test\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/stats',[\n    'lodash',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/currentItem'\n], function (_, mapHelper, currentItemHelper) {\n    'use strict';\n\n    /**\n     * Return scope stats that takes into account any test taker interaction made since the item has been loaded\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox. Default false\n     * @returns {Object}\n     */\n    function getInstantStats(scope, runner, sync) {\n        var map = runner.getTestMap(),\n            context = runner.getTestContext(),\n            stats = _.clone(mapHelper.getScopeStats(map, context.itemPosition, scope)),\n            item = mapHelper.getItemAt(map, context.itemPosition),\n            isItemCurrentlyAnswered;\n\n        if (!item.informational) {\n            isItemCurrentlyAnswered = currentItemHelper.isAnswered(runner);\n            if (!isItemCurrentlyAnswered && context.itemAnswered) {\n                stats.answered--;\n            } else if ((isItemCurrentlyAnswered || sync) && !context.itemAnswered) {\n                stats.answered++;\n            } else if (sync && !isItemCurrentlyAnswered && context.itemAnswered && context.isLinear) {\n                stats.answered++;\n            }\n        }\n\n        return stats;\n    }\n\n    return {\n        getInstantStats: getInstantStats\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/helpers/messages',[\n    'lodash',\n    'i18n',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/stats'\n], function (_, __, mapHelper, statsHelper) {\n    'use strict';\n\n    /**\n     * Completes an exit message\n     * @param {String} message - custom message that will be appended to the unanswered stats count\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox\n     * @returns {String} Returns the message text\n     */\n    function getExitMessage(message, scope, runner, sync) {\n        var itemsCountMessage = '';\n\n        var testData = runner.getTestData(),\n            testConfig = testData && testData.config,\n            messageEnabled = testConfig ? testConfig.enableUnansweredItemsWarning : true;\n        \n        if (messageEnabled) {\n            itemsCountMessage = getUnansweredItemsWarning(scope, runner, sync);\n        }\n\n        return (itemsCountMessage + \" \" + message).trim();\n    }\n\n    /**\n     * Build message if not all items have answers\n     * @param {String} scope - scope to consider for calculating the stats\n     * @param {Object} runner - testRunner instance\n     * @param {Boolean} sync - flag for sync the unanswered stats in exit message and the unanswered stats in the toolbox. Default false\n     * @returns {String} Returns the message text\n     */\n    function getUnansweredItemsWarning(scope, runner, sync) {\n        var stats = statsHelper.getInstantStats(scope, runner, sync);\n        var unansweredCount = stats && (stats.questions - stats.answered);\n        var flaggedCount = stats && stats.flagged;\n        var itemsCountMessage = '';\n\n        if (scope === 'section' || scope === 'testSection'){\n            if (unansweredCount === 0) {\n                itemsCountMessage = __('You answered all %s question(s) in this section', stats.questions.toString());\n            } else {\n                itemsCountMessage = __('You answered only %s of the %s question(s) in this section',\n                    stats.answered.toString(),\n                    stats.questions.toString()\n                );\n            }\n            if (flaggedCount) {\n                itemsCountMessage += ', ' + __('and flagged %s of them', flaggedCount.toString());\n            }\n        } else if(scope === 'test') {\n            if (unansweredCount === 0) {\n                itemsCountMessage = __('You answered all %s question(s) in this test', stats.questions.toString());\n            } else {\n                itemsCountMessage = __('You have %s unanswered question(s)', unansweredCount.toString());\n            }\n            if (flaggedCount) {\n                itemsCountMessage += ' ' + __('and you flagged %s item(s) that you can review now', flaggedCount.toString());\n            }\n        } else if(scope === 'part') {\n            if (unansweredCount === 0) {\n                itemsCountMessage = __('You answered all %s question(s)', stats.questions.toString());\n            } else {\n                itemsCountMessage = __('You have %s unanswered question(s)', unansweredCount.toString());\n            }\n            if (flaggedCount) {\n                itemsCountMessage += ' ' + __('and you flagged %s item(s) that you can review now', flaggedCount.toString());\n            }\n        }\n\n        if (itemsCountMessage) {\n            itemsCountMessage += '.';\n        }\n        return itemsCountMessage;\n    }\n\n    return {\n        getExitMessage: getExitMessage\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * This helper provides information about the test navigation\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/helpers/navigation',[\n    'lodash',\n    'taoQtiTest/runner/helpers/map'\n], function (_, mapHelper) {\n    'use strict';\n\n    /**\n     * @typedef {Object} navigationHelper\n     */\n    var navigationHelper = {\n\n        /**\n         * Check whether the test taker is leaving a section\n         *\n         * @param {Object} testContext - the actual test context\n         * @param {String} testContext.itemIdentifier - the id of the current item\n         * @param {String} testContext.sectionId - the id of the current section\n         * @param {Object} testMap - the actual test map\n         * @param {String} direction - the move direction (next, previous or jump)\n         * @param {String} scope - the move scope (item, section, testPart)\n         * @param {Number} [position] - the position in case of jump\n         * @returns {Boolean} true if the action leads to a section leave\n         * @throws {TypeError} if the context or the map are incorrect\n         */\n        isLeavingSection : function isLeavingSection(testContext, testMap, direction, scope, position){\n            var section;\n            var sectionStats;\n            var nbItems;\n            var item;\n            if( _.isPlainObject(testContext) && _.isPlainObject(testMap) &&\n                !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier) ){\n\n                section = mapHelper.getSection(testMap, testContext.sectionId);\n                sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n                nbItems = sectionStats && sectionStats.total;\n                item = mapHelper.getItem(testMap, testContext.itemIdentifier);\n\n                return  scope === 'section' ||\n                        scope === 'testPart'||\n                        (direction === 'next' && item.positionInSection + 1 === nbItems) ||\n                    (direction === 'previous' && item.positionInSection === 0) ||\n                    (direction === 'jump' && position > 0 && (position < section.position || position >= section.position + nbItems));\n            }\n            throw new TypeError('Invalid test context and test map');\n        },\n\n        /**\n         * Check whether the test taker is leaving a test part\n         *\n         * @param {Object} testContext - the actual test context\n         * @param {String} testContext.itemIdentifier - the id of the current item\n         * @param {String} testContext.sectionId - the id of the current section\n         * @param {String} testContext.testPartId - the id of the current testPart\n         * @param {Object} testMap - the actual test map\n         * @param {String} direction - the move direction (next, previous or jump)\n         * @param {String} scope - the move scope (item, section, testPart)\n         * @param {Number} [position] - the position in case of jump\n         * @returns {Boolean} true if the action leads to a section leave\n         * @throws {TypeError} if the context or the map are incorrect\n         */\n        isLeavingTestPart : function isLeavingTestPart(testContext, testMap, direction, scope, position){\n            var testPart;\n            var testPartStats;\n            var nbItems;\n            var item;\n            var section;\n            var sectionStats;\n            if( _.isPlainObject(testContext) && _.isPlainObject(testMap) &&\n               !_.isEmpty(testContext.testPartId) && !_.isEmpty(testContext.sectionId) && !_.isEmpty(testContext.itemIdentifier) ){\n\n                testPart      = mapHelper.getPart(testMap, testContext.testPartId);\n                testPartStats = mapHelper.getPartStats(testMap, testContext.testPartId);\n                nbItems       = testPartStats && testPartStats.total;\n                item          = mapHelper.getItem(testMap, testContext.itemIdentifier);\n\n                if(scope === 'section'){\n                    section = mapHelper.getSection(testMap, testContext.sectionId);\n                    sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n                }\n\n                return  scope === 'testPart'||\n                        (direction === 'next' && scope === 'item' && item.positionInPart + 1 === nbItems) ||\n                        (direction === 'next' && scope === 'section' && section.position + sectionStats.total >= nbItems) ||\n                        (direction === 'previous' && scope === 'item' && item.positionInPart === 0) ||\n                        (direction === 'previous' && scope === 'section' && section.position === testPart.position) ||\n                        (direction === 'jump' && position > 0 && (position < testPart.position || position >=  testPart.position + nbItems));\n            }\n            throw new TypeError('Invalid test context and test map');\n        },\n\n        /**\n         * Check if the given  item is the last of the test\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @returns {Boolean} true if the item is the last one\n         */\n        isLast : function isLast(testMap, itemIdentifier){\n            return this.isLastOf(testMap, itemIdentifier, 'test');\n        },\n\n        /**\n         * Check if the given  item is the first of a test\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @returns {Boolean} true if the item is the first one\n         */\n        isFirst : function isFirst(testMap, itemIdentifier){\n            return this.isFirstOf(testMap, itemIdentifier, 'test');\n        },\n\n        /**\n         * Check if the given  item is the last of a the given scope\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @param {String} [scope = 'test'] - the target scope\n         * @returns {Boolean} true if the item is the last one\n         */\n        isLastOf : function isLastOf(testMap, itemIdentifier, scope){\n            var item;\n            var stats;\n            if ( ! _.isPlainObject(testMap) ) {\n                throw new TypeError('Invalid test map');\n            }\n            if (_.isEmpty(itemIdentifier)) {\n                throw new TypeError('Invalid item identifier');\n            }\n            scope = scope || 'test';\n            item  = mapHelper.getItem(testMap, itemIdentifier);\n            stats = mapHelper.getScopeStats(testMap, item.position, scope);\n            if (stats && _.isNumber(stats.total)) {\n                if (scope === 'test') {\n                    return item.position + 1  === stats.total;\n                }\n                if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n                    return item.positionInSection + 1 === stats.total;\n                }\n                if (scope === 'part' || scope === 'testPart') {\n                    return item.positionInPart + 1 === stats.total;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Check if the given  item is the first of a the given scope\n         * @param {Object} testMap - the test map\n         * @param {String} itemIdentifier - the identifier of the item\n         * @param {String} [scope = 'test'] - the target scope\n         * @returns {Boolean} true if the item is the first one\n         */\n        isFirstOf : function isFirstOf(testMap, itemIdentifier, scope){\n            var item;\n            if (! _.isPlainObject(testMap)) {\n                throw new TypeError('Invalid test map');\n            }\n            if (_.isEmpty(itemIdentifier)) {\n                throw new TypeError('Invalid item identifier');\n            }\n            scope = scope || 'test';\n            item  = mapHelper.getItem(testMap, itemIdentifier);\n\n            if (scope === 'test') {\n                return item.position  === 0;\n            }\n            if (scope === 'section' || scope === 'assessmentSection' || scope === 'testSection') {\n                return item.positionInSection === 0;\n            }\n            if (scope === 'part' || scope === 'testPart') {\n                return item.positionInPart === 0;\n            }\n\n            return false;\n        },\n\n        /**\n         * Gets the map descriptors of the sibling items\n         * @param {Object} testMap\n         * @param {Number|String} itemPosition - (could be also the item id)\n         * @param {String} [direction='both'] - previous/next/both\n         * @param {Number} [size=3] - will be 2xsize if direction is both\n         * @returns {Object[]} the collections of items\n         */\n        getSiblingItems: function getSiblingItems(testMap, itemPosition, direction, size) {\n            var itemId = mapHelper.getItemIdentifier(testMap,  itemPosition);\n            var previous = null;\n            var siblings = [];\n            var directions;\n\n            var itemChain = _.reduce(testMap && testMap.jumps, function (map, jump) {\n                var ref = jump.identifier;\n                if (previous) {\n                    map[previous].next = ref;\n                }\n                map[ref] = {\n                    identifier: ref,\n                    previous: previous,\n                    next: null\n                };\n                previous = ref;\n                return map;\n            }, {});\n\n            size = _.isFinite(size) ? parseInt(size, 10) : 3;\n            if (!direction || direction === 'both') {\n                directions = ['previous', 'next'];\n            } else {\n                directions = [direction];\n            }\n\n            _.forEach(directions, function walkDirection(link) {\n                var id = itemId;\n                _.times(size, function getNeighbor() {\n                    id = itemChain[id] && itemChain[id][link];\n                    if (id) {\n                        siblings.push(mapHelper.getItem(testMap, id));\n                    } else {\n                        return false;\n                    }\n                });\n            });\n\n            return siblings;\n        },\n\n\n        /**\n         * Gets the map descriptor of the next item\n         * @param {Object} testMap\n         * @param {Number|String} itemPosition - (could be also the item id)\n         * @returns {Object}\n         */\n        getNextItem : function getNextItem(testMap, itemPosition) {\n            var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'next', 1);\n            if (siblings.length) {\n                return siblings[0];\n            }\n            return null;\n        },\n\n        /**\n         * Gets the map descriptor of the previous item\n         * @param {Object} testMap\n         * @param {Number|String} itemPosition - (could be also the item id)\n         * @returns {Object}\n         */\n        getPreviousItem : function getPreviousItem(testMap, itemPosition) {\n            var siblings = navigationHelper.getSiblingItems(testMap, itemPosition, 'previous', 1);\n            if (siblings.length) {\n                return siblings[0];\n            }\n            return null;\n        },\n\n        /**\n         * Checks if an action will move forward.\n         * @param {String} action - the name of the action that will be performed\n         * @param {Object} [params] - some optional parameters that apply to the action\n         * @returns {Boolean}\n         */\n        isMovingToNextItem : function isMovingToNextItem(action, params) {\n            params = params || {};\n            return (\n                action === 'timeout' ||\n                action === 'skip' ||\n                (action === 'move' && params.direction === 'next' && params.scope === 'item')\n            );\n        },\n\n        /**\n         * Checks if an action will move backward.\n         * @param {String} action - the name of the action that will be performed\n         * @param {Object} [params] - some optional parameters that apply to the action\n         * @returns {Boolean}\n         */\n        isMovingToPreviousItem : function isMovingToPreviousItem(action, params) {\n            params = params || {};\n            return (\n                action === 'move' && params.direction === 'previous' && params.scope === 'item'\n            );\n        },\n\n        /**\n         * Checks if an action will jump on another item.\n         * @param {String} action - the name of the action that will be performed\n         * @param {Object} [params] - some optional parameters that apply to the action\n         * @returns {Boolean}\n         */\n        isJumpingToItem : function isJumpingToItem(action, params) {\n            params = params || {};\n            return (\n                action === 'move' && params.direction === 'jump' && params.scope === 'item'\n            );\n        }\n\n    };\n\n    return navigationHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Timer strategy that warns the user when he leaves a timed section\n *\n * Applies on section scope, max timers.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/strategy/warnSectionLeaving',[\n    'lodash',\n    'i18n',\n    'core/promise',\n    'taoQtiTest/runner/helpers/messages',\n    'taoQtiTest/runner/helpers/navigation'\n], function(_, __, Promise, messages, navigationHelper){\n    'use strict';\n\n    /**\n     * The message to display when exiting\n     */\n    var exitMessage = __('Once you close this section, you cannot return to it or change your answers.');\n\n    /**\n     * Creates the strategy if it applies to the given timer\n     * @param {runner} testRunner\n     * @param {Object} timer\n     * @returns {strategy|Boolean} the strategy if applies or false\n     */\n    return function warnSectionLeavingStrategy(testRunner, timer){\n\n        /**\n        * Check if the movment leads to leaving an active timed section\n        * @param {String} direction - the move direction (next, previous or jump)\n        * @param {String} scope - the move scope (item, section, testPart)\n        * @param {Number} [position] - the position in case of jump\n        * @returns {Boolean}\n        */\n        var leaveTimedSection = function leaveTimedSection(direction, scope, position) {\n            var context = testRunner.getTestContext();\n            var map = testRunner.getTestMap();\n            var testData = testRunner.getTestData();\n            if (!context.isTimeout && context.itemSessionState !== testData.itemStates.closed && context.sectionId === timer.source) {\n                return navigationHelper.isLeavingSection(context, map, direction, scope, position);\n            }\n            return false;\n        };\n\n        if(timer && timer.scope === 'section' && timer.type === 'max'){\n            return {\n                name : 'warnSectionLeaving',\n\n                /**\n                 * setUp entry point : blocks the move to display a message if needed\n                 */\n                setUp : function setUp(){\n                    testRunner\n                        .off('move.warntimedsection skip.warntimedsection')\n                        .before('move.warntimedsection skip.warntimedsection', function(e, type, scope, position){\n\n                            var context = testRunner.getTestContext();\n                            var testDataBeforeMove = testRunner.getTestData();\n                            var config = testDataBeforeMove && testDataBeforeMove.config;\n                            var timerConfig = config && config.timer || {};\n                            var options = context && context.options || {};\n                            var movePromise = new Promise(function(resolve, reject) {\n                                // endTestWarning has already been displayed, so we don't repeat the warning\n                                if (context.isLast && options.endTestWarning) {\n                                    resolve();\n                                    // display a message if we exit a timed section\n                                } else if (leaveTimedSection(type || 'next', scope, position) && !options.noExitTimedSectionWarning && !timerConfig.keepUpToTimeout) {\n                                    testRunner.trigger(\n                                        'confirm.exittimed',\n                                        messages.getExitMessage(exitMessage, 'section', testRunner),\n                                        resolve,\n                                        reject,\n                                        {\n                                            buttons: {\n                                                labels: {\n                                                    ok : __('Close this Section'),\n                                                    cancel : __('Review my Answers')\n                                                }\n                                            }\n                                        });\n                                } else {\n                                    resolve();\n                                }\n                            });\n\n                            movePromise\n                                .catch(function cancelMove() {\n                                    // Use `defer` to be sure the timer resume will occur after the move event is\n                                    // finished to be handled. Otherwise, the duration plugin will be frozen and\n                                    // the additional time will not be taken into account!\n                                    _.defer(function() {\n                                        testRunner.trigger('enableitem enablenav');\n                                    });\n                                });\n\n                            return movePromise;\n                        });\n                },\n\n                /**\n                 * complete entry point : removes the listeners\n                 */\n                complete : function complete(){\n                    return this.tearDown();\n                },\n\n                /**\n                 * tearDown entry point : removes the listeners\n                 */\n                tearDown : function tearDown(){\n                    testRunner.off('move.warntimedsection skip.warntimedsection');\n                }\n            };\n        }\n        return false;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * This module loads all timers' strategies,\n * activate them by timer when relevant,\n * then apply the behavior based on the lifecycle.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/strategy/strategyHandler',[\n    'lodash',\n    'core/promise',\n    'taoQtiTest/runner/plugins/controls/timer/strategy/enforcedStay',\n    'taoQtiTest/runner/plugins/controls/timer/strategy/extraTime',\n    'taoQtiTest/runner/plugins/controls/timer/strategy/guidedNavigation',\n    'taoQtiTest/runner/plugins/controls/timer/strategy/timeout',\n    'taoQtiTest/runner/plugins/controls/timer/strategy/warnSectionLeaving',\n], function(_, Promise, extraTimeStrategy, enforcedStayStrategy, guidedNavigationStrategy, timeoutStrategy, warnSectionLeavingStrategy){\n    'use strict';\n\n\n    /**\n     * The list of available strategies\n     * TODO this list could come from the configuration\n     */\n    var defaultAvailableStrategies = [\n        extraTimeStrategy,\n        enforcedStayStrategy,\n        guidedNavigationStrategy,\n        timeoutStrategy,\n        warnSectionLeavingStrategy\n    ];\n\n    /**\n     * Get a strategyHandler object for a testRunner instance\n     * @param {runner} testRunner - the test runner instance\n     * @param {strategy[]} strategies - the list of available strategies, to override the defaults\n     * @returns {strategyHandler} the handler\n     */\n    return function getStrategyHandler(testRunner, strategies){\n        var strategyHandler;\n\n        /**\n         * To keep track of the active strategies, per timer\n         */\n        var actives = {};\n\n        /**\n         * Artifact function to apply an action to a list of strategy\n         * @param {String} timerId - the id of the timer to run the actions against\n         * @param {String} action -\n         */\n        var applyToStrategies = function applyToStrategies(timerId, action){\n            var api = _.keys(strategyHandler);\n            if(_.isEmpty(timerId) || _.isEmpty(action) || !_.contains(api, action)){\n                throw new TypeError('Invalid timer id or unauthorized action');\n            }\n\n            if(!_.isArray(actives[timerId])){\n                return Promise.resolve();\n            }\n            return  Promise.all( _.map( actives[timerId], function(strategy){\n                if (_.isFunction(strategy[action])) {\n                    return strategy[action]();\n                }\n            }));\n        };\n\n        var availableStrategies = strategies || defaultAvailableStrategies;\n\n        //quick validation of the test runner\n        if(!testRunner || !_.isFunction(testRunner.on) || !_.isFunction(testRunner.getTestContext)){\n            throw new TypeError('The strategy handler needs a valid test runner.');\n        }\n\n        /**\n         * @typedef {Object} strategyHandler\n         */\n        strategyHandler = {\n\n            /**\n             * Try to set up strategies for the given timer\n             * @param {Object} timer\n             * @returns {Promise} resolves once the set up is done\n             */\n            setUp : function setUp (timer) {\n                _.forEach(availableStrategies, function(availableStrategy){\n                    var strategy = availableStrategy(testRunner, timer);\n                    if(strategy !== false){\n                        actives[timer.id] = actives[timer.id] || [];\n\n                        actives[timer.id].push(strategy);\n                    }\n                });\n                return applyToStrategies(timer.id, 'setUp');\n            },\n\n            /**\n             * Get the actives strategies for the given timer\n             * @returns {strategy[]} the actives strategies\n             */\n            getActives : function getActives(timer){\n                if(timer && timer.id && _.isArray(actives[timer.id])){\n                    return actives[timer.id];\n                }\n                return [];\n            },\n\n            /**\n             * Call the timer's strategies \"start\"\n             * @param {Object} timer\n             * @returns {Promise}\n             */\n            start: function start(timer){\n                return applyToStrategies(timer.id, 'start');\n            },\n\n            /**\n             * Call the timer's strategies \"stop\"\n             * @param {Object} timer\n             * @returns {Promise}\n             */\n            stop : function stop(timer){\n                return applyToStrategies(timer.id, 'stop');\n            },\n\n            /**\n             * Call the timer's strategies \"complete\"\n             * @param {Object} timer\n             * @returns {Promise}\n             */\n            complete : function complete(timer){\n                return applyToStrategies(timer.id, 'complete');\n            },\n\n            /**\n             * Call the timer's strategies \"tearDown\"\n             * will also un-reference the strategies\n             * @param {Object} timer\n             * @returns {Promise}\n             */\n            tearDown : function tearDown(timer){\n                return applyToStrategies(timer.id, 'tearDown').then(function(){\n                    actives = _.omit(actives, timer.id);\n                });\n            }\n        };\n\n        return strategyHandler;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Get timers from timeConstraints and test configuration.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/timers',[\n    'lodash',\n    'i18n',\n    'moment',\n    'core/format',\n    'core/logger'\n], function(_, __, moment, format, loggerFactory){\n    'use strict';\n\n    var logger = loggerFactory('taoQtiTest/runner/plugins/controls/timer/timers');\n\n    /**\n     * We receive values in seconds, so we convert them to milliseconds\n     */\n    var precision = 1000;\n\n    /**\n     * The timer's scope\n     */\n    var scopes = ['item', 'section', 'testPart', 'test'];\n\n    /**\n     * Map qti class names to scopes\n     */\n    var scopeMapping = {\n        assessmentTest    : 'test',\n        assessmentSection : 'section',\n        assessmentItemRef : 'item'\n    };\n\n    /**\n     * helps you get the scope from a scope or qti class name\n     * @param {String} value - scope or qti class name\n     * @returns {String?} the scope\n     */\n    var getScope = function getScope(value){\n        if(scopeMapping[value]){\n            return scopeMapping[value];\n        }\n        if(_.contains(scopes, value)){\n            return value;\n        }\n        return null;\n    };\n\n    /**\n     * The text of warning messages\n     * TODO add warning messages for other timers types\n     */\n    var warningMessages = {\n        item    : __(\"Warning – You have %s remaining to complete this item.\"),\n        section : __(\"Warning – You have %s remaining to complete this section.\"),\n        testPart: __(\"Warning – You have %s remaining to complete this test part.\"),\n        test    : __(\"Warning – You have %s remaining to complete this test.\")\n    };\n\n\n    /**\n     * Get the timers objects from the time constraints andt the given config\n     * @param {Object[]} timeConstraints - as defined in the testContext\n     * @param {Boolean} isLinear - is the current navigation mode linear\n     * @param {Object} [config] - timers config\n     * @param {Object[]} [config.warnings] - the warnings to apply to the timers (max only for now)\n     * @param {Object[]} [config.warnings] - the warnings to apply to the timers (max only for now)\n     * @returns {timer[]} the timers\n     */\n    return function getTimers(timeConstraints, isLinear, config){\n        var timers = {};\n\n        /**\n         * The warnings comes in a weird format (ie. {scope:{threshold:level}}) , so we reformat them\n         */\n        var constraintsWarnings = _.reduce(config.warnings, function(acc, warnings, qtiScope){\n            var scope = getScope(qtiScope);\n            acc[scope] = _.map(warnings, function(value, key){\n                return {\n                    threshold : (parseInt(key, 10) * precision),\n                    message : function applyMessage(remainingTime){\n                        var displayRemaining = moment.duration(remainingTime / precision, \"seconds\").humanize();\n                        return format(warningMessages[scope], displayRemaining);\n                    },\n                    level : value,\n                    shown : false\n                };\n            });\n            return acc;\n        }, {});\n\n        /**\n         * Build a timer of a given type from a time constraints\n         * @param {String} type - min, max, locked\n         * @param {Object} constraintData\n         * @returns {timer} timer\n         */\n        var buildTimer = function buildTimer(type, constraintData){\n\n            /**\n             * @typedef {Object} timer\n             * @property {String} id - identify the timer (for max, it's the source for backward compat)\n             * @property {String} type - min, max or locked\n             * @property {String} label - the title to display\n             * @property {String} scope - the timer's scope (item, section, etc.)\n             * @property {String} qtiClassName - the QTI class of the timers applies to\n             * @property {String} source - the ID of the element the timers belongs to\n             * @property {Number} extraTime - additional time data, object\n             * @property {Number} originalTime - the starting value of the timer, never changes, in ms.\n             * @property {Number} remainingTime - current value, in ms.\n             * @property {Number} remainingWithoutExtraTime - remaining time without extra time, in ms.\n             * @property {Number} total - total time (original time + extra time), in ms.\n             */\n            var timer  = _.pick(constraintData, ['label', 'scope', 'source', 'extraTime', 'qtiClassName']);\n\n            timer.type = type;\n            timer.allowLateSubmission = constraintData.allowLateSubmission;\n\n            if(type === 'min'){\n                timer.id  = type + '-' + constraintData.scope + '-' + constraintData.source;\n                timer.originalTime  = constraintData.minTime * precision;\n                timer.remainingTime = constraintData.minTimeRemaining * precision;\n            } else {\n                timer.id  = constraintData.source;\n                timer.originalTime  = constraintData.maxTime * precision;\n                timer.remainingTime = constraintData.maxTimeRemaining * precision;\n            }\n\n            timer.remainingWithoutExtraTime = timer.remainingTime;\n            if (timer.extraTime) {\n                timer.extraTime.consumed = timer.extraTime.consumed * precision;\n                timer.extraTime.remaining = timer.extraTime.remaining * precision;\n                timer.extraTime.total = timer.extraTime.total * precision;\n                timer.total = timer.originalTime + (timer.extraTime.total);\n                timer.remainingTime += timer.extraTime.remaining;\n            }\n\n            //TODO supports warnings for other types\n            if (type === 'max' && _.isArray(constraintsWarnings[timer.scope])) {\n                timer.warnings = constraintsWarnings[timer.scope];\n            }\n            return timer;\n        };\n\n\n        _.forEach(timeConstraints, function(timeConstraint){\n            var constraintData = _.clone(timeConstraint);\n            var newTimer;\n\n            constraintData.scope = getScope(timeConstraint.scope || timeConstraint.qtiClassName);\n\n            if(!constraintData.scope){\n\n                logger.warning('Wrong data, a time constraint should apply to a valid scope, skipping');\n\n            } else if(constraintData.minTime === false && constraintData.maxTime === false){\n\n                logger.warning('Time constraint defined with no time, skipping');\n\n            // minTime = maxTime -> one locked timer\n            } else if ( config.guidedNavigation && isLinear &&\n                    constraintData.maxTime && constraintData.minTime &&\n                    constraintData.minTime === constraintData.maxTime &&\n                    constraintData.maxTime > 0){\n\n                newTimer =  buildTimer('locked', constraintData);\n                timers[newTimer.id] = newTimer;\n\n            } else {\n\n                //minTime -> min timer\n                if(isLinear && constraintData.minTime  && constraintData.minTime > 0){\n\n                    newTimer = buildTimer('min', constraintData);\n                    timers[newTimer.id] = newTimer;\n                }\n\n                //maxTime -> max timer\n                if(constraintData.maxTime  && constraintData.maxTime > 0){\n\n                    newTimer = buildTimer('max', constraintData);\n                    timers[newTimer.id] = newTimer;\n                }\n            }\n        });\n\n        logger.debug('Timers built from timeConstraints', timers);\n\n        return timers;\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Main timer plugin.\n * Since the test can have multiples timers (per context)\n * with different behaviors, this plugin takes care of :\n *  - loading the timeConstraints data from the testContext and create timers objects\n *  - save/load data from the browser store\n *  - delegates the rendering to the timerbox component. The timerbox handles the display of multiple countdowns.\n *  - apply strategies to the timers. Each strategy can install it's own behavior on a timer.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/timer/plugin',[\n    'jquery',\n    'lodash',\n    'core/promise',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/controls/timer/strategy/strategyHandler',\n    'taoQtiTest/runner/plugins/controls/timer/component/timerbox',\n    'taoQtiTest/runner/plugins/controls/timer/timers'\n], function($, _, Promise, pluginFactory, getStrategyHandler, timerboxFactory, timersFactory){\n    'use strict';\n\n    /**\n     * Creates the plugin\n     */\n    return pluginFactory({\n\n        name: 'timer',\n\n        /**\n         * Install step, add behavior before the lifecycle\n         */\n        install: function install() {\n\n            var testRunner = this.getTestRunner();\n\n            /**\n             * Load the timers, from the given timeConstraints and reading the current value in the store\n             * @param {store} timeStore - where the values are read\n             * @param {Object} config - the current config, especially for the warnings\n             * @return {Promise<Object[]>} the list of timers for the current context\n             */\n            this.loadTimers = function loadTimers(timeStore, config){\n                var testContext = testRunner.getTestContext();\n                var timeConstraints = testContext.timeConstraints;\n                var isLinear = !!testContext.isLinear;\n                var timers = timersFactory(timeConstraints, isLinear, config);\n                return Promise.all(\n                    _.map(timers, function(timer){\n                        return timeStore.getItem('consumed_' + timer.id).then(function(savedConsumedTime){\n                            if (_.isNumber(savedConsumedTime) && savedConsumedTime >= 0 && config.restoreTimerFromClient) {\n                                timer.remainingTime = timer.originalTime + timer.extraTime.total - savedConsumedTime;\n                            }\n                        });\n                    })\n                )\n                .then(function(){\n                    return timers;\n                });\n            };\n\n            /**\n             * Save consumed time values into the store\n             * @param {store} timeStore - where the values are saved\n             * @param {Object[]} timers - the timers to save\n             * @return {Promise} resolves once saved\n             */\n            this.saveTimers = function saveTimers(timeStore, timers){\n                return Promise.all(\n                    _.map(timers, function(timer){\n                        return timeStore.setItem('consumed_' + timer.id, timer.originalTime + timer.extraTime.total - timer.remainingTime);\n                    })\n                );\n            };\n\n            //define the \"timer\" store as \"volatile\" (removed on browser change).\n            testRunner.getTestStore().setVolatile(this.getName());\n        },\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self         = this;\n            var testRunner   = this.getTestRunner();\n            var testData     = testRunner.getTestData();\n\n            /**\n             * Plugin config,\n             */\n            var config       = _.merge({}, this.getConfig(), {\n\n                /**\n                 * An option to control is the warnings are contextual or global\n                 */\n                contextualWarnings : false,\n\n                /**\n                 * The list of configured warnings\n                 */\n                warnings : testData && testData.config && testData.config.timerWarning || {},\n\n                /**\n                 * The guided navigation option\n                 */\n                guidedNavigation : testData && testData.config && testData.config.guidedNavigation,\n\n                /**\n                 * Restore timer from client.\n                 */\n                restoreTimerFromClient: testData && testData.config && testData.config.timer.restoreTimerFromClient\n            });\n\n            /**\n             * Set up the strategy handler\n             */\n            var strategyHandler = getStrategyHandler(testRunner);\n\n            /**\n             * dispatch errors to the test runner\n             * @param {Error} err - to dispatch\n             */\n            var handleError = function handleError(err){\n                testRunner.trigger('error', err);\n            };\n\n            return new Promise(function(resolve){\n                //load the plugin store\n                return testRunner.getPluginStore(self.getName()).then(function(timeStore){\n\n                    testRunner\n                        .before('renderitem resumeitem', function() {\n                            var testContext = testRunner.getTestContext();\n                            //update the timers before each item\n                            if(self.timerbox && testContext.timeConstraints){\n                                return self.loadTimers(timeStore, config)\n                                    .then(function(timers){\n                                        return self.timerbox.update(timers);\n                                    })\n                                    .catch(handleError);\n                            }\n                        })\n                        .on('enableitem', function(){\n                            if(self.timerbox){\n                                self.timerbox.start();\n                            }\n                        })\n                        .after('renderitem', function(){\n                            if(self.timerbox){\n                                self.timerbox.start();\n                            }\n                        })\n                        .on('disableitem move skip', function(){\n                            if(self.timerbox){\n                                //this will \"pause\" the countdowns\n                                self.timerbox.stop();\n                            }\n                        });\n\n                    timeStore.getItem('zen-mode').then(function(startZen){\n\n                        //set up the timerbox\n                        self.timerbox = timerboxFactory({\n                            zenMode: {\n                                enabled : true,\n                                startHidden : !!startZen\n                            },\n                            displayWarning : config.contextualWarnings\n                        })\n                        .on('change', _.throttle(function(){\n                            //update the store with the current timer values\n                            self.saveTimers(timeStore, this.getTimers());\n                        }, 1000))\n                        .on('timeradd', function(timer){\n                            strategyHandler.setUp(timer).catch(handleError);\n                        })\n                        .on('timerremove', function(timer){\n                            strategyHandler.tearDown(timer).catch(handleError);\n                        })\n                        .on('timerstart', function(timer){\n                            strategyHandler.start(timer).catch(handleError);\n                        })\n                        .on('timerstop', function(timer){\n                            strategyHandler.stop(timer).catch(handleError);\n                        })\n                        .on('timerend', function(timer){\n                            strategyHandler.complete(timer).catch(handleError);\n                        })\n                        .on('timerchange', function(action, timer){\n                            //backward compatible events\n                            self.trigger(action + 'timer', timer.qtiClassName, timer);\n                        })\n                        .on('zenchange', function(isZen){\n                            timeStore.setItem('zen-mode', !!isZen);\n                        })\n                        .on('init', resolve)\n                        .on('error', handleError);\n\n                        if(!config.contextualWarnings){\n                            self.timerbox.on('warn', function(message, level){\n                                if(level && message){\n                                    testRunner.trigger(level, message);\n                                }\n                            });\n                        }\n                    })\n                    .catch(handleError);\n                });\n            });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n            this.timerbox.render(\n                this.getAreaBroker().getControlArea()\n            );\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            if(this.timerbox){\n                this.timerbox\n                    .stop()\n                    .destroy();\n            }\n        },\n\n        /**\n         * Shows the timers\n         */\n        show: function show() {\n            if(this.timerbox){\n                this.timerbox.show();\n            }\n        },\n\n        /**\n         * Hides the timers\n         */\n        hide: function hide() {\n            if(this.timerbox){\n                this.timerbox.hide();\n            }\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/title/title', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <span data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"qti-controls\\\" title=\\\"\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  stack1 = helpers.unless.call(depth0, (data == null || data === false ? data : data.first), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" - \";\n  }\n\n  buffer += \"<div class=\\\"title-box truncate\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.titles), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Title\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/title/title',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/controls/title/title'\n], function ($, __, pluginFactory, titleTpl){\n    'use strict';\n\n    return pluginFactory({\n        name : 'title',\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData   = testRunner.getTestData();\n\n            var createElement = function(){\n\n                var context  = testRunner.getTestContext();\n                var titles =  [{\n                    control : 'qti-test-title',\n                    text    : testData.title\n                }];\n               if(context.isDeepestSectionVisible){\n                    titles.push({\n                        control : 'qti-test-position',  //WTF !? isn't it the section title... ?\n                        text    : context.sectionTitle\n                    });\n                }\n\n                return $(titleTpl({ titles : titles }));\n            };\n\n            this.$element = createElement();\n\n\n            testRunner\n                .after('renderitem', function(){\n                    var $element = createElement();\n                    self.$element.replaceWith($element);\n                    self.$element = $element;\n                });\n\n        },\n        render : function render(){\n            var $container = this.getAreaBroker().getControlArea();\n            $container.append(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Test Runner Control Plugin : Item Trace Variables\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/controls/trace/itemTraceVariables',[\n    'lodash',\n    'moment',\n    'taoTests/runner/plugin'\n], function (_, moment, pluginFactory) {\n    'use strict';\n\n    /**\n     * Duration of a second in the timer's base unit\n     * @type {Number}\n     */\n    var precision = 1000;\n\n    /**\n     * Gets the current timestamp\n     * @returns {Number}\n     */\n    function timestamp() {\n        return Date.now() / precision;\n    }\n\n    /**\n     * Creates the timer plugin\n     */\n    return pluginFactory({\n\n        name: 'itemTraceVariables',\n\n        /**\n         * Install step, add behavior before the lifecycle.\n         */\n        install: function install() {\n            //define the \"trace\" store as \"volatile\" (removed on browser change).\n            // the store name is \"trace\" for backward compatibility,\n            // best practice is to use the plugin name\n            this.getTestRunner().getTestStore().setVolatile('trace');\n        },\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var testRunner = this.getTestRunner();\n            var variables = {};\n\n            function onError(err) {\n                testRunner.trigger('error', err);\n            }\n\n            return testRunner.getPluginStore('trace')\n                .then(function (tracesStore) {\n                    testRunner\n                        .after('renderitem enableitem', function () {\n                            var context = testRunner.getTestContext();\n\n                            variables = {\n                                ITEM_START_TIME_CLIENT: timestamp()\n                            };\n\n                            tracesStore.getItem(context.itemIdentifier)\n                                .then(function (data) {\n                                    if (data) {\n                                        _.merge(variables, data);\n                                    }\n\n                                    return tracesStore.setItem(context.itemIdentifier, variables);\n                                })\n                                .catch(onError);\n                        })\n\n                        .before('move skip exit timeout', function () {\n                            var context = testRunner.getTestContext();\n\n                            variables.ITEM_END_TIME_CLIENT = timestamp();\n                            variables.ITEM_TIMEZONE = moment().utcOffset(moment().utcOffset()).format('Z');\n\n                            return tracesStore.setItem(context.itemIdentifier, variables).catch(onError);\n                        })\n\n                        .before('unloaditem', function () {\n                            var context = testRunner.getTestContext();\n                            return testRunner.getProxy().callItemAction(context.itemIdentifier, 'storeTraceData', {\n                                traceData: JSON.stringify(variables)\n                            }, true);\n                        });\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * http://www.imsglobal.org/question/qtiv2p2p1/QTIv2p2p1-ASI-InformationModelv1p0/imsqtiv2p2p1_asi_v1p0_InfoModelv1p0.html#DerivedCharacteristic_ItemSessionControl.Attr_allowSkipping\n *\n * An item is defined to be skipped if the candidate has not provided any\n * response. In other words, all response variables are submitted with their\n * default value or are NULL. This definition is consistent with the\n * numberResponded operator available in outcomeProcessing. If 'false',\n * candidates are not allowed to skip the item, or in other words, they are not\n * allowed to submit the item until they have provided a non-default value for\n * at least one of the response variables. By definition, an item with no\n * response variables cannot be skipped. The value of this attribute is only\n * applicable when the item is in a testPart with individual submission mode.\n * Note that if allowSkipping is 'true' delivery engines must ensure that the\n * candidate can choose to submit no response, for example, through the\n * provision of a \"skip\" button.\n */\n\ndefine('taoQtiTest/runner/plugins/navigation/allowSkipping',[\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/currentItem'\n], function(_, __, pluginFactory, currentItemHelper) {\n    'use strict';\n\n    /**\n     * Default plugin options\n     * @type {Object}\n     */\n    var defaults = {\n        allowPartial: true // whether all interactions must be answered to count an item as answered\n    };\n\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n    return pluginFactory({\n\n        /**\n         * Plugin name\n         * @type {String}\n         */\n        name: 'allowSkipping',\n\n        /**\n         * Initialize plugin (called during runner's initialization)\n         * @returns {this}\n         */\n        init: function init() {\n            this.getTestRunner()\n                .before('nav-next move', function () {\n                    var self          = this;\n                    var testContext   = this.getTestContext();\n                    var isInteracting = !this.getItemState(testContext.itemIdentifier, 'disabled');\n                    var testData      = this.getTestData() || {};\n                    var testConfig    = testData.config || {};\n                    var pluginsConfig = testConfig.plugins || {};\n                    var config        = _.defaults(pluginsConfig.allowSkipping || {}, defaults);\n                    var warning       = config.allowPartial\n                        ? __('A response to every question in this item is required.')\n                        : __('A response to this item is required.');\n\n                    if ( isInteracting && testContext.enableAllowSkipping && !testContext.allowSkipping ) {\n\n                        return new Promise(function (resolve, reject) {\n                            if(_.size(currentItemHelper.getDeclarations(self)) === 0){\n                                return resolve();\n                            }\n                            if (currentItemHelper.isAnswered(self, config.allowPartial)) {\n                                return resolve();\n                            }\n\n                            if (!self.getState('alerted.notallowed')) { // Only show one alert for itemSessionControl\n\n                                self.setState('alerted.notallowed', true);\n                                self.trigger(\n                                    'alert.notallowed',\n                                    warning,\n                                    function () {\n                                        self.trigger('resumeitem');\n                                        reject();\n                                        self.setState('alerted.notallowed', false);\n                                    }\n                                );\n                            }\n                        });\n                    }\n                });\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * This is a helper for navigation plugins. It decides if a warning should be displayed\n * before actually moving to the next item\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',[], function () {\n    'use strict';\n\n    /**\n     * Convert a value to a boolean\n     * @param {*} value\n     * @param {Boolean} defaultValue\n     * @returns {Boolean}\n     */\n    var toBoolean = function toBoolean(value, defaultValue) {\n        if (typeof(value) === \"undefined\") {\n            return defaultValue;\n        } else {\n            return (value === true || value === \"true\");\n        }\n    };\n\n    /**\n     * @param {Object} options\n     * @param {Boolean} options.endTestWarning - enables the end test warning, when applicable\n     * @param {Boolean} options.isLast - if the item is the last of the test\n     * @param {Boolean} options.isLinear - if the current part is linear\n     * @param {Boolean} options.nextItemWarning - enables the next item warning, when applicable\n     * @param {Boolean} options.nextPartWarning - enables the next item warning on part change\n     * @param {Boolean} options.stats - current state of the test\n     * @param {Object} options.nextPart - description of the next part of the test\n     * @param {Number} options.remainingAttempts - remaining attempts for the current item\n     * @param {String} options.testPartId - current test part identifier\n     * @param {Boolean} options.unansweredOnly - warn only if there are unanswered/flagged items\n     * @returns {Object}\n     */\n    var nextWarningHelper = function nextWarningHelper(options) {\n        var endTestWarning      = toBoolean(options.endTestWarning, false),\n            isLast              = toBoolean(options.isLast, false),\n            isLinear            = toBoolean(options.isLinear, false),\n            nextItemWarning     = toBoolean(options.nextItemWarning, false),\n            nextPartWarning     = toBoolean(options.nextPartWarning, false),\n            stats               = options.stats,\n            nextPart            = options.nextPart || {},\n            remainingAttempts   = typeof(options.remainingAttempts) === 'undefined' ? -1 : options.remainingAttempts,\n            testPartId          = options.testPartId || '',\n            unansweredOnly      = toBoolean(options.unansweredOnly, false),\n\n            warnBeforeNext = shouldWarnBeforeNext(),\n            warnBeforeEnd = shouldWarnBeforeEnd();\n\n        /**\n         * Decide if we should display a warning before moving to the next item.\n         * This is useful to prevent accidental navigation (for example by pressing a shortcut) that would occur\n         * before the test taker actually gets a chance to answer an item\n         */\n        function shouldWarnBeforeNext() {\n            return nextItemWarning\n                && !itemCanBeTriedAtWill();\n                //&& !exitTimedSectionWarning(); //todo: this should be implemented to prevent a double warning!\n        }\n\n        /**\n         * We try to decide if the test taker has the freedom to come back to this item as many times as he wants\n         */\n        function itemCanBeTriedAtWill() {\n            return (\n                isLast === false                // the test is not over\n                && isLinear === false           // the context is not linear\n                && remainingAttempts === -1     // the item doesn't have a configured max attempts number\n                && !isNextItemInLinearPart()    // the next item is not in a linear part\n            );\n        }\n\n        /**\n         * Check if the next item is in a linear part, as this would prevent the test taker to come back to the current item\n         */\n        function isNextItemInLinearPart() {\n            return nextPart && typeof nextPart.isLinear !== 'undefined'\n                && isLastOfPart()\n                && nextPart.isLinear === true;\n        }\n\n        /**\n         * Decide if we should display a warning before ending the test\n         */\n        function shouldWarnBeforeEnd() {\n            return shouldWarnOnTestEnd()\n                || shouldWarnOnPartChange();\n        }\n\n        /**\n         * Are we on the last test item?\n         * @returns {Boolean}\n         */\n        function shouldWarnOnTestEnd() {\n            return isLast\n                && (\n                    endTestWarning                      // warning is explicitly required by endTestWarning category\n                    || warnBeforeNext                   // warning is implicitly triggered by the next item warning being true (prevent double warning)\n                )\n                && shouldWarnForUnansweredItems();\n        }\n\n        /**\n         * Provide the opportunity to cancel the display of the warning if there are no unanswered/flagged item\n         * for this to work, the unansweredOnly option has to be set\n         * @returns {Boolean}\n         */\n        function shouldWarnForUnansweredItems() {\n            var hasUnanswered = stats && ((stats.questions - stats.answered) !== 0),\n                hasFlagged = stats && stats.flagged !== 0;\n\n            if (unansweredOnly) {\n                return (hasUnanswered || hasFlagged);\n            } else {\n                return true;\n            }\n        }\n\n        /**\n         * Are we on the last part item?\n         * @returns {Boolean}\n         */\n        function shouldWarnOnPartChange() {\n            return nextPartWarning\n                && isLastOfPart()\n                && shouldWarnForUnansweredItems();\n        }\n\n        /**\n         * Check if the next item belong to a different part\n         * @returns {Boolean}\n         */\n        function isLastOfPart() {\n            return nextPart && nextPart.id\n                && testPartId !== nextPart.id;\n        }\n\n        /**\n         * The helper object\n         */\n        return {\n            shouldWarnBeforeEnd: function () {\n                return warnBeforeEnd;\n            },\n            shouldWarnBeforeNext: function () {\n                return warnBeforeNext;\n            }\n        };\n    };\n\n    return nextWarningHelper;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Next\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/next',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',\n    'taoQtiTest/runner/helpers/messages',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/stats',\n    'util/shortcut',\n    'util/namespace',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, nextWarningHelper, messages, mapHelper, statsHelper, shortcut, namespaceHelper, buttonTpl){\n    'use strict';\n\n    /**\n     * The display of the next button\n     */\n    var buttonData = {\n        next : {\n            control : 'move-forward',\n            title   : __('Submit and go to the next item'),\n            icon    : 'forward',\n            text    : __('Next')\n        },\n        end : {\n            control : 'move-end',\n            title   : __('Submit and go to the end of the test'),\n            icon    : 'fast-forward',\n            text    : __('End test')\n        }\n    };\n\n    /**\n     * Create the button based on the current context\n     * @param {Object} context - the test context\n     * @returns {jQueryElement} the button\n     */\n    var createElement = function createElement(context){\n        var dataType = context.isLast ? 'end' : 'next';\n        return $(buttonTpl(buttonData[dataType]));\n    };\n\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {Object} context - the test context\n     */\n    var updateElement = function updateElement($element, context){\n        var dataType = context.isLast ? 'end' : 'next';\n        if($element.attr('data-control') !== buttonData[dataType].control){\n\n            $element.attr('data-control', buttonData[dataType].control)\n                    .attr('title', buttonData[dataType].title)\n                    .find('.text').text(buttonData[dataType].text);\n\n            if(dataType === 'next'){\n                $element.find('.icon-' + buttonData.end.icon)\n                        .removeClass('icon-' + buttonData.end.icon)\n                        .addClass('icon-' + buttonData.next.icon);\n            } else {\n                $element.find('.icon-' + buttonData.next.icon)\n                        .removeClass('icon-' + buttonData.next.icon)\n                        .addClass('icon-' + buttonData.end.icon);\n            }\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'next',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData();\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            //plugin behavior\n            /**\n             * @param {Boolean} nextItemWarning - enable the display of a warning when going to the next item.\n             * Note: the actual display of the warning depends on other conditions (see nextWarningHelper)\n             */\n            function doNext(nextItemWarning) {\n                var context = testRunner.getTestContext(),\n                    testOptions = context.options || {};\n\n                var map = testRunner.getTestMap();\n                var nextItemPosition = context.itemPosition + 1;\n\n                // x-tao-option-unansweredWarning is a deprecated option whose behavior now matches the one of\n                // x-tao-option-nextPartWarning with the unansweredOnly option\n                var nextPartWarning = testOptions.nextPartWarning || testOptions.unansweredWarning;\n                var unansweredOnly =\n                    !testOptions.endTestWarning // this check to avoid an edge case where having both endTestWarning\n                                                // and unansweredWarning options would prevent endTestWarning to behave normally\n                    && testOptions.unansweredWarning;\n\n                var warningScope = (nextPartWarning) ? 'part' : 'test';\n\n\n                function enableNav() {\n                    testRunner.trigger('enablenav');\n                }\n\n                testRunner.trigger('disablenav');\n\n                if (self.getState('enabled') !== false) {\n                    var warningHelper = nextWarningHelper({\n                        endTestWarning:     testOptions.endTestWarning,\n                        isLast:             context.isLast,\n                        isLinear:           context.isLinear,\n                        nextItemWarning:    nextItemWarning,\n                        nextPartWarning:    nextPartWarning,\n                        nextPart:           mapHelper.getItemPart(map, nextItemPosition),\n                        remainingAttempts:  context.remainingAttempts,\n                        testPartId:         context.testPartId,\n                        unansweredWarning:  testOptions.unansweredWarning,\n                        stats:              statsHelper.getInstantStats(warningScope, testRunner),\n                        unansweredOnly:     unansweredOnly\n                    });\n\n                    if (warningHelper.shouldWarnBeforeEnd()) {\n                        testRunner.trigger(\n                            'confirm.endTest',\n                            messages.getExitMessage(\n                                __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\n                                warningScope, testRunner),\n                            _.partial(triggerNextAction, context), // if the test taker accept\n                            enableNav                              // if he refuse\n                        );\n\n                    } else if (warningHelper.shouldWarnBeforeNext()) {\n                        testRunner.trigger(\n                            'confirm.next',\n                            __('You are about to go to the next item. Click OK to continue and go to the next item.'),\n                            _.partial(triggerNextAction, context), // if the test taker accept\n                            enableNav                              // if he refuse\n                        );\n\n                    } else {\n                        triggerNextAction(context);\n                    }\n                }\n            }\n\n            function triggerNextAction(context) {\n                if(context.isLast){\n                    self.trigger('end');\n                }\n                testRunner.next();\n            }\n\n            //create the button (detached)\n            this.$element = createElement(testRunner.getTestContext());\n\n            //attach behavior\n            this.$element.on('click', function(e){\n                e.preventDefault();\n                testRunner.trigger('nav-next');\n            });\n\n            if(testConfig.allowShortcuts && pluginShortcuts.trigger){\n                shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.trigger, this.getName(), true), function(e) {\n                    if (self.getState('enabled') === true) {\n                        testRunner.trigger('nav-next', true);\n                    }\n                }, {\n                    avoidInput: true,\n                    prevent: true\n                });\n            }\n\n            //disabled by default\n            this.disable();\n\n            //change plugin state\n            testRunner\n                .on('loaditem', function(){\n                    updateElement(self.$element, testRunner.getTestContext());\n                })\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                })\n                .on('hidenav', function(){\n                    self.hide();\n                })\n                .on('shownav', function(){\n                    self.show();\n                })\n                .on('nav-next', function(nextItemWarning) {\n                    doNext(nextItemWarning);\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n\n            //attach the element to the navigation area\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            shortcut.remove('.' + this.getName());\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Martin Nicholson <martin@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/next/dialogConfirmNext',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/dialog',\n    'tpl!ui/dialog/tpl/checkbox'\n], function ($, _, __, dialog, checkboxTpl) {\n    'use strict';\n\n    /**\n     * Displays a confirmation dialog with a checkbox in it\n     *\n     * @param {String} heading - Above the main message\n     * @param {String} message - The displayed message\n     * @param {Function} accept - An action called when the dialog is accepted\n     * @param {Function} refuse - An action called when the dialog is refused\n     * @param {Object} checkboxParams - Checkbox options\n     * @param {Boolean} [checkboxParams.checked] - True to render it checked\n     * @param {Function} [checkboxParams.submitChecked] - Action called when dialog accepted with checkbox checked\n     * @param {Function} [checkboxParams.submitUnchecked] - Action called when dialog accepted with checkbox unchecked\n     * @returns {dialog} - Returns the dialog instance\n     */\n    return function dialogConfirmNext(heading, message, accept, refuse, checkboxParams, dialogOptions) {\n        var accepted = false;\n        var dlg;\n        var content = null;\n        if (checkboxParams && checkboxParams.checked !== true) {\n            content = checkboxTpl({\n                checked: false,\n                text: \"Don't show this again next time\",\n                id: 'dont-show-again'\n            });\n        }\n        dialogOptions = _.defaults({\n            heading: heading,\n            message: message,\n            content: content,\n            autoRender: true,\n            autoDestroy: true,\n            buttons: [{\n                id : 'cancel',\n                type : 'regular',\n                label : __('Cancel'),\n                close: true\n            },\n            {\n                id : 'ok',\n                type : 'info',\n                label : __('Go to next item'),\n                close: true\n            }],\n            onOkBtn: function onOkBtn() {\n                var $checkbox;\n                accepted = true;\n                if (_.isFunction(accept)) {\n                    accept.call(this);\n\n                    if (checkboxParams) {\n                        // handle checkbox callbacks:\n                        $checkbox = $('input[name=\"dont-show-again\"]', this);\n                        if ($checkbox.prop('checked') && _.isFunction(checkboxParams.submitChecked)) {\n                            checkboxParams.submitChecked();\n                        }\n                        else if (!$checkbox.prop('checked') && _.isFunction(checkboxParams.submitUnchecked)) {\n                            checkboxParams.submitUnchecked();\n                        }\n                    }\n                }\n            }\n        }, dialogOptions);\n\n        dlg = dialog(dialogOptions);\n\n        if (_.isFunction(refuse)) {\n            dlg.on('closed.modal', function() {\n                if (!accepted) {\n                    refuse.call(this);\n                }\n            });\n        }\n        return dlg;\n    };\n\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : linearNextItemWarning\n *\n * @author Martin Nicholson <martin@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/next/linearNextItemWarning',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/currentItem',\n    'taoQtiTest/runner/plugins/navigation/next/dialogConfirmNext'\n], function ($, _, __, pluginFactory, mapHelper, currentItemHelper, dialogConfirmNext){\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'linearNextItemWarning',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData();\n            var testConfig = testData.config || {};\n            var testStore = testRunner.getTestStore(); // we'll store user's checkbox choice in here\n            testStore.setVolatile(self.getName());\n\n            /**\n             * Provides different variants of message text\n             * @param {String} action - 'next' or 'skip'\n             * @returns {String}\n             */\n            function getCustomNextMessage(action) {\n                var customNextMessage;\n                var itemPartiallyAnswered = currentItemHelper.isAnswered(testRunner, true);\n                if (! itemPartiallyAnswered) {\n                    customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back and provide an answer.');\n                }\n                else if (action === 'next') {\n                    customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back and change your answer.');\n                }\n                else if (action === 'skip') {\n                    customNextMessage = __('Are you sure you want to clear your answer and go to the next item? You will not be able to go back and provide an answer.');\n                }\n                else {\n                    // more generic message for default case:\n                    customNextMessage = __('Are you sure you want to go to the next item? You will not be able to go back.');\n                }\n                return customNextMessage;\n            }\n\n            //plugin behavior\n            /**\n             * Checks configuration, shows a dialog asking to confirm the nav action\n             *\n             * @param {String} action - 'next' or 'skip'\n             * @returns {Promise} - resolves if dialog accepted or not shown, rejects if dialog cancelled\n             */\n            function doNextWarning(action) {\n                testRunner.trigger('disablenav');\n\n                // Load testStore checkbox value (async)\n                return testStore.getStore(self.getName()).then(function(store) {\n                    return store.getItem('dontShowLinearNextItemWarning').then(function(checkboxValue) {\n                        var checkboxParams = null;\n\n                        // Show the warning unless user has turned it off:\n                        if (checkboxValue !== true) {\n                            // Define checkbox only if enabled by config:\n                            if (testConfig.enableLinearNextItemWarningCheckbox) {\n                                checkboxParams = {\n                                    checked: checkboxValue,\n                                    submitChecked: function() {\n                                        store.setItem('dontShowLinearNextItemWarning', true);\n                                    },\n                                    submitUnchecked: function() {\n                                        store.setItem('dontShowLinearNextItemWarning', false);\n                                    },\n                                };\n                            }\n                            return new Promise(function(resolve, reject) {\n                                // show special dialog:\n                                dialogConfirmNext(\n                                    __('Go to the next item?'),\n                                    getCustomNextMessage(action),\n                                    resolve, // if the test taker accepts\n                                    function cancel() { // if he refuses\n                                        reject({\n                                            cancel: true\n                                        });\n                                    },\n                                    checkboxParams\n                                );\n                            });\n                        }\n                    });\n                })\n                .catch(function(err) {\n                    // if the rejection is due to an error, rethrow it\n                    if (err && err instanceof Error) {\n                        throw err;\n                    }\n                    if (err && err.cancel === true) {\n                        testRunner.trigger('enablenav');\n                        return Promise.reject(); // to cancel the move\n                    }\n                });\n            }\n\n            // Attach this plugin to 'next' & 'skip' events\n            testRunner\n                .on('init', function() {\n                    // Clear the stored checkbox value before each test:\n                    testStore.getStore(self.getName()).then(function(store) {\n                        store.setItem('dontShowLinearNextItemWarning', null);\n                    });\n                })\n                .before('move skip', function(e, type, scope) {\n                    var context = testRunner.getTestContext();\n                    var map = testRunner.getTestMap();\n                    var item = mapHelper.getItemAt(map, context.itemPosition);\n\n                    if (context.isLinear) {\n                        // Do nothing if nextSection warning imminent:\n                        if (scope === 'section' && context.options.nextSectionWarning) {\n                            return;\n                        }\n                        // Do nothing if endOfPart warning imminent:\n                        else if (context.options.nextPartWarning) {\n                            return;\n                        }\n                        // Do nothing if 'informational item':\n                        else if (item.informational) {\n                            return;\n                        }\n                        // Show dialog if conditions met:\n                        else if (type === 'next' && !context.isLast && testConfig.forceEnableLinearNextItemWarning) {\n                            return doNextWarning('next');\n                        }\n                        else if (e.name === 'skip' && !context.isLast && testConfig.forceEnableLinearNextItemWarning) {\n                            return doNextWarning('skip');\n                        }\n                    }\n                });\n\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Next Section\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/nextSection',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/messages',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, messages, buttonTpl){\n    'use strict';\n\n    return pluginFactory({\n        name : 'nextsection',\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testConfig = testRunner.getTestData().config;\n\n            function toggle(){\n                var options = testRunner.getTestContext().options;\n                if(testConfig.nextSection && (options.nextSection || options.nextSectionWarning)){\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function nextSection() {\n                testRunner.next('section');\n            }\n\n            this.$element = $(buttonTpl({\n                control : 'next-section',\n                title   : __('Skip to the next section'),\n                icon    : 'fast-forward',\n                text    : __('Next Section')\n            }));\n\n            this.$element.on('click', function(e){\n                var context = testRunner.getTestContext();\n                var enable = _.bind(self.enable, self);\n                e.preventDefault();\n                if(self.getState('enabled') !== false){\n                    self.disable();\n\n                    if(context.options.nextSectionWarning){\n                        testRunner.trigger(\n                            'confirm.nextsection',\n                            messages.getExitMessage(\n                                __('Once you close this section, you cannot return to it or change your answers.'),\n                                'section', testRunner),\n                            nextSection, // if the test taker accept\n                            enable,      // if the test taker refuse\n                            {\n                                buttons: {\n                                    labels: {\n                                        ok: __('Close this Section'),\n                                        cancel:  __('Review my Answers')\n                                    }\n                                }\n                            }\n                        );\n                    } else {\n                        nextSection();\n                    }\n                }\n            });\n\n            this.disable();\n            toggle();\n\n            testRunner\n                .on('loaditem', toggle)\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                })\n                .on('hidenav', function(){\n                    self.hide();\n                })\n                .on('shownav', function(){\n                    self.show();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n\n            //attach the element to the navigation area\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Previous\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/previous',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/helpers/navigation',\n    'taoQtiTest/runner/helpers/map',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, shortcut, namespaceHelper, navigationHelper, mapHelper, buttonTpl){\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'previous',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData();\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            /**\n             * Check if the \"Previous\" functionality should be available or not\n             */\n            var canDoPrevious = function canDoPrevious() {\n                var testMap = testRunner.getTestMap();\n                var context = testRunner.getTestContext();\n                var previousSection;\n                var previousPart;\n\n                // check TestMap if empty\n                if( _.isPlainObject(testMap) && _.size(testMap) === 0){\n                    return false;\n                }\n\n                //first item of the test\n                if (navigationHelper.isFirst(testMap, context.itemIdentifier)) {\n                    return false;\n                }\n\n                //first item of a section\n                if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'section')) {\n\n                    //when entering an adaptive section,\n                    //you can't leave the section from the beginning\n                    if(context.isCatAdaptive){\n                        return false;\n                    }\n\n                    //if the previous section is adaptive or a timed section\n                    previousSection = mapHelper.getItemSection(testMap, context.itemPosition - 1);\n                    if(previousSection.isCatAdaptive || (previousSection.timeConstraint && !context.options.noExitTimedSectionWarning) ){\n                        return false;\n                    }\n                }\n\n                if (navigationHelper.isFirstOf(testMap, context.itemIdentifier, 'part')) {\n\n                    //if the previous part is linear, we don't enter it too\n                    previousPart = mapHelper.getItemPart(testMap, context.itemPosition - 1);\n                    if(previousPart.isLinear){\n                        return false;\n                    }\n\n                }\n                return context.isLinear === false && context.canMoveBackward === true;\n            };\n\n            /**\n             * Hide the plugin if the Previous functionality shouldn't be available\n             */\n            var toggle = function toggle(){\n                if(canDoPrevious()){\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            };\n\n            //build element (detached)\n            this.$element =  $(buttonTpl({\n                control : 'move-backward',\n                title   : __('Submit and go to the previous item'),\n                icon    : 'backward',\n                text    : __('Previous')\n            }));\n\n            //attach behavior\n            function doPrevious(previousItemWarning) {\n                var context = testRunner.getTestContext();\n\n                function enableNav() {\n                    testRunner.trigger('disablenav');\n                }\n\n                testRunner.trigger('disablenav');\n\n                if(self.getState('enabled') !== false){\n                    if (previousItemWarning && context.remainingAttempts !== -1) {\n                        testRunner.trigger(\n                            'confirm.previous',\n                            __('You are about to go to the previous item. Click OK to continue and go to the previous item.'),\n                            testRunner.previous, // if the test taker accept\n                            enableNav()          // if he refuses\n                        );\n\n                    } else {\n                        testRunner.previous();\n                    }\n                }\n            }\n\n            this.$element.on('click', function(e){\n                e.preventDefault();\n                testRunner.trigger('nav-previous');\n            });\n\n            if(testConfig.allowShortcuts && pluginShortcuts.trigger){\n                shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.trigger, this.getName(), true), function() {\n                    if (canDoPrevious() && self.getState('enabled') === true) {\n                        testRunner.trigger('nav-previous', [true]);\n                    }\n                }, {\n                    avoidInput: true,\n                    prevent: true\n                });\n            }\n\n            //start disabled\n            toggle();\n            self.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', toggle)\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                })\n                .on('hidenav', function(){\n                    self.hide();\n                })\n                .on('shownav', function(){\n                    self.show();\n                })\n                .on('nav-previous', function(previousItemWarning){\n                    doPrevious(previousItemWarning);\n                });\n        },\n\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            shortcut.remove('.' + this.getName());\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/navigation/review/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n        <ul class=\\\"collapsible-panel plain\\\">\\n            <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n            <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n            </li>\\n        </ul>\\n    </div>\\n    \";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \"(<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \"icon-unanswered \";\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \"icon-flagged \";\n  }\n\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"qti-panel qti-navigator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n    <div class=\\\"qti-navigator-collapsible\\\">\\n        <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\n        <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\n    </div>\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n\\n    <div class=\\\"qti-navigator-filters\\\">\\n        <ul class=\\\"plain clearfix\\\">\\n            <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\" class=\\\"qti-navigator-tab\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </span>\\n            </li>\\n\\n            <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                <span class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\">\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </span>\\n            </li>\\n\\n            <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                <span class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\">\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </span>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <nav class=\\\"qti-navigator-tree\\\"></nav>\\n\\n    <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n        <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n        <p class=\\\"qti-navigator-message\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n        </p>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/navigation/review/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            <span class=\\\"icon-up\\\"></span>\\n            <span class=\\\"icon-down\\\"></span>\\n        </span>\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isLinear), {hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n            <p class=\\\"qti-navigator-message\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n            </p>\\n            <p class=\\\"qti-navigator-actions\\\">\\n                <button class=\\\"btn-info small\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-play r\\\"></span>\\n                </button>\\n            </p>\\n        </div>\\n        \";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n        \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                    <span class=\\\"qti-navigator-counter\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.answered)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.total)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                </span>\\n                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n            </li>\\n            \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"qti-navigator-item \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"qti-navigator-icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n                            <span class=\\\"qti-navigator-number\\\">\";\n  if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                        </span>\\n                    </li>\\n                    \";\n  return buffer;\n  }\n\n  buffer += \"<ul class=\\\"qti-navigator-parts plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/review/navigator',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/autoscroll',\n    'taoQtiTest/runner/helpers/map',\n    'tpl!taoQtiTest/runner/plugins/navigation/review/navigator',\n    'tpl!taoQtiTest/runner/plugins/navigation/review/navigatorTree'\n], function ($, _, __, component, autoscroll, mapHelper, navigatorTpl, navigatorTreeTpl) {\n    'use strict';\n\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        scope: 'test',\n        canCollapse: false,\n        preventsUnseen: true,\n        hidden: false\n    };\n\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n    var _cssCls = {\n        active: 'active',\n        collapsed: 'collapsed',\n        collapsible: 'collapsible',\n        hidden: 'hidden',\n        disabled: 'disabled',\n        flagged: 'flagged',\n        answered: 'answered',\n        viewed: 'viewed',\n        unseen: 'unseen',\n        info: 'info',\n        icon: 'qti-navigator-icon',\n        scope: {\n            test: 'scope-test',\n            testPart: 'scope-test-part',\n            testSection: 'scope-test-section'\n        }\n    };\n\n    /**\n     * List of icon CSS classes\n     * @type {Array}\n     * @private\n     */\n    var _iconCls = [\n        _cssCls.info,\n        _cssCls.flagged,\n        _cssCls.answered,\n        _cssCls.viewed\n    ];\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    var _selectors = {\n        component: '.qti-navigator',\n        filterBar: '.qti-navigator-filters',\n        filter: '.qti-navigator-filter',\n        tree: '.qti-navigator-tree',\n        collapseHandle: '.qti-navigator-collapsible',\n        linearState: '.qti-navigator-linear',\n        infoAnswered: '.qti-navigator-answered .qti-navigator-counter',\n        infoViewed: '.qti-navigator-viewed .qti-navigator-counter',\n        infoUnanswered: '.qti-navigator-unanswered .qti-navigator-counter',\n        infoFlagged: '.qti-navigator-flagged .qti-navigator-counter',\n        infoPanel: '.qti-navigator-info',\n        infoPanelLabels: '.qti-navigator-info > .qti-navigator-label',\n        tabInfoAll: '[data-mode=\"all\"] .qti-navigator-counter',\n        tabInfoUnanswered: '[data-mode=\"unanswered\"] .qti-navigator-counter',\n        tabInfoFlagged: '[data-mode=\"flagged\"] .qti-navigator-counter',\n        parts: '.qti-navigator-part',\n        partLabels: '.qti-navigator-part > .qti-navigator-label',\n        sections: '.qti-navigator-section',\n        sectionLabels: '.qti-navigator-section > .qti-navigator-label',\n        items: '.qti-navigator-item',\n        itemLabels: '.qti-navigator-item > .qti-navigator-label',\n        itemIcons: '.qti-navigator-item > .qti-navigator-icon',\n        activeItem: '.qti-navigator-item.active',\n        icons: '.qti-navigator-icon',\n        linearStart: '.qti-navigator-linear-part button',\n        counters: '.qti-navigator-counter',\n        actives: '.active',\n        collapsible: '.collapsible',\n        collapsiblePanels: '.collapsible-panel',\n        unseen: '.unseen',\n        answered: '.answered',\n        flagged: '.flagged',\n        notFlagged: ':not(.flagged)',\n        notAnswered: ':not(.answered)',\n        notInformational: ':not(.info)',\n        informational: '.info',\n        hidden: '.hidden',\n        disabled : '.disabled'\n    };\n\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n    var _filterMap = {\n        all: \"\",\n        unanswered: [_selectors.answered, _selectors.informational].join(','),\n        flagged: _selectors.notFlagged,\n        answered: _selectors.notAnswered,\n        filtered: _selectors.hidden\n    };\n\n    /**\n     *\n     * @type {Object}\n     */\n    var navigatorApi = {\n        /**\n         * Updates the stats on the flagged items in the current map\n         * @param {Number} position\n         * @param {Boolean} flag\n         */\n        updateStats: function updateStats(position, flag) {\n            var map = this.map;\n            var item;\n\n            if (map) {\n                item = mapHelper.getItemAt(map, position);\n\n                if (item) {\n                    item.flagged = flag;\n                    mapHelper.updateItemStats(map, position);\n                }\n            }\n        },\n\n        /**\n         * Gets the total number of items for the provided target\n         * @param {Object} progression\n         * @param {String} target\n         * @returns {Number}\n         */\n        getProgressionTotal: function getProgressionTotal(progression, target) {\n            var total;\n\n            if ('questions' === target) {\n                total = progression.questions;\n            } else {\n                total = progression.total;\n            }\n\n            return total;\n        },\n\n        /**\n         * Set the marked state of an item\n         * @param {Number|String|jQuery} position\n         * @param {Boolean} flag\n         */\n        setItemFlag: function setItemFlag(position, flag) {\n            var $item = position && position.jquery ? position : this.controls.$tree.find('[data-position=' + position + ']');\n            var progression = this.progression;\n            var icon;\n\n            // update the map stats\n            this.updateStats(position, flag);\n\n            // update the item flag\n            $item.toggleClass(_cssCls.flagged, flag);\n\n            // set the item icon according to its state\n            icon = _.find(_iconCls, _.bind($item.hasClass, $item)) || _cssCls.unseen;\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\n\n            // update the info panel\n            progression.flagged = this.controls.$tree.find(_selectors.flagged).length;\n            this.writeCount(this.controls.$infoFlagged, progression.flagged, this.getProgressionTotal(progression, 'questions'));\n\n            // recompute the filters\n            this.filter(this.currentFilter);\n        },\n\n        /**\n         * Filters the items by a criteria\n         * @param {String} criteria\n         */\n        filter: function filter(criteria) {\n            var self = this;\n\n            // remove the current filter by restoring all items\n            var $items = this.controls.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\n\n            // filter the items according to the provided criteria\n            var filterCb = _filterMap[criteria];\n            if (filterCb) {\n                $items.filter(filterCb).addClass(_cssCls.hidden);\n            }\n\n            // update the section counters\n            this.controls.$tree.find(_selectors.sections).each(function () {\n                var $section     = $(this);\n                var $itemsFound  = $section.find(_selectors.items).not(_selectors.hidden);\n                var $filtered    = $itemsFound.not(_selectors.disabled);\n                self.writeCount($section.find(_selectors.counters), $filtered.length, $itemsFound.length);\n            });\n            this.currentFilter = criteria;\n        },\n\n        /**\n         * Update the config\n         * @param {Object} [config]\n         * @returns {navigatorApi}\n         */\n        updateConfig: function updateConfig(config) {\n            var $component = this.getElement();\n            var scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\n\n            // apply the new config\n            config = _.merge(this.config, config || {});\n\n            // enable/disable the collapsing of the panel\n            $component.toggleClass(_cssCls.collapsible, config.canCollapse);\n\n            // update the component CSS class according to the scope\n            $component.removeClass(scopeClass);\n            scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\n            $component.addClass(scopeClass);\n\n            return this;\n        },\n\n        /**\n         * Keep the active item visible, auto scroll if needed\n         */\n        autoScroll: function autoScroll() {\n            autoscroll(this.controls.$tree.find(_selectors.activeItem), this.controls.$tree);\n        },\n\n        /**\n         * Updates the review screen\n         * @param {Object} map The current test map\n         * @param {Object} context The current test context\n         * @returns {navigatorApi}\n         * @fires navigator#update\n         */\n        update: function update(map, context) {\n            var scopedMap = this.getScopedMap(map, context);\n            var progression = scopedMap.stats || {\n                questions: 0,\n                answered: 0,\n                flagged: 0,\n                viewed: 0,\n                total: 0\n            };\n            var totalQuestions = this.getProgressionTotal(progression, 'questions');\n            var activeItem, isSkipaheadEnabled;\n\n            this.map = map;\n            this.progression = progression;\n\n            // update the info panel\n            this.writeCount(this.controls.$infoAnswered, progression.answered, totalQuestions);\n            this.writeCount(this.controls.$infoUnanswered, totalQuestions - progression.answered, totalQuestions);\n            this.writeCount(this.controls.$infoViewed, progression.viewed, this.getProgressionTotal(progression, 'total'));\n            this.writeCount(this.controls.$infoFlagged, progression.flagged, totalQuestions);\n            this.writeCount(this.controls.$infoAll, totalQuestions, null);\n\n\n            // rebuild the tree\n            if (!context.isLinear) {\n                this.controls.$filterBar.show();\n                this.controls.$linearState.hide();\n                this.controls.$tree.html(navigatorTreeTpl(scopedMap));\n\n                this.autoScroll();\n\n                activeItem = mapHelper.getActiveItem(scopedMap);\n                this.setState('prevents-unseen', this.config.preventsUnseen);\n\n                isSkipaheadEnabled = activeItem && activeItem.categories && (_.indexOf(activeItem.categories, 'x-tao-option-review-skipahead') >= 0);\n\n                this.setState('skipahead-enabled', isSkipaheadEnabled);\n\n                if (this.config.preventsUnseen && !isSkipaheadEnabled) {\n                    // disables all unseen items to prevent the test taker has access to.\n                    this.controls.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n                }\n            } else {\n                this.controls.$filterBar.hide();\n                this.controls.$linearState.show();\n                this.controls.$tree.empty();\n            }\n\n            // apply again the current filter\n            this.filter(this.controls.$filters.filter(_selectors.actives).data('mode'));\n\n            /**\n             * @event navigator#update the navigation data have changed\n             */\n            this.trigger('update');\n\n            return this;\n        },\n\n        /**\n         * Gets the scoped map\n         * @param {Object} map The current test map\n         * @param {Object} context The current test context\n         * @returns {object} The scoped map\n         */\n        getScopedMap: function getScopedMap(map, context) {\n            var scopedMap = mapHelper.getScopeMapFromContext(map, context, this.config.scope);\n            var testPart = mapHelper.getPart(scopedMap, context.testPartId) || {};\n            var section = mapHelper.getSection(scopedMap, context.sectionId) || {};\n            var item = mapHelper.getItem(scopedMap, context.itemIdentifier) || {};\n\n            // set the active part/section/item\n            testPart.active = true;\n            section.active = true;\n            item.active = true;\n\n            // adjust each item with additional meta\n            return mapHelper.each(scopedMap, function(itm) {\n                var cls = [];\n                var icon = '';\n\n                if (itm.active) {\n                    cls.push('active');\n                }\n                if (itm.informational) {\n                    cls.push('info');\n                    icon = icon || 'info';\n                }\n                if (itm.flagged) {\n                    cls.push('flagged');\n                    icon = icon || 'flagged';\n                }\n                if (itm.answered) {\n                    cls.push('answered');\n                    icon = icon || 'answered';\n                }\n                if (itm.viewed) {\n                    cls.push('viewed');\n                    icon = icon || 'viewed';\n                } else {\n                    cls.push('unseen');\n                    icon = icon || 'unseen';\n                }\n\n                itm.cls = cls.join(' ');\n                itm.icon = icon;\n            });\n        },\n\n        /**\n         * Updates a counter\n         * @param {jQuery} $place\n         * @param {Number} count\n         * @param {Number|Null} total\n         * @private\n         */\n        writeCount: function writeCount($place, count, total) {\n\n            var display = 0;\n            if($place.parent().hasClass('qti-navigator-tab')){\n                display = Math.max(count, 0);\n            }\n            else if(total > 0){\n                display = Math.min(count, total) + '/' + total;\n            }\n            $place.text(display);\n        },\n\n        /**\n         * Selects an item\n         * @param {String|jQuery} position The item's position\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\n         * @returns {jQuery} Returns the selected item\n         */\n        select: function select(position, open) {\n            // find the item to select and extract its hierarchy\n            var $tree = this.controls.$tree;\n            var selected = position && position.jquery ? position : $tree.find('[data-position=' + position + ']');\n            var hierarchy = selected.parentsUntil($tree);\n            var previousPosition = 0;\n            var $previous = $tree.find(_selectors.activeItem);\n            if ( $previous.length ) {\n                previousPosition = $previous.data('position');\n            }\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            if (open) {\n                this.openOnly(hierarchy);\n            }\n\n            // select the item\n            $tree.find(_selectors.actives).removeClass(_cssCls.active);\n            hierarchy.add(selected).addClass(_cssCls.active);\n\n            position = selected.data('position');\n\n            /**\n             * An item is selected\n             *\n             * @param {Number} position - The item position on which select\n             * @param {Number} previousPosition - The item position from which select\n             * @event navigator#selected\n             */\n            this.trigger('selected', position, previousPosition);\n\n            return selected;\n        },\n\n        /**\n         * Opens the tree on the selected item only\n         * @returns {jQuery} Returns the selected item\n         */\n        openSelected: function openSelected() {\n            // find the selected item and extract its hierarchy\n            var $tree = this.controls.$tree;\n            var selected = $tree.find(_selectors.items + _selectors.actives);\n            var hierarchy = selected.parentsUntil($tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            this.openOnly(hierarchy);\n\n            return selected;\n        },\n\n        /**\n         * Collapses the full tree and opens only the provided branch\n         * @param {jQuery} opened The element to be opened\n         * @param {jQuery} [root] The root element from which collapse the panels\n         */\n        openOnly: function openOnly(opened, root) {\n            (root || this.controls.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n            opened.removeClass(_cssCls.collapsed);\n        },\n\n        /**\n         * Toggles a panel\n         * @param {jQuery} panel The panel to toggle\n         * @param {String} [collapseSelector] Selector of panels to collapse\n         * @returns {Boolean} Returns `true` if the panel just expanded now\n         */\n        togglePanel: function togglePanel(panel, collapseSelector) {\n            var collapsed = panel.hasClass(_cssCls.collapsed);\n\n            if (collapseSelector) {\n                this.controls.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n            }\n\n            if (collapsed) {\n                panel.removeClass(_cssCls.collapsed);\n            } else {\n                panel.addClass(_cssCls.collapsed);\n            }\n            return collapsed;\n        },\n\n        /**\n         * Toggles the display state of the component\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n         * @returns {navigatorApi}\n         */\n        toggle: function toggle(show) {\n            if (typeof show === 'undefined') {\n                show = this.is('hidden');\n            }\n\n            if (show) {\n                this.show();\n            } else {\n                this.hide();\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     *\n     * @param {Object} config\n     * @param {String} [config.scope] Limit the review screen to a particular scope: test, testPart, testSection\n     * @param {Boolean} [config.preventsUnseen] Prevents the test taker to access unseen items\n     * @param {Boolean} [config.canCollapse] Allow the test taker to collapse the component\n     * @param {Boolean} [config.canFlag] Allow the test taker to flag items\n     * @param {Boolean} [config.hidden] Hide the component at init\n     * @param {Object} map The current test map\n     * @param {Object} context The current test context\n     * @returns {*}\n     */\n    function navigatorFactory(config, map, context) {\n\n        var navigator;\n\n        /**\n         * Flags an item\n         * @param {jQuery} $item\n         */\n        function flagItem($item) {\n            var position = $item.data('position');\n            var flagged = !$item.hasClass(_cssCls.flagged);\n\n            // update the display\n            navigator.setItemFlag(position, flagged);\n\n            /**\n             * An item is flagged\n             * @event navigator#flag\n             * @param {Number} position - The item position on which jump\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\n             */\n            navigator.trigger('flag', position, flagged);\n        }\n\n        /**\n         * Jumps to an item\n         * @param {jQuery} $item\n         * @private\n         */\n        function jump($item) {\n            var position = $item.data('position');\n\n            /**\n             * A jump to a particular item is required\n             * @event navigator#jump\n             * @param {Number} position - The item position on which jump\n             */\n            navigator.trigger('jump', position);\n        }\n\n        navigator = component(navigatorApi, _defaults)\n            .setTemplate(navigatorTpl)\n\n\n            // uninstalls the component\n            .on('destroy', function () {\n                this.controls = null;\n            })\n\n            // keep the activ item visible\n            .on('show', function () {\n                this.autoScroll();\n            })\n\n            // renders the component\n            .on('render', function () {\n                var self = this;\n\n                // main component elements\n                var $component = this.getElement();\n                var $filterBar = $component.find(_selectors.filterBar);\n                var $filters = $filterBar.find('li');\n                var $tree = $component.find(_selectors.tree);\n\n                // links the component to the underlying DOM elements\n                this.controls = {\n                    // access to info panel displaying counters\n\n                    $infoAnswered: $component.find(_selectors.infoAnswered),\n                    $infoViewed: $component.find(_selectors.infoViewed),\n                    $infoAll: $component.find(_selectors.tabInfoAll),\n                    $infoUnanswered: this.config.showLegend ?\n                        $component.find(_selectors.infoUnanswered) :\n                        $component.find(_selectors.tabInfoUnanswered),\n                    $infoFlagged: this.config.showLegend ?\n                        $component.find(_selectors.infoFlagged) :\n                        $component.find(_selectors.tabInfoFlagged),\n\n                    // access to filter switches\n                    $filterBar: $filterBar,\n                    $filters: $filters,\n\n                    // access to the tree of parts/sections/items\n                    $tree: $tree,\n\n                    // access to the panel displayed when a linear part is reached\n                    $linearState: $component.find(_selectors.linearState)\n                };\n\n                // apply options\n                this.updateConfig();\n\n                // click on the collapse handle: collapse/expand the review panel\n                $component.on('click' + _selectors.component, _selectors.collapseHandle, function () {\n                    if (!self.is('disabled')) {\n                        $component.toggleClass(_cssCls.collapsed);\n                        if ($component.hasClass(_cssCls.collapsed)) {\n                            self.openSelected();\n                        }\n                    }\n                });\n\n                // click on the info panel title: toggle the related panel\n                $component.on('click' + _selectors.component, _selectors.infoPanelLabels, function () {\n                    if (!self.is('disabled')) {\n                        self.togglePanel($(this).closest(_selectors.infoPanel), _selectors.infoPanel);\n                    }\n                });\n\n                // click on a part title: toggle the related panel\n                $tree.on('click' + _selectors.component, _selectors.partLabels, function () {\n                    var $panel;\n\n                    if (!self.is('disabled')) {\n                        $panel = $(this).closest(_selectors.parts);\n\n                        if (self.togglePanel($panel, _selectors.parts)) {\n                            if ($panel.hasClass(_cssCls.active)) {\n                                self.openSelected();\n                            } else {\n                                self.openOnly($panel.find(_selectors.sections).first(), $panel);\n                            }\n                        }\n                    }\n\n                });\n\n                // click on a section title: toggle the related panel\n                $tree.on('click' + _selectors.component, _selectors.sectionLabels, function () {\n                    if (!self.is('disabled')) {\n                        self.togglePanel($(this).closest(_selectors.sections), _selectors.sections);\n                    }\n                });\n\n                // click on an item: jump to the position\n                $tree.on('click' + _selectors.component, _selectors.itemLabels, function (event) {\n                    var $item, $target;\n\n                    if (!self.is('disabled')) {\n                        $item = $(this).closest(_selectors.items);\n\n                        if (!$item.hasClass(_cssCls.disabled)) {\n                            $target = $(event.target);\n                            if (self.config.canFlag && $target.is(_selectors.icons) && !$component.hasClass(_cssCls.collapsed)) {\n                                // click on the icon, just flag the item, unless the panel is collapsed\n                                if (!$item.hasClass(_cssCls.unseen) && !$item.hasClass(_cssCls.info)) {\n                                    flagItem($item);\n                                }\n                            } else if (!$item.hasClass(_cssCls.active)){\n                                // go to the selected item\n                                self.select($item);\n                                jump($item);\n                            }\n                        }\n                    }\n                });\n\n                // click on the start button inside a linear part: jump to the position\n                $tree.on('click' + _selectors.component, _selectors.linearStart, function () {\n                    var $btn;\n\n                    if (!self.is('disabled')) {\n                        $btn = $(this);\n\n                        // go to the first item of the linear part\n                        if (!$btn.hasClass(_cssCls.disabled)) {\n                            $btn.addClass(_cssCls.disabled);\n                            jump($btn);\n                        }\n                    }\n\n                });\n\n                // click on a filter button\n                $filterBar.on('click' + _selectors.component, _selectors.filter, function () {\n                    var $btn, mode;\n\n                    if (!self.is('disabled')) {\n                        $btn = $(this);\n                        mode = $btn.data('mode');\n\n                        // select the button\n                        $filters.removeClass(_cssCls.active);\n                        $component.removeClass(_cssCls.collapsed);\n                        $btn.addClass(_cssCls.active);\n\n                        // filter the items\n                        self.filter(mode);\n\n                        //after filtering, ensure that the active item (if exists) is visible\n                        self.autoScroll();\n                    }\n                });\n\n                this.update(map, context);\n            });\n\n        // set default filter\n        navigator.currentFilter = 'all';\n\n        // the component will be ready\n        return navigator.init(config);\n    }\n\n    return navigatorFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Control Plugin : Review panel\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/review/review',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/plugins/navigation/review/navigator'\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory, mapHelper, navigatorFactory) {\n    'use strict';\n\n    /**\n     * The display states of the buttons\n     */\n    var buttonData = {\n        setFlag: {\n            control: 'set-item-flag',\n            title: __('Flag the current item for later review'),\n            icon: 'anchor',\n            text: __('Flag for Review')\n        },\n        unsetFlag: {\n            control: 'unset-item-flag',\n            title: __('Do not flag the current item for later review'),\n            icon: 'anchor',\n            text: __('Unflag for Review')\n        },\n        showReview: {\n            control: 'show-review',\n            title: __('Show the review screen'),\n            icon: 'right',\n            text: __('Show Review')\n        },\n        hideReview: {\n            control: 'hide-review',\n            title: __('Hide the review screen'),\n            icon: 'left',\n            text: __('Hide Review')\n        }\n    };\n\n    /**\n     * Gets the definition of the flagItem button related to the context\n     * @param {Object} context - the test context\n     * @returns {Object}\n     */\n    function getFlagItemButtonData(context) {\n        var dataType = context.itemFlagged ? 'unsetFlag' : 'setFlag';\n        return buttonData[dataType];\n    }\n\n    /**\n     * Gets the definition of the toggleNavigator button related to the context\n     * @param {Object} navigator - the navigator component\n     * @returns {Object}\n     */\n    function getToggleButtonData(navigator) {\n        var dataType = navigator.is('hidden') ? 'showReview' : 'hideReview';\n        return buttonData[dataType];\n    }\n\n    /**\n     * Update the button based on the provided data\n     * @param {Component} button - the element to update\n     * @param {Object} data - the button data\n     */\n    function updateButton(button, data) {\n        var $button = button.getElement();\n        if (button.is('rendered')) {\n            if ($button.data('control') !== data.control) {\n                $button\n                    .data('control', data.control)\n                    .attr('title', data.title);\n\n                $button.find('.icon').attr('class', 'icon icon-' + data.icon);\n                $button.find('.text').text(data.text);\n\n                if (_.contains(data.control, 'flag')) {\n                    if (button.is('active')) {\n                        button.turnOff();\n                    } else {\n                        button.turnOn();\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Checks if the current context allows to mark the item for review\n     * @param {Object} testRunner\n     * @returns {Boolean}\n     */\n    function canFlag(testRunner) {\n        var context = testRunner.getTestContext();\n        var map = testRunner.getTestMap();\n        var item = mapHelper.getItemAt(map, context.itemPosition);\n        return !!(!context.isLinear && context.options.markReview && !(item && item.informational));\n    }\n\n    /**\n     * Creates the timer plugin\n     */\n    return pluginFactory({\n        name: 'review',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData();\n            var testContext = testRunner.getTestContext();\n            var testMap = testRunner.getTestMap();\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n            var navigatorConfig = testConfig.review || {};\n            var previousItemPosition;\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            function isPluginAllowed() {\n                var context = testRunner.getTestContext();\n                return navigatorConfig.enabled && context && context.options && context.options.reviewScreen;\n            }\n\n            /**\n             * Mark an item for review\n             * @param {Number} position\n             * @param {Boolean} flag\n             * @returns {Promise}\n             */\n            function flagItem(position, flag) {\n                self.disable();\n\n                return testRunner.getProxy()\n                    .callTestAction('flagItem', {\n                        position: position,\n                        flag: flag\n                    })\n                    .then(function () {\n                        var context = testRunner.getTestContext();\n\n                        // update the state in the context if the flagged item is the current one\n                        if (context.itemPosition === position) {\n                            context.itemFlagged = flag;\n                        }\n\n                        // update the display of the flag button\n                        updateButton(self.flagItemButton, getFlagItemButtonData(context));\n\n                        // update the item state\n                        self.navigator.setItemFlag(position, flag);\n                        self.enable();\n                    })\n                    .catch(function () {\n                        // rollback on the item flag\n                        self.navigator.setItemFlag(position, !flag);\n                        self.enable();\n                    });\n            }\n\n            /**\n             * Mark the current item for review\n             */\n            function flagCurrentItem() {\n                var context = testRunner.getTestContext();\n                if (self.getState('enabled') !== false) {\n                    flagItem(context.itemPosition, !context.itemFlagged);\n                }\n            }\n\n            /**\n             * Shows/hides the review panel\n             *\n             * @param [{Boolean} forcedState], true will show the panel\n             */\n            function togglePanel(forcedState) {\n                var isHidden = _.isUndefined(forcedState) ? self.navigator.is('hidden') : forcedState;\n                if (isHidden) {\n                    self.explicitlyHidden = false;\n                    self.navigator.show();\n                } else {\n                    self.explicitlyHidden = true;\n                    self.navigator.hide();\n                }\n                updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n            }\n\n            this.navigator = navigatorFactory(navigatorConfig, testMap, testContext)\n                .on('selected', function(position, previousPosition){\n                    previousItemPosition = previousPosition;\n                })\n                .on('jump', function (position) {\n                    if (self.getState('enabled') !== false) {\n                        self.disable();\n                        testRunner.jump(position, 'item');\n                    }\n                })\n                .on('flag', function (position, flag) {\n                    if (self.getState('enabled') !== false) {\n                        flagItem(position, flag);\n                    }\n                })\n                .render();\n\n            // restore current item in the navigator if movement not allowed\n            testRunner.on('alert.notallowed', function() {\n                self.navigator.select(previousItemPosition);\n            });\n\n            this.explicitlyHidden = false;\n\n            // register buttons in the toolbox component\n            this.toggleButton = this.getAreaBroker().getToolbox().createEntry(getToggleButtonData(this.navigator));\n            this.toggleButton.on('click', function (e) {\n                e.preventDefault();\n                testRunner.trigger('tool-reviewpanel');\n            });\n\n            this.flagItemButton = this.getAreaBroker().getToolbox().createEntry(getFlagItemButtonData(testContext));\n            this.flagItemButton.on('click', function (e) {\n                e.preventDefault();\n                testRunner.trigger('tool-flagitem');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.flag) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.flag, this.getName(), true), function () {\n                        testRunner.trigger('tool-flagitem');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-reviewpanel');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            if (!isPluginAllowed()) {\n                this.hide();\n            }\n\n            //disabled by default\n            this.disable();\n\n            togglePanel(testConfig.review.defaultOpen);\n\n            //change plugin state\n            testRunner\n                .on('render', function () {\n                    if (isPluginAllowed()) {\n                        self.show();\n                        updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n                    } else {\n                        self.hide();\n                    }\n                })\n                .on('loaditem', function () {\n                    var context = testRunner.getTestContext();\n                    var map = testRunner.getTestMap();\n\n                    if (isPluginAllowed()) {\n                        updateButton(self.flagItemButton, getFlagItemButtonData(context));\n                        self.navigator\n                            .update(map, context)\n                            .updateConfig({\n                                canFlag: !context.isLinear && context.options.markReview\n                            });\n                        self.show();\n                        updateButton(self.toggleButton, getToggleButtonData(self.navigator));\n                    } else {\n                        self.hide();\n                    }\n                })\n                .on('enabletools enablenav', function () {\n                    if (isPluginAllowed()) {\n                        self.enable();\n                    }\n                })\n                .on('disabletools disablenav', function () {\n                    if (isPluginAllowed()) {\n                        self.disable();\n                    }\n                })\n                .on('hidenav', function (){\n                    self.hide();\n                })\n                .on('shownav', function (){\n                    if (isPluginAllowed()) {\n                        self.show();\n                    }\n                })\n                .on('tool-flagitem', function () {\n                    if (isPluginAllowed() && canFlag(testRunner)) {\n                        flagCurrentItem();\n                    }\n                })\n                .on('tool-reviewpanel', function () {\n                    if (isPluginAllowed() && self.getState('enabled')) {\n                        togglePanel();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n            var areaBroker = this.getAreaBroker();\n            var $panelContainer = areaBroker.getPanelArea();\n            $panelContainer.append(this.navigator.getElement());\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n            this.navigator.destroy();\n        },\n\n        /**\n         * Enables the button\n         */\n        enable: function enable() {\n            var testRunner = this.getTestRunner();\n            var testContext = testRunner.getTestContext();\n\n            this.flagItemButton.enable();\n            this.toggleButton.enable();\n            this.navigator.enable();\n            if (testContext.itemFlagged) {\n                this.flagItemButton.turnOn();\n            } else {\n                this.flagItemButton.turnOff();\n            }\n        },\n\n        /**\n         * Disables the button\n         */\n        disable: function disable() {\n            this.flagItemButton.disable();\n            this.flagItemButton.turnOff();\n\n            this.toggleButton.disable();\n\n            this.navigator.disable();\n        },\n\n        /**\n         * Shows the button\n         */\n        show: function show() {\n            var testRunner = this.getTestRunner();\n            if (canFlag(testRunner)) {\n                this.flagItemButton.show();\n            } else {\n                this.flagItemButton.hide();\n            }\n            this.toggleButton.show();\n\n            if (!this.explicitlyHidden) {\n                this.navigator.show();\n            } else {\n                this.navigator.hide();\n            }\n        },\n\n        /**\n         * Hides the button\n         */\n        hide: function hide() {\n            this.flagItemButton.hide();\n            this.toggleButton.hide();\n            this.navigator.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Skip\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/skip',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/messages',\n    'tpl!taoQtiTest/runner/plugins/templates/button'\n], function ($, _, __, hider, pluginFactory, messages, buttonTpl){\n    'use strict';\n\n    /**\n     * The display of the skip\n     */\n    var buttonData = {\n        skip : {\n            control : 'skip',\n            title   : __('Skip and go to the next item'),\n            icon    : 'external',\n            text    : __('Skip')\n        },\n        end : {\n            control : 'skip-end',\n            title   : __('Skip and go to the end of the test'),\n            icon    : 'external',\n            text    : __('Skip and end test')\n        }\n    };\n\n    /**\n     * Create the button based on the current context\n     * @param {Object} context - the test context\n     * @returns {jQueryElement} the button\n     */\n    var createElement = function createElement(context){\n        var dataType = context.isLast ? 'end' : 'skip';\n        return $(buttonTpl(buttonData[dataType]));\n    };\n\n    /**\n     * Update the button based on the context\n     * @param {jQueryElement} $element - the element to update\n     * @param {Object} context - the test context\n     */\n    var updateElement = function updateElement($element, context){\n        var dataType = context.isLast ? 'end' : 'skip';\n        if($element.attr('data-control') !== buttonData[dataType].control){\n\n            $element.attr('data-control', buttonData[dataType].control)\n                    .attr('title', buttonData[dataType].title)\n                    .find('.text').text(buttonData[dataType].text);\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'skip',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n\n            var toggle = function toggle(){\n                var context = testRunner.getTestContext();\n                if(context.options.allowSkipping === true){\n                    self.show();\n                    return true;\n                }\n\n                self.hide();\n                return false;\n            };\n\n            function doSkip() {\n                testRunner.skip();\n            }\n\n            this.$element = createElement(testRunner.getTestContext());\n\n            this.$element.on('click', function(e){\n                var enable = _.bind(self.enable, self);\n                var context = testRunner.getTestContext();\n\n                e.preventDefault();\n\n                if(self.getState('enabled') !== false){\n                    self.disable();\n                    if(context.options.endTestWarning && context.isLast){\n                        testRunner.trigger(\n                            'confirm.endTest',\n                            messages.getExitMessage(\n                                __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\n                                'test', testRunner),\n                            doSkip, // if the test taker accept\n                            enable  // if the test taker refuse\n                        );\n                    } else {\n                        doSkip();\n                    }\n                }\n            });\n\n            toggle();\n            self.disable();\n\n            testRunner\n                .on('loaditem', function(){\n                    if(toggle()){\n                        updateElement(self.$element, testRunner.getTestContext());\n                    }\n                })\n                .on('enablenav', function(){\n                    self.enable();\n                })\n                .on('disablenav', function(){\n                    self.disable();\n                })\n                .on('hidenav', function(){\n                    self.hide();\n                })\n                .on('shownav', function(){\n                    self.show();\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var $container = this.getAreaBroker().getNavigationArea();\n            $container.append(this.$element);\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy (){\n            this.$element.remove();\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable (){\n            this.$element.removeProp('disabled')\n                         .removeClass('disabled');\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable (){\n            this.$element.prop('disabled', true)\n                         .addClass('disabled');\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show(){\n            hider.show(this.$element);\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide(){\n            hider.hide(this.$element);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * http://www.imsglobal.org/question/qtiv2p2p1/QTIv2p2p1-ASI-InformationModelv1p0/imsqtiv2p2p1_asi_v1p0_InfoModelv1p0.html#DerivedCharacteristic_ItemSessionControl.Attr_validateResponses\n *\n * This attribute controls the behaviour of delivery engines when the candidate\n * submits an invalid response. An invalid response is defined to be a response\n * which does not satisfy the constraints imposed by the interaction with which\n * it is associated (see interaction for more information). When\n * validateResponses is turned on (true) then the candidates are not allowed to\n * submit the item until they have provided valid responses for all\n * interactions. When turned off (false) invalid responses may be accepted by\n * the system. The value of this attribute is only applicable when the item is\n * in a testPart with individual submission mode (see Navigation and\n * Submission).\n */\n\ndefine('taoQtiTest/runner/plugins/navigation/validateResponses',[\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/currentItem'\n], function(_, __, pluginFactory, currentItemHelper) {\n    'use strict';\n\n\n    var pluginName = 'validateResponses';\n\n    /**\n     * Plugin\n     * @returns {Object}\n     */\n    return pluginFactory({\n\n        /**\n         * Plugin name\n         * @type {String}\n         */\n        name: pluginName,\n\n        /**\n         * Initialize plugin (called during runner's initialization)\n         * @returns {this}\n         */\n        init: function init() {\n\n            this.getTestRunner().before('move', function (e, direction) {\n                var self = this;\n                var testContext = this.getTestContext();\n                var isInteracting = !this.getItemState(testContext.itemIdentifier, 'disabled');\n\n                var testData = this.getTestData() || {};\n                var testConfig = testData.config || {};\n                var pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {});\n\n                if (!pluginConfig.validateOnPreviousMove && direction === 'previous') {\n                    return Promise.resolve();\n                }\n\n\n                if ( isInteracting && testContext.enableValidateResponses &&  testContext.validateResponses) {\n                    return new Promise(function (resolve, reject) {\n                        if(_.size(currentItemHelper.getDeclarations(self)) === 0){\n                            return resolve();\n                        }\n                        if (currentItemHelper.isAnswered(self, false)) {\n                            return resolve();\n                        }\n                        if (!self.getState('alerted.notallowed')) { // Only show one alert for itemSessionControl\n                            self.setState('alerted.notallowed', true);\n                            self.trigger(\n                                'alert.notallowed',\n                                __('A valid response to this item is required.'),\n                                function () {\n                                    self.trigger('resumeitem');\n                                    reject();\n                                    self.setState('alerted.notallowed', false);\n                                }\n                            );\n                        }\n                    });\n                }\n\n            });\n\n            return this;\n        }\n    });\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Warn the test taker before closing the browser window\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/navigation/warnBeforeLeaving',[\n    'i18n',\n    'taoTests/runner/plugin'\n], function (__, pluginFactory) {\n    'use strict';\n\n    /**\n     * There's only a few chance to have this message displayed.\n     * Most browsers doesn't support custom message anymore.\n     * See https://www.chromestatus.com/feature/5349061406228480\n     */\n    var warnMessage = __('Please confirm you want to leave the test.');\n\n    /**\n     * The beforeunload listener\n     * @param {Event} e\n     * @returns {String} the custom message (for some browser, just need to be a string)\n     */\n    var warnListener = function warnListener(e){\n        e.returnValue = warnMessage;\n        return warnMessage;\n    };\n\n    /**\n     * Plugin factory\n     * @returns {Object}\n     */\n    return pluginFactory({\n\n        /**\n         * Plugin name\n         * @type {String}\n         */\n        name: 'warnBeforeLeaving',\n\n        /**\n         * Initialize plugin (called during runner's initialization)\n         */\n        init: function init() {\n            this.enable();\n        },\n\n        /**\n         * Destroy plugin (called during runner's destruction)\n         */\n        destroy : function destroy(){\n            this.disable();\n        },\n\n        /**\n         * Enables the warning\n         */\n        enable : function enable(){\n            window.addEventListener('beforeunload', warnListener);\n        },\n\n        /**\n         * Disables the warning\n         */\n        disable : function disable(){\n            window.removeEventListener('beforeunload', warnListener);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/security/disableRightClick',[\n    'taoTests/runner/plugin'\n], function (pluginFactory) {\n    'use strict';\n\n    return pluginFactory({\n\n        name: 'disableRightClick',\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var rightClickEvents = ['contextmenu', 'mousedown', 'mouseup'];\n\n            rightClickEvents.forEach(function(eventName) {\n                window.document.addEventListener(eventName, function disableRightClick(event) {\n                    if (event.button === 2) {\n                        event.preventDefault();\n                    }\n                });\n            });\n        }\n    });\n});\n\n","\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Answer Eliminator Plugin\n *\n * While the platform's answer eliminator works on a per-item base, this variation allows\n * answer elimination on a test level. Essentially it allows to add a class 'eliminable'\n * to a choice interaction, from there the aforementioned item-based behaviour and styling takes\n * over.\n *\n * Alternative styling will be on a per customer basis and should always be published as a recipe\n * in the theme-toolkit.\n *\n * @author Dieter Raber <dieter@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/answerElimination/eliminator',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin'\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory){\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'eliminator';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultConfig = {\n        // when hiding the buttons, don't remove existing eliminations\n        removeEliminationsOnClose: false,\n        // when showing the buttons, restore previously set eliminations\n        restoreEliminationsOnOpen: false\n    };\n\n\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var $container = testRunner.getAreaBroker().getContentArea().parent();\n            var testConfig = testRunner.getTestData().config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n            var config     = _.defaults(_.clone((testConfig.plugins || {})[pluginName]) || {}, defaultConfig);\n\n            // register the button in the toolbox\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control : 'eliminator',\n                title : __('Eliminate choices'),\n                icon : 'eliminate',\n                text : __('Answer Eliminator')\n            });\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isPluginEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-eliminator\n                return !!options.eliminator;\n            }\n\n            /**\n             * Is plugin activated ? if not, then we hide the plugin\n             */\n            function togglePluginButton() {\n                if (isPluginEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function togglePlugin() {\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                self.$choiceInteractions.toggleClass('eliminable');\n                if (isEliminable()) {\n                    enableEliminator();\n                } else {\n                    disableEliminator();\n                }\n            }\n\n            function isEliminable() {\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                return self.$choiceInteractions.hasClass('eliminable');\n            }\n\n            function enableEliminator() {\n                var $choices;\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                $choices = self.$choiceInteractions.find('.qti-choice');\n\n                self.button.turnOn();\n                self.trigger('start');\n\n                if(config.restoreEliminationsOnOpen) {\n                    $choices.each(function() {\n                        var input = this.querySelector('.real-label input');\n                        if(this.dataset.wasEliminated) {\n                            this.dataset.wasEliminated = null;\n                            this.classList.add('eliminated');\n                            input.setAttribute('disabled', 'disabled');\n                            input.checked = false;\n                        }\n                    });\n                }\n            }\n\n            function disableEliminator() {\n                var $choices;\n                if (!self.$choiceInteractions) {\n                    return;\n                }\n                $choices = self.$choiceInteractions.find('.qti-choice');\n\n                self.$choiceInteractions.removeClass('eliminable');\n                self.button.turnOff();\n                self.trigger('end');\n\n                $choices.each(function() {\n                    if(this.classList.contains('eliminated')) {\n                        this.dataset.wasEliminated = true;\n                        this.classList.remove('eliminated');\n                        this.querySelector('.real-label input').removeAttribute('disabled');\n                    }\n                });\n            }\n\n            //add a new mask each time the button is pressed\n            this.button.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger(actionPrefix + 'toggle');\n            });\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function (command, key) {\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key);\n                    }, {\n                        avoidInput: true\n                    });\n                });\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePluginButton)\n                .on('renderitem', function conditionalInit() {\n                    // show button only when in the presence of choice interactions\n                    self.$choiceInteractions = $container.find('.qti-choiceInteraction');\n                    if(!self.$choiceInteractions.length) {\n                        self.hide();\n                        return;\n                    }\n                    if (isPluginEnabled()) {\n                        self.show();\n                    }\n                })\n                .on('enabletools renderitem', function (){\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                    disableEliminator();\n                })\n\n                // commands that controls the plugin\n                .on(actionPrefix + 'toggle', function () {\n                    if (isPluginEnabled()) {\n                        togglePlugin();\n                    }\n                })\n                // Answer-eliminator and Answer-masking are mutually exclusive tools\n                .on('tool-answer-masking-toggle', function () {\n                    if (isEliminable()) {\n                        disableEliminator();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + pluginName);\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.button.hide();\n        }\n    });\n});\n\n","define('core/statifier',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Makes the target a states handler by delegating calls to the states API.\n     * @param {Object} [target = {}] - the target object, a new plain object is created when omitted.\n     * @returns {Object} the target for convenience\n     */\n\n    function statifierFactory(target) {\n      var states = {};\n      var statesApi = {\n        /**\n         * Tells if the state is set\n         * @param {String} name\n         * @returns {Boolean}\n         */\n        getState: function getState(name) {\n          return !!states[name];\n        },\n\n        /**\n         * Sets a state.\n         * Without value, the state is always set.\n         * @example\n         * statesHandler.setState(\"ready\");\n         *\n         * // return `true`\n         * statesHandler.getState(\"ready\");\n         *\n         * @param {String} name\n         * @param {Boolean} [value]\n         * @returns {statesApi}\n         */\n        setState: function setState(name, value) {\n          if (typeof value === 'undefined') {\n            value = true;\n          }\n\n          states[name] = !!value;\n          return this;\n        },\n\n        /**\n         * Cleans up all states\n         * @returns {statesApi}\n         */\n        clearStates: function clearStates() {\n          states = {};\n          return this;\n        },\n\n        /**\n         * Returns all current states set\n         * @returns {Array}\n         */\n        getStates: function getStates() {\n          return _.reduce(states, function (result, state, key) {\n            if (state) {\n              result.push(key);\n            }\n\n            return result;\n          }, []);\n        }\n      };\n      target = target || {};\n\n      _(statesApi).functions().forEach(function (method) {\n        target[method] = function delegate() {\n          var args = [].slice.call(arguments);\n          return statesApi[method].apply(target, args);\n        };\n      });\n\n      return target;\n    }\n\n    return statifierFactory;\n\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/answerMasking/tpl/mask', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"answer-mask\\\">\\n    <span class=\\\"answer-mask-toggle\\\"></span>\\n</div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/answerMasking/answerMasking',[\n    'lodash',\n    'jquery',\n    'core/statifier',\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/tools/answerMasking/tpl/mask'\n], function(_, $, statifier, componentFactory, maskTpl) {\n    'use strict';\n\n    var ns = '.answerMasking';\n\n    /**\n     * @param {jQuery} $contentArea - DOM element containing the rendered item\n     */\n    return function answerMaskingFactory($contentArea) {\n        var answerMasking,\n            allMasks = [],\n\n            maskApi = {\n                /**\n                 * Toggle mask visibility\n                 * @returns {component}\n                 */\n                toggle: function toggle() {\n                    if (this.is('masked')) {\n                        return this.reveal();\n                    } else {\n                        return this.mask();\n                    }\n                },\n\n                /**\n                 * Show the choice under the current mask\n                 * @returns {component}\n                 */\n                reveal: function reveal() {\n                    var $container = this.getContainer();\n                    $container.removeClass('masked');\n                    $container.find('input').removeAttr('disabled');\n\n                    this.setState('masked', false);\n\n                    return this;\n                },\n\n                /**\n                 * Cover the whole choice with the mask\n                 * @returns {component}\n                 */\n                mask: function mask() {\n                    var $container = this.getContainer();\n                    $container.addClass('masked');\n                    $container.find('input').attr('disabled', 'disabled');\n\n                    this.setState('masked', true);\n\n                    return this;\n                }\n            };\n\n        /**\n         * Creates a ui/component to serve as a mask over a QTI Choice\n         * @param {jQuery} $container - the qti-choice element\n         * @returns {component}\n         */\n        function createMask($container) {\n            return componentFactory(maskApi)\n                .setTemplate(maskTpl)\n                .on('render', function() {\n                    var self = this,\n                        $component = this.getElement();\n\n                    $component.on('click' + ns, function(e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        self.toggle();\n                    });\n                })\n                .on('destroy', function() {\n                    var $component = this.getElement();\n                    $component.off(ns);\n                })\n                .init()\n                .render($container)\n                .mask();\n        }\n\n        /**\n         * The answer masking helper\n         */\n        answerMasking = {\n            /**\n             * Enable the answer masking functionality by creating masks over the Qti Choices\n             */\n            enable: function enable() {\n                var $choiceInteractions = $contentArea.find('.qti-choiceInteraction'),\n                    $qtiChoices = $contentArea.find('.qti-choice');\n\n                allMasks = [];\n\n                $choiceInteractions.addClass('maskable');\n\n                $qtiChoices.each(function () {\n                    var $choice = $(this);\n                    allMasks.push(createMask($choice));\n                });\n\n                this.setState('enabled', true);\n            },\n\n            /**\n             * Remove any answerMasking-related markup from the rendered item\n             */\n            disable: function disable() {\n                var $choiceInteractions = $contentArea.find('.qti-choiceInteraction');\n                $choiceInteractions.removeClass('maskable');\n\n                allMasks.forEach(function(mask) {\n                    mask.reveal(); // remove class on container\n                    mask.destroy();\n                });\n\n                allMasks = [];\n\n                this.setState('enabled', false);\n            },\n\n            /**\n             * Return the current state of the masks\n             * @returns {Boolean[]} - true if the choice is masked, false if the choice is revealed\n             */\n            getMasksState: function getMasksState() {\n                var state = allMasks.map(function (mask) {\n                    return mask.is('masked');\n                });\n                return state;\n            },\n\n            /**\n             * Restore a previously saved state for the masked choices\n             * @param {Boolean[]} state - array of boolean, most probably given by the getMasksState method\n             */\n            setMasksState: function setMasksState(state) {\n                state = state || [];\n\n                state.forEach(function (masked, index) {\n                    var mask = allMasks[index];\n\n                    if (_.isObject(mask) && _.isFunction(mask.reveal) && ! masked) {\n                        mask.reveal();\n                    }\n                });\n            }\n        };\n\n        statifier(answerMasking);\n\n        return answerMasking;\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/answerMasking/plugin',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/plugins/tools/answerMasking/answerMasking'\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, answerMaskingFactory) {\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'answer-masking';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Stores the masking state for each item in the test\n     * @type {Object}\n     */\n    var itemStates = {};\n\n    /**\n     * Default Configuration\n     */\n    var defaultConfig = {\n        restoreStateOnToggle: true,\n        restoreStateOnMove: true\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner = this.getTestRunner(),\n                testData = testRunner.getTestData() || {},\n                testConfig = testData.config || {},\n                pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {}, defaultConfig),\n                pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {},\n                $contentArea = this.getAreaBroker().getContentArea();\n\n            var answerMasking = answerMaskingFactory($contentArea);\n\n            function isPluginEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-answerMasking\n                return options.answerMasking && itemContainsChoiceInteraction();\n            }\n\n            function itemContainsChoiceInteraction() {\n                var $container = self.getAreaBroker().getContentArea().parent();\n                return $container.find('.qti-choiceInteraction').length;\n            }\n\n            function togglePluginButton() {\n                if (isPluginEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function togglePlugin() {\n                if (! answerMasking.getState('enabled')) {\n                    enableMasking();\n                } else {\n                    disableMasking();\n                }\n            }\n\n            function enableMasking() {\n                var testContext = testRunner.getTestContext(),\n                    itemId = testContext.itemIdentifier;\n\n                answerMasking.enable();\n                if (pluginConfig.restoreStateOnToggle) {\n                    answerMasking.setMasksState(itemStates[itemId]);\n                }\n                self.button.turnOn();\n                self.trigger('start');\n            }\n\n            function disableMasking() {\n                var testContext = testRunner.getTestContext(),\n                    itemId = testContext.itemIdentifier;\n\n                if (answerMasking.getState('enabled')) {\n                    itemStates[itemId] = answerMasking.getMasksState();\n                }\n\n                answerMasking.disable();\n                self.button.turnOff();\n                self.trigger('end');\n            }\n\n            // create buttons\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Answer Masking'),\n                icon: 'result-nok',\n                control: 'answer-masking',\n                text: __('Answer Masking')\n            });\n\n            // attach user events\n            this.button\n                .on('click', function(e) {\n                    e.preventDefault();\n                    testRunner.trigger(actionPrefix + 'toggle');\n                });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger(actionPrefix + 'toggle');\n                    }, { avoidInput: true, prevent: true });\n                }\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', function() {\n                    var testContext = testRunner.getTestContext(),\n                        itemId = testContext.itemIdentifier;\n\n                    if (! pluginConfig.restoreStateOnMove) {\n                        itemStates[itemId] = [];\n                    }\n\n                    togglePluginButton();\n                })\n                .on('enabletools renderitem', function () {\n                    togglePluginButton(); // we repeat this here as we need the rendered item markup in order to decide whether the plugin is enabled\n                    self.enable();\n                })\n                .on('beforeunloaditem', function() {\n                    disableMasking();\n                })\n                .on('disabletools unloaditem', function () {\n                    self.disable();\n                    disableMasking();\n                })\n                .on(actionPrefix + 'toggle', function () {\n                    if (isPluginEnabled()) {\n                        togglePlugin();\n                    }\n                })\n                // Answer-eliminator and Answer-masking are mutually exclusive tools\n                .on('tool-eliminator-toggle', function () {\n                    disableMasking();\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.button.hide();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/areaMasking/mask', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"mask\\\">\\n   <div class=\\\"inner\\\"></div>\\n   <div class=\\\"controls\\\">\\n        <a href=\\\"#\\\" class=\\\"view\\\"  title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Preview the covered area\", options) : helperMissing.call(depth0, \"__\", \"Preview the covered area\", options)))\n    + \"\\\"><span class=\\\"icon-preview\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"close\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close the mask\", options) : helperMissing.call(depth0, \"__\", \"Close the mask\", options)))\n    + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n   </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","define('core/mouseEvent',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Creates and triggers a mouseEvent\n     * Deprecated method initMouseEvent is mainly used for current (2.1) PhantomJS compatibility\n     *\n     * @example triggerMouseEvent(\n     *      document.getElementById('#button'),\n     *      'click',\n     *      {\n     *          bubbles: true,\n     *          cancelable: true\n     *      }\n     * );\n     *\n     * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n     * @author Christophe Noël <christophe@taotesting.com>\n     */\n    var dispatchEvent;\n    var allowedEvents = ['click', 'contextmenu', 'dblclick', 'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'show'];\n    /**\n     * Creates an event (requires IE > 9)\n     * @param {String} eventName\n     * @param {*} eventOptions\n     * @returns {Event}\n     */\n\n    var createEvent = function createEvent(eventName, eventOptions) {\n      var event;\n\n      try {\n        event = new MouseEvent(eventName, eventOptions);\n      } catch (e) {\n        event = document.createEvent('MouseEvents');\n        event.initMouseEvent(eventName, eventOptions.bubbles || false, eventOptions.cancelable || false, eventOptions.view || null, eventOptions.detail || 0, eventOptions.screenX || 0, eventOptions.screenY || 0, eventOptions.clientX || 0, eventOptions.clientY || 0, eventOptions.ctrlKey || false, eventOptions.altKey || false, eventOptions.shiftKey || false, eventOptions.metaKey || false, eventOptions.button || 0, eventOptions.relatedTarget || null);\n      }\n\n      return event;\n    };\n    /**\n     * Dispatches an event\n     * @param {HTMLElement} element\n     * @param {String} eventName\n     * @param {Event} event\n     * @returns {Boolean} Returns `true` if the event has been dispatched\n     */\n\n\n    if (document.dispatchEvent) {\n      dispatchEvent = function dispatchEventUsingDispatchEvent(element, eventName, event) {\n        if (element) {\n          element.dispatchEvent(event);\n          return true;\n        }\n\n        return false;\n      };\n    } else if (document.fireEvent) {\n      dispatchEvent = function dispatchEventUsingFireEvent(element, eventName, event) {\n        if (element) {\n          element.fireEvent('on' + eventName, event);\n          return true;\n        }\n\n        return false;\n      };\n    } else {\n      dispatchEvent = function dispatchEventDummy() {\n        return false;\n      };\n    }\n    /**\n     * Triggers a mouse event using native methods\n     * @param {HTMLElement} element\n     * @param {String} eventName\n     * @param {Object} eventOptions https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent\n     * @returns {Boolean} Returns true if the event has been successfully triggered\n     */\n\n\n    function triggerMouseEvent(element, eventName, eventOptions) {\n      var event;\n\n      if (allowedEvents.indexOf(eventName) === -1) {\n        return false;\n      }\n\n      event = createEvent(eventName, eventOptions);\n      return dispatchEvent(element, eventName, event);\n    }\n\n    return triggerMouseEvent;\n\n});\n\n","define('util/position',[],function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA;\n   *\n   */\n\n  /**\n   * This util helps you to manage DOM elements positions.\n   *\n   * @author Bertrand Chevrier <bertrand@taotesting.com>\n   */\n  var position = {\n    /**\n     * Check if an element is inside another, based on it's coords\n     * (this is not a check if the element is a DOM children of the container).\n     * The entire element rectanlge must be inside the container to return true.\n     *\n     * @param {HTMLElement} container - the container\n     * @param {HTMLElement} element - the element to check against the container\n     * @returns {Boolean*} or undefined if the parameters are incorrect, so check your return value type.\n     */\n    isInside: function isInside(container, element) {\n      var containerCoords;\n      var elementCoords;\n\n      if (container instanceof HTMLElement && element instanceof HTMLElement) {\n        containerCoords = container.getBoundingClientRect();\n        elementCoords = element.getBoundingClientRect();\n\n        if (_typeof(containerCoords) === 'object' && _typeof(elementCoords) === 'object') {\n          return elementCoords.top >= containerCoords.top && elementCoords.top <= containerCoords.bottom && elementCoords.left >= containerCoords.left && elementCoords.left <= containerCoords.right && elementCoords.bottom <= containerCoords.bottom && elementCoords.bottom >= containerCoords.top && elementCoords.right <= containerCoords.right && elementCoords.right >= containerCoords.left;\n        }\n      }\n    },\n\n    /**\n     * Check if an element is over another, based on it's top/left coords\n     * (this is not a check if the element is a DOM children of the container).\n     * The element top/left corner must be inside the container to return true.\n     *\n     * TODO support other corners\n     *\n     * @param {HTMLElement} container - the container\n     * @param {HTMLElement} element - the element to check against the container\n     * @returns {Boolean*} or undefined if the parameters are incorrect, so check your return value type.\n     */\n    isOver: function isInside(container, element) {\n      var containerCoords;\n      var elementCoords;\n\n      if (container instanceof HTMLElement && element instanceof HTMLElement) {\n        containerCoords = container.getBoundingClientRect();\n        elementCoords = element.getBoundingClientRect();\n\n        if (_typeof(containerCoords) === 'object' && _typeof(elementCoords) === 'object') {\n          return elementCoords.top >= containerCoords.top && elementCoords.top <= containerCoords.bottom && elementCoords.left >= containerCoords.left && elementCoords.left <= containerCoords.right;\n        }\n      }\n    }\n  };\n\n  return position;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Create a movable and resizable element in order to mask areas.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/areaMasking/mask',[\n    'lodash',\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/tools/areaMasking/mask',\n    'ui/dynamicComponent',\n], function (_, component, areaMaskingTpl, dynamicComponent) {\n    'use strict';\n\n    var defaultConfig = {\n        draggable: true,\n        resizable: true,\n        preserveAspectRatio: false,\n        width: 250,\n        minWidth: 160,\n        maxWidth: 1000,\n        minHeight: 60,\n        height: 100,\n        stackingScope: 'test-runner',\n        top: 50,\n        left: 10,\n        previewDelay: 3000,\n    };\n\n    /**\n     * Creates a new masking component\n     * @returns {maskComponent} the component (uninitialized)\n     */\n    function maskingComponentFactory() {\n        var dynamicComponentInstance;\n\n        /**\n         * @typedef {Object} dynamicComponent\n         */\n        dynamicComponentInstance = dynamicComponent({\n            /**\n             * Preview the content under the masked area\n             * @returns {maskComponent} chains\n             *\n             * @fires maskComponent#preview\n             */\n            preview: function preview() {\n                var self = this;\n                var delay = this.config.previewDelay || 1000;\n                if (this.is('rendered') && !this.is('disabled') && !this.is('previewing')) {\n                    this.setState('previewing', true);\n                    this.trigger('preview');\n                    _.delay(function () {\n                        self.setState('previewing', false);\n                    }, delay);\n                }\n                return this;\n            }\n        },\n        defaultConfig)\n        .on('rendercontent', function ($content) {\n            var self = this;\n            var $element = this.getElement();\n            $content.append(areaMaskingTpl({}));\n\n            $element.addClass('mask-container');\n\n            $element\n                .on('click touchstart', '.view', function (e) {\n                    e.preventDefault();\n\n                    self.preview();\n                })\n                .on('click touchend', '.close', function (e) {\n                    e.preventDefault();\n\n                    self.destroy();\n                });\n        })\n        .init();\n\n        return dynamicComponentInstance;\n    }\n\n    return maskingComponentFactory;\n});\n\n","\n/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Area Masking Plugin\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/areaMasking/areaMasking',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/plugins/tools/areaMasking/mask'\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory, maskComponent){\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'area-masking';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultConfig = {\n        max : 5,\n        foo : true\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var $container = testRunner.getAreaBroker().getContentArea().parent();\n            var testConfig = testRunner.getTestData().config || {};\n            var config     = _.defaults(_.clone((testConfig.plugins || {})[pluginName]) || {}, defaultConfig);\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n\n            function addMask() {\n                maskComponent()\n                    .on('render', function(){\n                        self.masks.push(this);\n                        self.button.turnOn();\n\n                        /**\n                         * @event areaMasking#maskadd\n                         */\n                        self.trigger('maskadd');\n                    })\n                    .on('destroy', function(){\n                        self.masks = _.without(self.masks, this);\n                        if(self.masks.length < config.max){\n                            self.enable();\n                        }\n                        if (self.masks.length === 0) {\n                            self.button.turnOff();\n                            self.trigger('close');\n                        }\n\n                        /**\n                         * @event areaMasking#maskclose\n                         */\n                        self.trigger('maskclose');\n                    })\n                    .init({ renderTo: $container, draggableContainer: $container });\n            }\n\n            //keep a ref to all masks\n            this.masks = [];\n\n            // register the element in the Toolbox\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control : 'area-masking',\n                text : __('Masking'),\n                title : __('Covers parts of the item'),\n                icon : 'eye-slash'\n            });\n\n            //add a new mask each time the button is pressed\n            this.button.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger(actionPrefix + 'toggle');\n            });\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function (command, key) {\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key);\n                    }, {\n                        avoidInput: true\n                    });\n                });\n            }\n\n            //start disabled\n            this.disable();\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext(),\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-areaMasking\n                return !!options.areaMasking;\n            }\n\n            /**\n             * Is plugin activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePlugin)\n                .on('enabletools renderitem', function (){\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                    //remove all masks\n                    _.invoke(self.masks, 'destroy');\n                })\n                // commands that controls the plugin\n                .on(actionPrefix + 'toggle', function () {\n                    if (isEnabled()) {\n                        if (self.masks.length === 0) {\n                            self.trigger('open');\n                        }\n                        if (self.masks.length < config.max) {\n                            addMask();\n                        } else if (config.max === 1) {\n                            _.invoke(self.masks, 'destroy');\n                        }\n                    }\n                });\n\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + pluginName);\n        },\n\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.button.hide();\n        }\n    });\n});\n\n","define('core/collections',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 Open Assessment Technologies SA\n     */\n\n    /**\n     * Wrap the ES6 Collections polyfill\n     *\n     * @deprecated use the collections types directly\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     */\n    var collections = {\n      Map: window.Map,\n      Set: window.Set,\n      WeakMap: window.WeakMap,\n      WeakSet: window.WeakSet\n    };\n\n    return collections;\n\n});\n\n","define('util/mathsEvaluator',['lodash', 'lib/decimal/decimal', 'lib/expr-eval/expr-eval'], function (_, Decimal, exprEval) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Decimal = Decimal && Decimal.hasOwnProperty('default') ? Decimal['default'] : Decimal;\n    exprEval = exprEval && exprEval.hasOwnProperty('default') ? exprEval['default'] : exprEval;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n     */\n    var Parser = exprEval.Parser;\n    /**\n     * Good precision value of PI\n     * @type {String}\n     */\n\n    var numberPI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989';\n    /**\n     * Good precision value of Euler's number\n     * @type {String}\n     */\n\n    var numberE = '2.7182818284590452353602874713526624977572470936999595749669676277240766303535475945713821785251664274274663919320030599218174135966290435729003342952605956307381323286279434907632338298807531952510190115738341879307021540891499348841675092447614606680822648001684774118537423454424371075390777449920695517027618386062613313845830007520449338265602976067371132007093287091274437470472306969772093101416928368190255151086574637721112523897844250569536967707854499699679468644549059879316368892300987931277361782154249992295763514822082698951936680331825288693984964651058209392398294887933203625094431173012381970684161403970198376793206832823764648042953118023287825098194558153017567173613320698112509961818815930416903515988885193458072738667385894228792284998920868058257492796104841984443634632449684875602336248270419786232090021609902353043699418491463140934317381436405462531520961836908887070167683964243781405927145635490613031072085103837505101157477041718986106873969655212671546889570350354';\n    /**\n     * Defaults config for the evaluator\n     * @type {Object}\n     */\n\n    var defaultConfig = {\n      internalPrecision: 100,\n      degree: false\n    };\n    /**\n     * Defaults config for the Decimal constructor\n     * @type {Object}\n     */\n\n    var defaultDecimalConfig = {\n      defaults: true\n    };\n    /**\n     * List of config entries the Decimal constructor accepts\n     * @type {String[]}\n     */\n\n    var decimalConfigEntries = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\n    /**\n     * List of config entries the Parser constructor accepts\n     * @type {String[]}\n     */\n\n    var parserConfigEntries = ['operators'];\n    /**\n     * Gets an arbitrary decimal precision number using a string representation.\n     * @param {String} number\n     * @param {Number} precision\n     * @returns {String}\n     */\n\n    function toPrecisionNumber(number, precision) {\n      var dot = number.indexOf('.');\n\n      if (dot > 0) {\n        number = number.substr(0, dot + precision + 1);\n      }\n\n      return number;\n    }\n    /**\n     * Builds a maths expression parser.\n     * For more info on the supported API:\n     * - @see https://github.com/silentmatt/expr-eval\n     * - @see https://github.com/MikeMcl/decimal.js\n     *\n     * @example\n     * var evaluate = mathsEvaluatorFactory();\n     *\n     * // simple arithmetic\n     * var result = evaluate(\"3*4+30\"); // will return '42';\n     *\n     * // advanced expression\n     * var result = evaluate(\"(10! - 5!) * 4 * (18 / 4) + sqrt(56^4)\"); // will return '65319376';\n     *\n     * // parametric expression\n     * var result = evaluate(\"2*a*x+b\", {a:5, x:3, b:15}); // will return '45';\n     *\n     * @param {Object} [config] - Config entries, mostly for the Decimal constructor.\n     * @param {Number} [config.precision=20] - The maximum number of significant digits of the result of an operation.\n     * @param {Number} [config.internalPrecision=100] - Arbitrary decimal precision for some internal related computations (sin, cos, tan, ln).\n     * @param {Number} [config.rounding=4] - The default rounding mode used when rounding the result of an operation to precision significant digits.\n     * @param {Number} [config.toExpNeg=-7] - The negative exponent value at and below which toString returns exponential notation.\n     * @param {Number} [config.toExpPos=21] - The positive exponent value at and above which toString returns exponential notation.\n     * @param {Number} [config.maxE=9e15] - The positive exponent limit, i.e. the exponent value above which overflow to Infinity occurs.\n     * @param {Number} [config.minE=-9e15] - The negative exponent limit, i.e. the exponent value below which underflow to zero occurs.\n     * @param {Number} [config.modulo=1] - The modulo mode used when calculating the modulus: a mod n.\n     * @param {Boolean} [config.crypto=false] - The value that determines whether cryptographically-secure pseudo-random number generation is used.\n     * @param {Boolean} [config.degree=false] - Converts trigonometric values from radians to degrees.\n     * @param {Object} [config.operators] - The list of operators to enable.\n     * @returns {Function<expression, variables>} - The maths expression parser\n     */\n\n\n    function mathsEvaluatorFactory(config) {\n      var localConfig = _.defaults({}, config, defaultConfig);\n\n      var decimalConfig = _.pick(localConfig, decimalConfigEntries);\n\n      var parserConfig = _.pick(localConfig, parserConfigEntries);\n\n      var parser = new Parser(parserConfig);\n      var ConfiguredDecimal = Decimal.set(_.isEmpty(decimalConfig) ? defaultDecimalConfig : decimalConfig);\n      var EPSILON = new ConfiguredDecimal(2).pow(-52);\n      var PI = new ConfiguredDecimal(toPrecisionNumber(numberPI, localConfig.internalPrecision));\n      var E = new ConfiguredDecimal(toPrecisionNumber(numberE, localConfig.internalPrecision));\n      /**\n       * Map expr-eval API to decimal.js\n       * @type {Object}\n       */\n\n      var mapAPI = {\n        unary: [{\n          entry: 'sin',\n          action: function action(a) {\n            return trigoOperator('sin', a);\n          }\n        }, {\n          entry: 'cos',\n          action: function action(a) {\n            return trigoOperator('cos', a);\n          }\n        }, {\n          entry: 'tan',\n          action: function action(a) {\n            return trigoOperator('tan', a);\n          }\n        }, {\n          entry: 'asin',\n          action: function action(a) {\n            return inverseTrigoOperator('asin', a);\n          }\n        }, {\n          entry: 'acos',\n          action: function action(a) {\n            return inverseTrigoOperator('acos', a);\n          }\n        }, {\n          entry: 'atan',\n          action: function action(a) {\n            return inverseTrigoOperator('atan', a);\n          }\n        }, {\n          entry: 'sinh',\n          mapTo: 'sinh'\n        }, {\n          entry: 'cosh',\n          mapTo: 'cosh'\n        }, {\n          entry: 'tanh',\n          mapTo: 'tanh'\n        }, {\n          entry: 'asinh',\n          mapTo: 'asinh'\n        }, {\n          entry: 'acosh',\n          mapTo: 'acosh'\n        }, {\n          entry: 'atanh',\n          mapTo: 'atanh'\n        }, {\n          entry: 'sqrt',\n          mapTo: 'sqrt'\n        }, {\n          entry: 'cbrt',\n          mapTo: 'cbrt'\n        }, {\n          entry: 'log',\n          mapTo: 'log'\n        }, {\n          entry: 'ln',\n          mapTo: 'ln'\n        }, {\n          entry: 'lg',\n          mapTo: 'log'\n        }, {\n          entry: 'log10',\n          mapTo: 'log'\n        }, {\n          entry: 'abs',\n          mapTo: 'abs'\n        }, {\n          entry: 'ceil',\n          mapTo: 'ceil'\n        }, {\n          entry: 'floor',\n          mapTo: 'floor'\n        }, {\n          entry: 'round',\n          mapTo: 'round'\n        }, {\n          entry: 'trunc',\n          mapTo: 'trunc'\n        }, {\n          entry: '-',\n          mapTo: 'neg'\n        }, {\n          entry: '+',\n          action: decimalNumber\n        }, {\n          entry: 'exp',\n          mapTo: 'exp'\n        }, {\n          entry: 'not',\n          action: function action(a) {\n            return !native(a);\n          }\n        }, {\n          entry: '!',\n          action: useOrigin\n        }],\n        binary: [{\n          entry: '+',\n          mapTo: 'add'\n        }, {\n          entry: '-',\n          mapTo: 'sub'\n        }, {\n          entry: '*',\n          mapTo: 'mul'\n        }, {\n          entry: '/',\n          mapTo: 'div'\n        }, {\n          entry: '%',\n          mapTo: 'mod'\n        }, {\n          entry: '^',\n          mapTo: 'pow'\n        }, {\n          entry: '==',\n          mapTo: 'equals'\n        }, {\n          entry: '!=',\n          action: function action(a, b) {\n            return !binaryOperator('equals', a, b);\n          }\n        }, {\n          entry: '>',\n          mapTo: 'gt'\n        }, {\n          entry: '<',\n          mapTo: 'lt'\n        }, {\n          entry: '>=',\n          mapTo: 'gte'\n        }, {\n          entry: '<=',\n          mapTo: 'lte'\n        }, {\n          entry: 'and',\n          action: function action(a, b) {\n            return Boolean(native(a) && native(b));\n          }\n        }, {\n          entry: 'or',\n          action: function action(a, b) {\n            return Boolean(native(a) || native(b));\n          }\n        }, {\n          entry: 'in',\n          action: function action(array, obj) {\n            obj = native(obj);\n            return 'undefined' !== typeof _.find(array, function (el) {\n              return native(el) === obj;\n            });\n          }\n        }],\n        ternaryOps: [{\n          entry: '?',\n          action: useOrigin\n        }],\n        functions: [{\n          entry: 'random',\n          action: function action(dp) {\n            return ConfiguredDecimal.random(dp);\n          }\n        }, {\n          entry: 'fac',\n          action: useOrigin\n        }, {\n          entry: 'min',\n          mapTo: 'min'\n        }, {\n          entry: 'max',\n          mapTo: 'max'\n        }, {\n          entry: 'hypot',\n          action: useOrigin\n        }, {\n          entry: 'pyt',\n          action: useOrigin\n        }, {\n          entry: 'pow',\n          mapTo: 'pow'\n        }, {\n          entry: 'atan2',\n          action: function action(y, x) {\n            var result = functionOperator('atan2', y, x);\n            return localConfig.degree ? radianToDegree(result) : result;\n          }\n        }, {\n          entry: 'if',\n          action: useOrigin\n        }, {\n          entry: 'gamma',\n          action: useOrigin\n        }, {\n          entry: 'roundTo',\n          action: useOrigin\n        }, {\n          entry: 'nthrt',\n          action: function action(n, x) {\n            x = decimalNumber(x);\n            n = parseInt(n, 10);\n\n            if (x.isNeg() && n % 2 !== 1) {\n              // not a real number (complex not supported)\n              return decimalNumber(NaN);\n            }\n\n            return x.abs().pow(decimalNumber(1).div(n)).mul(Decimal.sign(x));\n          }\n        }],\n        consts: [{\n          entry: 'PI',\n          value: PI\n        }, {\n          entry: 'E',\n          value: E\n        }, {\n          entry: 'EPSILON',\n          value: EPSILON\n        }]\n      };\n      /**\n       * Takes care of zero-like values.\n       * i.e. value smaller than the smallest double precision datatype value is considered equal to zero\n       * @param {Decimal} number\n       * @returns {Decimal}\n       */\n\n      function checkZero(number) {\n        if (number.absoluteValue().lessThan(EPSILON)) {\n          return new ConfiguredDecimal(0);\n        }\n\n        return number;\n      }\n      /**\n       * Cast a Decimal to native type\n       * @param {Number|String|Decimal} number\n       * @returns {Number|Boolean|String} - Always returns a native type\n       */\n\n\n      function native(number) {\n        if (Decimal.isDecimal(number)) {\n          return number.toNumber();\n        } else if (number === 'true' || number === true) {\n          return true;\n        } else if (number === 'false' || number === false) {\n          return false;\n        }\n\n        return number;\n      }\n      /**\n       * Map an original function using possible Decimal arguments\n       * @returns {*}\n       */\n\n\n      function useOrigin() {\n        var args = [].slice.call(arguments);\n        var origin = args.pop();\n        return origin.apply(this, args.map(native));\n      }\n      /**\n       * Cast a native number to Decimal\n       * @param {Number|String|Decimal} number\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function decimalNumber(number) {\n        if (!Decimal.isDecimal(number)) {\n          number = new ConfiguredDecimal(number);\n        }\n\n        return number;\n      }\n      /**\n       * Converts degrees to radians\n       * @param {Number|String|Decimal} value\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function degreeToRadian(value) {\n        return decimalNumber(value).mul(PI).div(180);\n      }\n      /**\n       * Converts radians to degrees\n       * @param {Number|String|Decimal} value\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function radianToDegree(value) {\n        return decimalNumber(value).mul(180).div(PI);\n      }\n      /**\n       * Apply the mentioned unary operator on an operand\n       * @param {String} operator - The operator to apply\n       * @param {Number|String|Decimal} operand - The operand on which apply the operator\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function unaryOperator(operator, operand) {\n        operand = decimalNumber(operand);\n\n        if (!_.isFunction(operand[operator])) {\n          throw new TypeError(operator + ' is not a valid operator!');\n        }\n\n        return operand[operator]();\n      }\n      /**\n       * Apply the mentioned binary operator on the operands\n       * @param {String} operator - The operator to apply\n       * @param {Number|String|Decimal} left - Left operand\n       * @param {Number|String|Decimal} right - Right operand\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function binaryOperator(operator, left, right) {\n        left = decimalNumber(left);\n\n        if (!_.isFunction(left[operator])) {\n          throw new TypeError(operator + ' is not a valid operator!');\n        }\n\n        return left[operator](decimalNumber(right));\n      }\n      /**\n       * Apply the mentioned function operator on the operands\n       * @param {String} operator - The operator to apply\n       * @param {Number|String|Decimal} ... - operands\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function functionOperator(operator) {\n        var operands = [].slice.call(arguments, 1);\n\n        if (!_.isFunction(ConfiguredDecimal[operator])) {\n          throw new TypeError(operator + ' is not a valid function!');\n        }\n\n        return ConfiguredDecimal[operator].apply(ConfiguredDecimal, operands.map(decimalNumber));\n      }\n      /**\n       * Apply the mentioned trigonometric operator on an operand, taking care of the unit (degree or radian)\n       * @param {String} operator - The operator to apply\n       * @param {Number|String|Decimal} operand - The operand on which apply the operator\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function trigoOperator(operator, operand) {\n        if (!_.isFunction(Decimal[operator])) {\n          throw new TypeError(operator + ' is not a valid operator!');\n        }\n\n        if (localConfig.degree) {\n          operand = degreeToRadian(operand);\n        } else {\n          operand = decimalNumber(operand);\n        }\n\n        if (operator === 'tan' && operand.equals(PI.div(2))) {\n          return new ConfiguredDecimal(NaN);\n        }\n\n        return checkZero(ConfiguredDecimal[operator](operand));\n      }\n      /**\n       * Apply the mentioned inverse trigonometric operator on an operand, taking care of the unit (degree or radian)\n       * @param {String} operator - The operator to apply\n       * @param {Number|String|Decimal} operand - The operand on which apply the operator\n       * @returns {Decimal} - Always returns a Decimal\n       */\n\n\n      function inverseTrigoOperator(operator, operand) {\n        var result = checkZero(unaryOperator(operator, operand));\n        return localConfig.degree ? radianToDegree(result) : result;\n      }\n      /**\n       * Map the API\n       * @param {Function} wrapper\n       * @param {Object} origin\n       * @param {Object} api\n       */\n\n\n      function mapping(wrapper, origin, api) {\n        var fn;\n\n        if (api.value) {\n          fn = api.value;\n        } else if (api.action) {\n          fn = _.partialRight(api.action, origin[api.entry]);\n        } else {\n          fn = _.partial(wrapper, api.mapTo);\n        }\n\n        origin[api.entry] = fn;\n      }\n      /**\n       * The exposed parser\n       *\n       * @param {String|mathsExpression} expression - The expression to evaluate\n       * @param {Object} [variables] - Optional variables to use from the expression\n       * @returns {mathsExpression}\n       */\n\n\n      function evaluate(expression, variables) {\n        var parsedExpression, result, value;\n\n        if (_.isPlainObject(expression)) {\n          variables = variables || expression.variables;\n          expression = expression.expression;\n        }\n\n        parsedExpression = parser.parse(expression);\n        result = parsedExpression.evaluate(variables);\n        value = native(result);\n        /**\n         * @typedef {Object} mathsExpression\n         * @property {String} expression - The evaluated expression\n         * @property {Object} variables - Optional variables used from the expression\n         * @property {Decimal|Number|Boolean|String} result - The result of the expression, as returned by the evaluator\n         * @property {Boolean|String} value - The result of the expression, as a native value\n         */\n\n        return {\n          expression: expression,\n          variables: variables,\n          result: result,\n          value: value\n        };\n      } // replace built-in operators and functions in expr-eval by those from decimal.js\n\n\n      _.forEach(mapAPI.unary, _.partial(mapping, unaryOperator, parser.unaryOps));\n\n      _.forEach(mapAPI.binary, _.partial(mapping, binaryOperator, parser.binaryOps));\n\n      _.forEach(mapAPI.ternaryOps, _.partial(mapping, functionOperator, parser.ternaryOps));\n\n      _.forEach(mapAPI.functions, _.partial(mapping, functionOperator, parser.functions));\n\n      _.forEach(mapAPI.consts, _.partial(mapping, null, parser.consts));\n\n      return evaluate;\n    }\n\n    return mathsEvaluatorFactory;\n\n});\n\n","define('core/moduleLoader',['lodash', 'core/promise'], function (_, Promise) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * The data required by the modules loader\n     *\n     * @typedef {Object} moduleDefinition\n     * @property {String} module - AMD module name\n     * @property {String} bundle - AMD module name of the bundle that should contain the module\n     * @property {String} category - the module category\n     * @property {String} name - the module name\n     * @property {String|Number} [position = 'append'] - append, prepend or arbitrary position within the category\n     */\n\n    /**\n     * Creates a loader with the list of required modules\n     * @param {Object} requiredModules - A collection of mandatory modules, where the key is the category and the value are an array of loaded modules\n     * @param {Function} [validate] - A validator function, by default the module should be an object\n     * @param {Object} [specs] - Some extra methods to assign to the loader instance\n     * @returns {loader} the provider loader\n     * @throws TypeError if something is not well formatted\n     */\n\n    function moduleLoaderFactory(requiredModules, validate, specs) {\n      /**\n       * The list of loaded modules\n       */\n      var loaded = {};\n      /**\n       * Retains the AMD modules to load\n       */\n\n      var modules = {};\n      /**\n       * The modules to exclude\n       */\n\n      var excludes = [];\n      /**\n       * Bundles to require\n       */\n\n      var bundles = [];\n      /**\n       * The module loader\n       * @typedef {loader}\n       */\n\n      var loader = {\n        /**\n         * Adds a list of dynamic modules to load\n         * @param {moduleDefinition[]} moduleList - the modules to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        addList: function addList(moduleList) {\n          _.forEach(moduleList, this.add, this);\n\n          return this;\n        },\n\n        /**\n         * Adds a dynamic module to load\n         * @param {moduleDefinition} def - the module to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        add: function add(def) {\n          if (_.isEmpty(def.module) || !_.isString(def.module)) {\n            throw new TypeError('An AMD module must be defined');\n          }\n\n          if (_.isEmpty(def.category) || !_.isString(def.category)) {\n            throw new TypeError('Providers must belong to a category');\n          }\n\n          modules[def.category] = modules[def.category] || [];\n\n          if (_.isNumber(def.position)) {\n            modules[def.category][def.position] = def.module;\n          } else if (def.position === 'prepend' || def.position === 'before') {\n            modules[def.category].unshift(def.module);\n          } else {\n            modules[def.category].push(def.module);\n          }\n\n          if (def.bundle && !_.contains(bundles, def.bundle)) {\n            bundles.push(def.bundle);\n          }\n\n          return this;\n        },\n\n        /**\n         * Appends a dynamic module\n         * @param {moduleDefinition} def - the module to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        append: function append(def) {\n          return this.add(_.merge({\n            position: 'append'\n          }, def));\n        },\n\n        /**\n         * Prepends a dynamic module to a category\n         * @param {moduleDefinition} def - the module to add\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        prepend: function prepend(def) {\n          return this.add(_.merge({\n            position: 'prepend'\n          }, def));\n        },\n\n        /**\n         * Removes a module from the loading stack\n         * @param {String} module - the module's module\n         * @returns {loader} chains\n         * @throws {TypeError} misuse\n         */\n        remove: function remove(module) {\n          excludes.push(module);\n          return this;\n        },\n\n        /**\n         * Loads the dynamic modules : trigger the dependency resolution\n         * @param {Boolean} [loadBundles = false] - does load the bundles\n         * @returns {Promise}\n         */\n        load: function load(loadBundles) {\n          var self = this; //compute the providers dependencies\n\n          var dependencies = _(modules).values().flatten().uniq().difference(excludes).value();\n          /**\n           * Loads AMD modules and wrap then into a Promise\n           * @param {String[]} amdModules - the list of modules to require\n           * @returns {Promise}\n           */\n\n\n          var loadModules = function loadModules(amdModules) {\n            if (_.isArray(amdModules) && amdModules.length) {\n              return new Promise(function (resolve, reject) {\n                require(amdModules, function () {\n                  //resolve with an array of loaded modules\n                  resolve([].slice.call(arguments));\n                }, reject);\n              });\n            }\n\n            return Promise.resolve();\n          }; // 1. load bundles\n          // 2. load dependencies\n          // 3. add them to the modules list\n\n\n          return loadModules(loadBundles ? bundles : []).then(function () {\n            return loadModules(dependencies);\n          }).then(function (loadedModules) {\n            _.forEach(dependencies, function (dependency, index) {\n              var module = loadedModules[index];\n\n              var category = _.findKey(modules, function (val) {\n                return _.contains(val, dependency);\n              });\n\n              if (!validate(module)) {\n                throw new TypeError('Invalid module');\n              }\n\n              if (_.isString(category)) {\n                loaded[category] = loaded[category] || [];\n                loaded[category].push(module);\n              }\n            });\n\n            return self.getModules();\n          });\n        },\n\n        /**\n         * Get the resolved list of modules.\n         * Load needs to be called before to have the dynamic modules.\n         * @param {String} [category] - to get the modules for a given category, if not set, we get everything\n         * @returns {Object[]} the modules\n         */\n        getModules: function getModules(category) {\n          if (_.isString(category)) {\n            return loaded[category] || [];\n          }\n\n          return _(loaded).values().flatten().uniq().value();\n        },\n\n        /**\n         * Get the module categories\n         * @returns {String[]} the categories\n         */\n        getCategories: function getCategories() {\n          return _.keys(loaded);\n        }\n      };\n      validate = _.isFunction(validate) ? validate : _.isPlainObject; //verify and add the required modules\n\n      _.forEach(requiredModules, function (moduleList, category) {\n        if (_.isEmpty(category) || !_.isString(category)) {\n          throw new TypeError('Modules must belong to a category');\n        }\n\n        if (!_.isArray(moduleList)) {\n          throw new TypeError('A list of modules must be an array');\n        }\n\n        if (!_.all(moduleList, validate)) {\n          throw new TypeError('The list does not contain valid modules');\n        }\n\n        if (loaded[category]) {\n          loaded[category] = loaded[category].concat(moduleList);\n        } else {\n          loaded[category] = moduleList;\n        }\n      }); // let's extend the instance with extra methods\n\n\n      if (specs) {\n        _(specs).functions().forEach(function (method) {\n          loader[method] = function delegate() {\n            return specs[method].apply(loader, [].slice.call(arguments));\n          };\n        });\n      }\n\n      return loader;\n    }\n\n    return moduleLoaderFactory;\n\n});\n\n","define('core/pluginLoader',['lodash', 'core/moduleLoader'], function (_, moduleLoaderFactory) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n    moduleLoaderFactory = moduleLoaderFactory && moduleLoaderFactory.hasOwnProperty('default') ? moduleLoaderFactory['default'] : moduleLoaderFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Creates a loader with the list of required plugins\n     * @param {String: Function[]} requiredPlugins - where the key is the category and the value are an array of plugins\n     * @returns {loader} the plugin loader\n     * @throws TypeError if something is not well formated\n     */\n\n    function pluginLoaderFactory(requiredPlugins) {\n      return moduleLoaderFactory(requiredPlugins, _.isFunction, {\n        /**\n         * Get the resolved plugin list.\n         * Load needs to be called before to have the dynamic plugins.\n         * @param {String} [category] - to get the plugins for a given category, if not set, we get everything\n         * @returns {Function[]} the plugins\n         */\n        getPlugins: function getPlugins(category) {\n          return this.getModules(category);\n        }\n      });\n    }\n\n    return pluginLoaderFactory;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Calculator\n *\n * @author Sam <sam@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/calculator',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/calculator',\n    'ui/maths/calculator/basicCalculator',\n    'ui/maths/calculator/scientificCalculator',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin'\n], function (\n    $,\n    _,\n    __,\n    hider,\n    calculatorFactory,\n    basicCalculatorFactory,\n    scientificCalculatorFactory,\n    shortcut,\n    namespaceHelper,\n    pluginFactory\n){\n    'use strict';\n\n    /**\n     * Default config for calculator components\n     * @type {Object}\n     */\n    var defaultCalcConfig = {\n        height : 380,\n        width : 280,\n        top : 50,\n        left : 10,\n        stackingScope: 'test-runner',\n        proportionalResize: true,\n    };\n\n    /**\n     * Default config for BODMAS calculator component\n     * @type {Object}\n     */\n    var bodmasCalcConfig = _.defaults({\n        height : 380,\n        width : 280\n    }, defaultCalcConfig);\n\n    /**\n     * Default config for scientific calculator component\n     * @type {Object}\n     */\n    var scientificCalcConfig = _.defaults({\n        width: 490,\n        height: 420,\n        calculator: {\n            maths: {\n                degree: true\n            }\n        }\n    }, defaultCalcConfig);\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name : 'calculator',\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var areaBroker = this.getAreaBroker();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginsConfig = testConfig.plugins || {};\n            var config = pluginsConfig.calculator || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n\n                //to be activated with a special category from:\n                // - x-tao-option-calculator\n                // - x-tao-option-calculator-bodmas\n                // - x-tao-option-calculator-scientific\n                return !!options.calculator || !!options.calculatorBodmas || !!options.calculatorScientific;\n            }\n\n            /**\n             * Is calculator activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isEnabled()) {//allow calculator\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            /**\n             * Build the calculator component\n             * @param {Function} [calcTpl] - An optional alternative template for the calculator.\n             *                               Only compatible with the four-functions version\n             */\n            function buildCalculator(calcTpl){\n                var context = testRunner.getTestContext() || {};\n                var options = context.options || {};\n                var factory, calcConfig;\n\n                if (options.calculatorScientific) {\n                    factory = scientificCalculatorFactory;\n                    calcConfig = scientificCalcConfig;\n                    calcConfig.calculator.maths.degree = _.isUndefined(config.degree)\n                        ? scientificCalcConfig.calculator.maths.degree\n                        : config.degree;\n                } else if (options.calculatorBodmas) {\n                    factory = basicCalculatorFactory;\n                    calcConfig = bodmasCalcConfig;\n                } else {\n                    factory = calculatorFactory;\n                    calcConfig = defaultCalcConfig;\n                }\n\n                self.calculator = factory(_.defaults({\n                    renderTo: self.$calculatorContainer,\n                    replace: true,\n                    draggableContainer: areaBroker.getContainer(),\n                    alternativeTemplate : calcTpl || null\n                }, calcConfig)).on('show', function () {\n                    self.trigger('open');\n                    self.button.turnOn();\n                }).on('hide', function () {\n                    self.trigger('close');\n                    self.button.turnOff();\n                }).after('render', function() {\n                    this.show();\n                });\n            }\n\n            /**\n             * Show/hide the calculator\n             */\n            function toggleCalculator() {\n                if (self.getState('enabled') !== false) {\n                    if (self.calculator) {\n                        //just show/hide the calculator widget\n                        if (self.calculator.is('hidden')) {\n                            self.calculator.show();\n                        } else {\n                            self.calculator.hide();\n                        }\n                    } else {\n                        //build calculator widget\n                        if(config.template){\n                            require(['tpl!' + config.template.replace(/\\.tpl$/, '')], function(calcTpl){\n                                buildCalculator(calcTpl);\n                            }, function(){\n                                //in case of error, display the default calculator:\n                                buildCalculator();\n                            });\n                        }else{\n                            buildCalculator();\n                        }\n\n                    }\n                }\n            }\n\n            //build element (detached)\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control : 'calculator',\n                title : __('Open Calculator'),\n                icon : 'table',\n                text : __('Calculator')\n            });\n            this.$calculatorContainer = $('<div class=\"widget-calculator\">');\n\n            //init calculator instance var, it will be created only necessary\n            this.calculator = null;\n\n            //attach behavior\n            this.button.on('click', function (e){\n                //prevent action if the click is made inside the form which is a sub part of the button\n                if($(e.target).closest('.widget-calculator').length){\n                    return;\n                }\n\n                e.preventDefault();\n                testRunner.trigger('tool-calculator');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-calculator');\n                    }, {\n                        avoidInput: true,\n                        allowIn: '.widget-calculator'\n                    });\n                }\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePlugin)\n                .on('enabletools renderitem', function (){\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                    if(self.calculator){\n                        //destroy calculator to create a new instance of calculator each time\n                        self.calculator.destroy();\n                        self.calculator = null;\n                    }\n                })\n                .on('tool-calculator', function () {\n                    if (isEnabled()) {\n                        toggleCalculator();\n                    }\n                });\n        },\n        /**\n         * Called during the runner's render phase\n         */\n        render : function render(){\n            var areaBroker = this.getAreaBroker();\n            areaBroker.getContainer().append(this.$calculatorContainer);\n        },\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + this.getName());\n\n            this.$calculatorContainer.remove();\n            if(this.calculator){\n                this.calculator.destroy();\n            }\n        },\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.button.enable();\n        },\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.button.disable();\n            if(this.calculator){\n                this.calculator.hide();\n            }\n        },\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.button.show();\n        },\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.button.hide();\n            if(this.calculator){\n                this.calculator.hide();\n            }\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/comment/comment', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div data-control=\\\"qti-comment\\\" class=\\\"hidden\\\">\\n    <textarea data-control=\\\"qti-comment-text\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Your comment…\", options) : helperMissing.call(depth0, \"__\", \"Your comment…\", options)))\n    + \"\\\"></textarea>\\n    <button data-control=\\\"qti-comment-cancel\\\" class=\\\"btn-info small\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cancel\", options) : helperMissing.call(depth0, \"__\", \"Cancel\", options)))\n    + \"</button>\\n    <button data-control=\\\"qti-comment-send\\\" class=\\\"btn-info small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Send\", options) : helperMissing.call(depth0, \"__\", \"Send\", options)))\n    + \"</button>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Comment form\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/comment/comment',[\n    'jquery',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'ui/stacker',\n    'util/shortcut',\n    'util/namespace',\n    'tpl!taoQtiTest/runner/plugins/tools/comment/comment'\n], function ($, __, pluginFactory, hider, stackerFactory, shortcut, namespaceHelper, commentTpl) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'comment',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n            var stacker = stackerFactory('test-runner');\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext();\n                return !!context.options.allowComment;\n            }\n\n            /**\n             * Can we comment ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            /**\n             * Show/hide the comment panel\n             */\n            function toggleComment() {\n                if (self.getState('enabled') !== false) {\n                    //just show/hide the form\n                    hider.toggle(self.$form);\n                    if (!hider.isHidden(self.$form)) {\n                        //reset the form on each display\n                        self.$input.val('').focus();\n                        self.button.turnOn();\n                        stacker.bringToFront(self.$form);\n                    } else {\n                        self.button.turnOff();\n                    }\n                }\n            }\n\n            // register button in toolbox\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control: 'comment',\n                title: __('Leave a comment'),\n                icon: 'tag',\n                text: __('Comment')\n            });\n\n            //get access to controls\n            this.button.on('render', function() {\n                self.$button = self.button.getElement();\n                self.$form = $(commentTpl()).appendTo(self.$button);\n                self.$input = self.$button.find('[data-control=\"qti-comment-text\"]');\n                self.$cancel = self.$button.find('[data-control=\"qti-comment-cancel\"]');\n                self.$submit = self.$button.find('[data-control=\"qti-comment-send\"]');\n\n                stacker.autoBringToFront(self.$form);\n\n                //hide the form without submit\n                self.$cancel.on('click', function () {\n                    hider.hide(self.$form);\n                    self.button.turnOff();\n                });\n\n                //submit the comment, then hide the form\n                self.$submit.on('click', function () {\n                    var comment = self.$input.val();\n\n                    if (comment) {\n                        self.disable();\n                        self.button.turnOff();\n\n                        testRunner.getProxy()\n                            .callTestAction('comment', {\n                                comment: comment\n                            })\n                            .then(function () {\n                                hider.hide(self.$form);\n                                self.enable();\n                            })\n                            .catch(function () {\n                                hider.hide(self.$form);\n                                self.enable();\n                            });\n                    }\n                });\n            });\n\n\n            //attach behavior\n            this.button.on('click', function (e) {\n                //prevent action if the click is made inside the form which is a sub part of the button\n                if ($(e.target).closest('[data-control=\"qti-comment\"]').length) {\n                    return;\n                }\n\n                e.preventDefault();\n                testRunner.trigger('tool-comment');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-comment');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', togglePlugin)\n                .on('renderitem enabletools', function () {\n                    self.enable();\n                })\n                .on('unloaditem disabletools', function () {\n                    self.disable();\n                })\n                .on('tool-comment', function () {\n                    if (isEnabled()) {\n                        toggleComment();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            if (this.$form) {\n                hider.hide(this.$form);\n            }\n            this.button.disable();\n            this.button.turnOff();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            if (this.$form) {\n                hider.hide(this.$form);\n            }\n            this.button.hide();\n        }\n    });\n});\n\n","define('core/providerRegistry',['lodash'], function (_) { 'use strict';\n\n    _ = _ && _.hasOwnProperty('default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Transfers the target into a a provider registry\n     * It adds two methods registerProvider() and getProvider();\n     *\n     * @param {Object} target\n     * @param {Function} [validator] - a function to validate the provider to be registered\n     *\n     * @returns {Object} the target itself\n     */\n\n    function providerRegistry(target, validator) {\n      var _providers = {};\n      target = target || {};\n      /**\n       * Registers a <i>provider</i> into the provider registry.\n       * The provider provides the behavior required by the target object.\n       *\n       * @param {String} name - the provider name will be used to select the provider while instantiating the target object\n       *\n       * @param {Object} provider - the Provider as a plain object. The target object forwards, encapsulates and delegates calls to the provider.\n       * @param {Function} provider.init - the provider initializes the target object from it's config\n       *\n       * @returns {registerProvider}\n       *\n       * @throws TypeError when a wrong provider is given or an empty name.\n       */\n\n      function registerProvider(name, provider) {\n        var valid = true; //type checking\n\n        if (!_.isString(name) || name.length <= 0) {\n          throw new TypeError('It is required to give a name to your provider.');\n        }\n\n        if (!_.isPlainObject(provider) || !_.isFunction(provider.init)) {\n          throw new TypeError('A provider is an object that contains at least an init function.');\n        }\n\n        valid = validator && _.isFunction(validator) ? validator(provider) : valid;\n\n        if (valid) {\n          _providers[name] = provider;\n        }\n\n        return this;\n      }\n      /**\n       * Gets a registered provider by its name\n       *\n       * @param {String} providerName\n       *\n       * @returns {Object} provider\n       */\n\n\n      function getProvider(providerName) {\n        var provider; //check a provider is available\n\n        if (!_providers || _.size(_providers) === 0) {\n          throw new Error('No provider registered');\n        }\n\n        if (_.isString(providerName) && providerName.length > 0) {\n          provider = _providers[providerName];\n        } else if (_.size(_providers) === 1) {\n          //if there is only one provider, then we take this one\n          providerName = _.keys(_providers)[0];\n          provider = _providers[providerName];\n        } //now we should have a provider\n\n\n        if (!provider) {\n          throw new Error('No candidate found for the provider');\n        }\n\n        return provider;\n      }\n      /**\n       * Expose the list of registered providers\n       * @return {String[]} the list of provider names\n       */\n\n\n      function getAvailableProviders() {\n        return _.keys(_providers);\n      }\n      /**\n       * Clears the registered providers\n       *\n       * @returns {registerProvider}\n       */\n\n\n      function clearProviders() {\n        _providers = {};\n        return this;\n      }\n\n      target.registerProvider = registerProvider;\n      target.getProvider = getProvider;\n      target.getAvailableProviders = getAvailableProviders;\n      target.clearProviders = clearProviders;\n      return target;\n    }\n\n    return providerRegistry;\n\n});\n\n","define('core/requireIfExists',['core/promise'], function (Promise) { 'use strict';\n\n    Promise = Promise && Promise.hasOwnProperty('default') ? Promise['default'] : Promise;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n     */\n    /**\n     * Requires an optional module. It the module does not exist, an empty resource is provided (null).\n     * @param {String} uri - The URI of the module to require\n     * @returns {Promise} - Returns a promise that will be resolved either with the loaded resource or an empty resource.\n     */\n\n    function requireIfExists(uri) {\n      // the promise will always be resolved\n      return new Promise(function (resolve) {\n        // if a require issue occurs, fallback to an empty resource\n        function failed(err) {\n          // only catch error related to the required module\n          var failedId = err.requireModules && err.requireModules[0];\n\n          if (failedId === uri) {\n            // fake the module, then ensure it is truly loaded\n            requirejs.undef(failedId);\n            define(failedId, function () {\n              return null;\n            });\n\n            require([failedId], resolve);\n          } else {\n            // others errors are not handled\n            throw err;\n          }\n        } // require the module with error handling\n\n\n        require([uri], resolve, failed);\n      });\n    }\n\n    return requireIfExists;\n\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/documentViewer/panel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"document-viewer-plugin hidden\\\">\\n    <div class=\\\"viewer-overlay\\\"></div>\\n    <div class=\\\"viewer-panel\\\">\\n        <div class=\\\"viewer-header\\\">\\n            <span class=\\\"viewer-title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            <span class=\\\"icon icon-close\\\"></span>\\n        </div>\\n        <div class=\\\"viewer-content\\\">\";\n  if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n        <div class=\\\"viewer-footer\\\"></div>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : View a document\n *\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/documentViewer/documentViewer',[\n    'jquery',\n    'lodash',\n    'ui/hider',\n    'ui/documentViewer',\n    'ui/documentViewer/providers/pdfViewer',\n    'taoTests/runner/plugin',\n    'tpl!taoQtiTest/runner/plugins/tools/documentViewer/panel'\n], function ($, _, hider, viewerFactory, pdfViewer, pluginFactory, panelTpl) {\n    'use strict';\n\n    /**\n     * The name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'documentViewer';\n\n    /**\n     * Shows the panel, trigger the `panelshow` event\n     *\n     * @param plugin\n     */\n    function showPanel(plugin) {\n        hider.show(plugin.controls.$panel);\n        plugin.trigger('panelshow');\n        $(window).on('resize.' + plugin.getName(), _.debounce(_.partial(resizeViewer, plugin), 50));\n    }\n\n    /**\n     * Hides the panel, trigger the `panelhide` event\n     *\n     * @param plugin\n     */\n    function hidePanel(plugin) {\n        hider.hide(plugin.controls.$panel);\n        plugin.trigger('panelhide');\n        $(window).off('resize.' + plugin.getName());\n    }\n\n    /**\n     * Hides the panel if it is visible\n     *\n     * @param plugin\n     * @returns {Boolean} Returns `true` if the panel was visible and has been hidden\n     */\n    function hideIfVisible(plugin) {\n        var isVisible = !hider.isHidden(plugin.controls.$panel, true);\n        if (isVisible) {\n            hidePanel(plugin);\n        }\n        return isVisible;\n    }\n\n    /**\n     * Initializes the event handlers for the panel container\n     *\n     * @param plugin\n     */\n    function initPanelEvents(plugin) {\n        var namespace = '.' + plugin.getName();\n        var stopEvents = ['click', 'mousedown', 'mouseup', 'touchstart', 'touchend', 'keyup', 'keydow', 'keypress', 'scroll', 'drop'].join(namespace + ' ') + namespace;\n        var hideViewer = _.partial(hidePanel, plugin);\n\n        function stopPropagation(e) {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n        }\n\n        plugin.controls.$overlay\n            .off(namespace)\n            .on('click' + namespace, hideViewer)\n            .on(stopEvents, stopPropagation);\n\n        plugin.controls.$panel\n            .off(namespace)\n            .on('click' + namespace, '.icon-close', hideViewer)\n            .on(stopEvents, stopPropagation);\n    }\n\n    /**\n     * Resizes the viewer to fit the panel content area\n     * @param plugin\n     */\n    function resizeViewer(plugin) {\n        var $content = plugin.controls.$content;\n        plugin.viewer.setSize($content.width(), $content.height());\n    }\n\n    // all document viewers need to be registered\n    viewerFactory.registerProvider('pdf', pdfViewer);\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var $panel = $(panelTpl());\n\n            /**\n             * @param {Object} data\n             * @param {String} data.label - document title\n             * @param {String} data.document - document url\n             */\n            function displayViewer(data) {\n                if (self.getState('enabled') !== false) {\n                    showPanel(self);\n                    self.controls.$title.text(data.label);\n                    resizeViewer(self);\n                    self.viewer.load(data.document, 'pdf');\n                }\n            }\n\n            this.controls = {\n                $panel: $panel,\n                $overlay: $panel.find('.viewer-overlay'),\n                $title: $panel.find('.viewer-title'),\n                $content: $panel.find('.viewer-content')\n            };\n\n            this.viewer = viewerFactory({\n                renderTo: this.controls.$content,\n                replace: true,\n                fitToWidth: true,\n                allowSearch: true\n            });\n\n            //update plugin state based on changes\n            testRunner\n                .on('renderitem enabletools', function () {\n                    self.enable();\n                })\n                .on('renderitem', function () {\n                    self.getAreaBroker().getContentArea()\n                        .append(self.controls.$panel)\n                        .off('.' + self.getName())\n                        .on('viewDocument.' + self.getName(), function (event) {\n                            var data = event.originalEvent.detail;\n                            displayViewer(data);\n                        });\n                    initPanelEvents(self);\n                })\n                .on('move', function () {\n                    hideIfVisible(self);\n                })\n                .on('skip', function () {\n                    hideIfVisible(self);\n                })\n                .on('unloaditem disabletools', function () {\n                    self.disable();\n                })\n                .on('tool-documentViewer', function(data) {\n                    displayViewer(data);\n                });\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render: function render() {\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.getAreaBroker().getContentArea().off('.' + this.getName());\n\n            if (this.viewer) {\n                this.viewer.destroy();\n            }\n\n            if (this.controls.$panel) {\n                this.controls.$panel.remove();\n            }\n\n            this.viewer = null;\n            this.controls = {};\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            hideIfVisible(this);\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            hideIfVisible(this);\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n/**\n * This plugin allows the test taker to select text inside an item.\n * Highlight is preserved when navigating between items\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/highlighter/highlighter',[\n    'lodash',\n    'jquery',\n    'core/eventifier',\n    'ui/highlighter'\n], function (\n    _,\n    $,\n    eventifier,\n    highlighterFactory\n) {\n    'use strict';\n    var prevSelection = [];\n    var selection;\n\n    if (!window.getSelection) throw new Error('Browser does not support getSelection()');\n\n    selection = window.getSelection();\n\n    /**\n     * Returns an array of active ranges.\n     * If browser doesn't support multiple Ranges, returns only the first range\n     * see note on https://w3c.github.io/selection-api/#methods\n     *\n     * @returns {Range[]}\n     */\n    function getAllRanges() {\n        var i, allRanges = [];\n\n        for (i = 0; i < selection.rangeCount; i++) {\n            allRanges.push(selection.getRangeAt(i));\n        }\n        return allRanges;\n    }\n\n    /**\n     * Discards the global text selection from the browser (window.selection)\n     */\n    function discardSelection() {\n        // delay discarding, to allow time for multiple highlighters logic\n        setTimeout(function() {\n            selection.removeAllRanges();\n        }, 250);\n    }\n\n    /**\n     * The highlighter Factory\n     * @param {Object} options\n     * @param {String} [options.className]\n     * @param {String} [options.containerSelector]\n     * @param {Array} [options.containersBlackList]\n     * @param {String} [options.id]\n     * @returns {Object} the highlighter instance\n     */\n    return function testHighlighterFactory(options) {\n\n        /**\n         * Is this highlighter enabled or disabled?\n         * @type {boolean}\n         */\n        var enabled = true;\n\n        /**\n         * Are we in highlight mode, meaning that each new selection is automatically highlighted\n         * without having to press any button\n         * @type {boolean}\n         */\n        var isHighlighting = false;\n\n        /**\n         * The helper that does the highlight magic\n         */\n        var highlightHelper = highlighterFactory({\n            className: options.className || 'txt-user-highlight',\n            containerSelector: options.containerSelector || '.qti-itemBody',\n            containersBlackList: options.containersBlackList || [],\n            clearOnClick: true,\n        });\n\n        //add event to automatically highlight the recently made selection if needed\n        $(document).on('mouseup.highlighter', function() {\n            if (isHighlighting && !selection.isCollapsed) {\n                highlightHelper.highlightRanges(getAllRanges());\n                discardSelection();\n            }\n        });\n\n        //add event to automatically highlight the recently made selection if needed\n        //added touch event (as from TAO-6578)\n        $(document).on('touchend.highlighter', function() {\n            if (isHighlighting && !selection.isCollapsed) {\n                highlightHelper.highlightRanges(getAllRanges());\n            }\n        });\n\n        // iOS devices clears selection after click on button,\n        // so we store prev selection for this devices to be able\n        // to use it after click on highlight button\n        if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {\n            $(document).on('selectionchange', function() {\n                if (!isHighlighting) {\n                    prevSelection = _.clone(getAllRanges(), true);\n                }\n            });\n        }\n\n        /**\n         * The highlighter instance\n         */\n        return eventifier({\n\n            /**\n             * Enable this instance\n             */\n            enable: function enable() {\n                enabled = true;\n            },\n\n            /**\n             * Disable this instance\n             */\n            disable: function disable() {\n                enabled = false;\n            },\n\n            /**\n             * Is this instance currently enabled?\n             * @returns {Boolean}\n             */\n            isEnabled: function isEnabled() {\n                return enabled;\n            },\n\n            /**\n             * toggle highlighting mode on and off\n             * @param {Boolean} bool - wanted state\n             */\n            toggleHighlighting: function toggleHighlighting(bool) {\n                isHighlighting = bool;\n                if (isHighlighting) {\n                    this.trigger('start');\n                    $(\".qti-itemBody\").toggleClass('highlighter-cursor', true);\n                } else {\n                    this.trigger('end');\n                    $(\".qti-itemBody\").toggleClass('highlighter-cursor', false);\n                }\n                return this;\n            },\n\n            /**\n             * Either highlight the current or selection, or toggle highlighting mode\n             */\n            highlight: function highlight() {\n                if (!isHighlighting) {\n                    if (!selection.isCollapsed) {\n                        this.toggleHighlighting(true);\n                        highlightHelper.highlightRanges(getAllRanges());\n                        this.toggleHighlighting(false);\n                        discardSelection();\n                    } else if (prevSelection[0] && !prevSelection[0].collapsed){\n                        this.toggleHighlighting(true);\n                        highlightHelper.highlightRanges(prevSelection);\n                        this.toggleHighlighting(false);\n                        discardSelection();\n                    } else {\n                        this.toggleHighlighting(true);\n                    }\n                } else {\n                    this.toggleHighlighting(false);\n                }\n            },\n\n            /**\n             * restore the highlight from a given index\n             * @param {Array} index\n             */\n            restoreIndex: function restoreIndex(index) {\n                if (index && index.length > 0) {\n                    highlightHelper.highlightFromIndex(index);\n                }\n            },\n\n            /**\n             * Get the current index\n             * @returns {Array} index\n             */\n            getIndex: function getIndex() {\n                return highlightHelper.getHighlightIndex();\n            },\n\n            /**\n             * remove all highlights\n             */\n            clearHighlights: function clearHighlights() {\n                highlightHelper.clearHighlights();\n                selection.removeAllRanges();\n            },\n\n            /**\n             * Getter for the instance's id\n             * @returns {String}\n             */\n            getId: function getId() {\n                return options.id;\n            }\n        });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Highlighter Collection - stores an array of highlighters, with different purposes,\n * any of which could be enabled/disabled on a given item\n *\n * @author Martin Nicholson <martin@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/highlighter/collection',[\n    'lodash',\n    'taoQtiTest/runner/plugins/tools/highlighter/highlighter'\n], function (_, highlighterFactory) {\n    'use strict';\n\n    /**\n     * @var {Array} highlighters - Highlighters collection\n     * We can run multiple instances of the highlighter plugin on one page:\n     * - one for item-level highlights, which persist for the Test session\n     * - others for stimulus-level highlights, which should persist across multiple sessions (TAO-7617)\n     */\n    var highlighters = [];\n\n    /**\n     * @typedef {highlighterCollection}\n     * @returns {Object}\n     */\n    var highlighterCollection = function highlighterCollection() {\n\n        return {\n            /**\n             * Instantiates new highlighter and adds it to array\n             * @param {Object} options\n             * @param {String} options.className - class applied to highlighted spans\n             * @param {String} options.containerSelector - selector for the unique root DOM node the HL will work on\n             * @param {Array}  options.containersBlackList - list of children which should not receive highlights\n             * @param {String} options.id\n             * @returns {Object} a highlighter instance\n             */\n            addHighlighter: function addHighlighter(options) {\n                var hl = highlighterFactory(options);\n                highlighters.push(hl);\n                return hl;\n            },\n\n            /**\n             * Retrieves one highlighter from the collection by matching its id\n             * @param {String} id\n             * @returns {Object} highlighter instance\n             */\n            getHighlighterById: function getHighlighterById(id) {\n                return highlighters.find(function(hl) {\n                    return hl.getId() === id;\n                });\n            },\n\n            /**\n             * Retrieves the full array of highlighters from the collection\n             * @returns {Array}\n             */\n            getAllHighlighters: function getAllHighlighters() {\n                return highlighters;\n            },\n\n            /**\n             * Retrieves the first highlighter in the collection\n             * @returns {Object} highlighter instance\n             */\n            getItemHighlighter: function getItemHighlighter() {\n                return highlighters[0];\n            },\n\n            /**\n             * Retrieves the fully array of highlighter from the collection, minus the first one\n             * @returns {Array} highlighter instance\n             */\n            getNonItemHighlighters: function getNonItemHighlighters() {\n                return highlighters.slice(1);\n            },\n\n            /**\n             * Empties th highlighter collection\n             * @returns {Integer}\n             */\n            getLength: function getLength() {\n                return highlighters.length;\n            },\n\n            /**\n             * Empties the highlighter collection\n             * @returns {Object}\n             */\n            empty: function empty() {\n                highlighters = [];\n                return this;\n            }\n        };\n    };\n\n    return highlighterCollection;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Text Highlighter\n *\n * @author Christophe Noël <christophe@taotesting.com>\n * @author Martin Nicholson <martin@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/highlighter/plugin',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/logger',\n    'core/promise',\n    'taoTests/runner/plugin',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/helpers/currentItem',\n    'taoQtiTest/runner/plugins/tools/highlighter/collection'\n], function ($, _, __, loggerFactory, Promise, pluginFactory, shortcut, namespaceHelper, itemHelper, highlighterCollection) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'highlighter',\n\n\n        /**\n         * Install plugin's functions\n         *\n         */\n        install : function install(){\n\n            var testRunner = this.getTestRunner();\n\n            //define the \"highlighter\" store as \"volatile\" (removed on browser change).\n            testRunner.getTestStore().setVolatile(this.getName());\n        },\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         * @returns {void}\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner      = this.getTestRunner();\n            var testData        = testRunner.getTestData() || {};\n            var testConfig      = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n            var hasHighlights   = false;\n            var logger          = loggerFactory('highlighterPlugin');\n\n            /**\n             * @var {Object} highlighters - Highlighters collection\n             * See taoQtiTest/views/js/runner/plugins/tools/highlighter/collection.js\n             */\n            var highlighters = highlighterCollection();\n\n            // Create the first (item-level) highlighter instance:\n            highlighters.addHighlighter({\n                className: 'txt-user-highlight',\n                containerSelector: '.qti-itemBody',\n                containersBlackList: ['.qti-include'],\n                id: 'item-highlighter'\n            });\n\n            // create buttons\n            this.buttonMain = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Highlight Text'),\n                icon: 'text-marker',\n                control: 'highlight-trigger',\n                text: __('Highlight')\n            });\n\n            this.buttonRemove = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Clear all active highlights'),\n                icon: 'result-nok',\n                control: 'highlight-clear',\n                text: __('Clear Highlights')\n            });\n\n            // attach user events\n            this.buttonMain.on('mousedown', function(e) {\n                // using 'mousedown' instead of 'click' to avoid losing current selection\n                e.preventDefault();\n                if (isPluginEnabled()) {\n                    _.forEach(highlighters.getAllHighlighters(), function(instance) {\n                        if (instance.isEnabled()) {\n                            instance.highlight();\n                        }\n                    });\n                }\n            });\n\n            this.buttonRemove.on('click', function(e) {\n                e.preventDefault();\n                if (isPluginEnabled()) {\n                    _.forEach(highlighters.getAllHighlighters(), function(instance) {\n                        if (instance.isEnabled()) {\n                            instance.clearHighlights();\n                        }\n                    });\n                    testRunner.trigger('clear');\n                }\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        if (isPluginEnabled()) {\n                            _.forEach(highlighters.getAllHighlighters(), function(instance) {\n                                if (instance.isEnabled()) {\n                                    instance.highlight();\n                                }\n                            });\n                        }\n                    }, { avoidInput: true, prevent: true });\n                }\n            }\n\n            //start disabled\n            this.disable();\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isPluginEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-highlighter\n                return !!options.highlighter;\n            }\n\n            /**\n             * Is plugin activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isPluginEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            /**\n             * Gets the browser test store\n             * Can be in volatile or non-volatile mode, depending on config\n             * @returns {Promise}\n             */\n            function getStore() {\n                return testRunner.getTestStore().getStore(self.getName());\n            }\n\n            /**\n             * Load the stores and hook the behavior\n             */\n            return getStore().then(function(highlighterStore) {\n\n                /**\n                 * Saves a highlighter's state to the appropriate store\n                 * @param {String} [itemId] - must be provided to save item-level highlights,\n                 *                            will be used as store key if no key provided\n                 * @param {String} [key] - a key (e.g. a stimulus href) under which we store non-item-level highlights\n                 * @returns {Boolean} true if save was done\n                 */\n                function saveHighlight(itemId, key) {\n                    var instance;\n                    var highlightsIndex;\n                    if (!itemId) {\n                        instance = highlighters.getHighlighterById(key);\n                    }\n                    else {\n                        key = itemId;\n                        instance = highlighters.getItemHighlighter();\n                    }\n\n                    if (!instance) return Promise.resolve(false);\n\n                    highlightsIndex = instance.getIndex();\n\n                    if (isPluginEnabled() && hasHighlights && key) {\n                        logger.debug('Saving '+ highlightsIndex.length + ' highlights for id ' + key);\n                        return highlighterStore.setItem(key, highlightsIndex);\n                    }\n                    return false;\n                }\n\n                /**\n                 * Saves all the highlighters states in the store\n                 * First the non-item highlighters, then the item highlighter (index 0)\n                 * @returns {Promise} resolves once the save is done\n                 */\n                function saveAll() {\n                    var nonItemHighlighters = highlighters.getNonItemHighlighters();\n                    return Promise.all(\n                        _(nonItemHighlighters)\n                        .filter(function(instance) {\n                            return instance.isEnabled();\n                        })\n                        .map(function(instance) {\n                            var key = instance.getId();\n                            return saveHighlight(null, key);\n                        })\n                        .value()\n                    ).then(function(results) {\n                        // Now save the main item highlight\n                        // and if every setItem() returned true, return true\n                        var itemId = testRunner.getTestContext().itemIdentifier;\n                        return saveHighlight(itemId) && _.every(results);\n                    });\n                }\n\n                /**\n                 * Retrieves a highlighter's state from a store and applies it to the DOM\n                 * @param {String} [itemId] - must be provided to save item-level highlights,\n                 *                            will be used as store key if no key provided\n                 * @param {String} [key] - a key (e.g. a stimulus href) under which we store non-item-level highlights\n                 * @returns {Promise} resolves once the load is done\n                 */\n                function loadHighlight(itemId, key) {\n                    var instance;\n                    if (!itemId) {\n                        instance = highlighters.getHighlighterById(key);\n                    }\n                    else {\n                        key = itemId;\n                        instance = highlighters.getItemHighlighter();\n                    }\n\n                    if (!instance) return Promise.resolve(false);\n\n                    return highlighterStore.getItem(key)\n                        .then(function(index) {\n                            if (index) {\n                                logger.debug('Loading ' + index.length + ' highlights for key ' + key);\n                                hasHighlights = true;\n                                instance.restoreIndex(index);\n                            }\n                        })\n                        .then(function() {\n                            //save highlighter state during the item session,\n                            //when the highlighting ends\n                            instance.on('end.save', function() {\n                                return saveHighlight(itemId, key);\n                            });\n                        });\n                }\n\n                //update plugin state based on changes\n                testRunner\n                    .on('loaditem', togglePlugin)\n                    .on('enabletools renderitem', function () {\n                        self.enable();\n                    })\n                    .on('renderitem', function() {\n                        var textStimuli;\n                        var itemId = testRunner.getTestContext().itemIdentifier;\n\n                        if (itemId && isPluginEnabled()) {\n                            hasHighlights = false;\n\n                            highlighters.getItemHighlighter().enable();\n                            // Load item-level highlights from store:\n                            loadHighlight(itemId);\n\n                            // Count stimuli in this item:\n                            textStimuli = itemHelper.getTextStimuliHrefs(testRunner);\n\n                            // NOW we can instantiate the extra highlighters:\n                            _.forEach(textStimuli, function(textStimulusHref) {\n                                var stimHighlighter = highlighters.getHighlighterById(textStimulusHref);\n                                // Instantiate, if id not already present in highlighters...\n                                if (!stimHighlighter) {\n                                    stimHighlighter = highlighters.addHighlighter({\n                                        className: 'txt-user-highlight',\n                                        containerSelector: '.qti-include[data-href=\"' + textStimulusHref + '\"]',\n                                        id: textStimulusHref\n                                    });\n                                }\n                                stimHighlighter.enable();\n                                // And load its data:\n                                loadHighlight(null, textStimulusHref);\n                            });\n                        }\n                    })\n                    .after('renderitem', function() {\n                        // Attach start/end listeners to all highlighter instances:\n                        _.forEach(highlighters.getAllHighlighters(), function(instance) {\n                            if (instance.isEnabled()) {\n                                instance\n                                    .on('start', function(){\n                                        self.buttonMain.turnOn();\n                                        self.trigger('start');\n                                        hasHighlights = true;\n                                    })\n                                    .on('end', function(){\n                                        self.buttonMain.turnOff();\n                                        self.trigger('end');\n                                    });\n                            }\n                        });\n                    })\n                    .after('clear.highlighter', function() {\n                        saveAll();\n                    })\n                    .before('skip move timeout', function() {\n                        return saveAll();\n                    })\n                    .on('disabletools unloaditem', function () {\n                        self.disable();\n                        if (isPluginEnabled()) {\n                            _.forEach(highlighters.getAllHighlighters(), function(instance) {\n                                if (instance.isEnabled()) {\n                                    instance\n                                        .off('end.save')\n                                        .toggleHighlighting(false)\n                                        .disable();\n                                }\n                            });\n                        }\n                    });\n            });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n            $(document).off('.highlighter');\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.buttonMain.enable();\n            this.buttonRemove.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.buttonMain.disable();\n            this.buttonRemove.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.buttonMain.show();\n            this.buttonRemove.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.buttonMain.hide();\n            this.buttonRemove.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : item Theme Switcher\n *\n * @author\n */\ndefine('taoQtiTest/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'ui/themes',\n    'util/shortcut',\n    'util/namespace',\n    'ui/themeLoader'\n], function ($, _, __, pluginFactory, hider, themeHandler, shortcut, namespaceHelper, themeLoader) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: 'itemThemeSwitcher',\n\n        /**\n         * Install step, add behavior before the lifecycle.\n         */\n        install: function install() {\n            //define the \"itemThemeSwitcher\" store as \"volatile\" (removed on browser change).\n            this.getTestRunner().getTestStore().setVolatile(this.getName());\n        },\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n            var pluginName = this.getName();\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            var pluginConfig = self.getConfig();\n            var oldNamespace = themeHandler.getActiveNamespace();\n            var themesConfig = {};\n            var state = {\n                availableThemes: [],\n                defaultTheme: '',\n                selectedTheme: ''\n            };\n            var allMenuEntries = [];\n\n            if (pluginConfig.activeNamespace) {\n                themeHandler.setActiveNamespace(pluginConfig.activeNamespace);\n            }\n            themesConfig = themeHandler.get('items') || {};\n            if (pluginConfig.activeNamespace !== oldNamespace && !_.isEmpty(themesConfig)) {\n                reloadThemes();\n            }\n\n            /**\n             * Tells if the component is enabled\n             * @returns {Boolean}\n             */\n            function isPluginAllowed() {\n                return themesConfig && _.size(themesConfig.available) > 1;\n            }\n\n            /**\n             * Reloads theme config and changes theme\n             */\n            function reloadThemes() {\n                var themeConfig = themeHandler.get('items');\n\n                themeLoader(themeConfig).load();\n                if (state && state.selectedTheme) {\n                    changeTheme(state.selectedTheme);\n                } else {\n                    changeTheme(themeConfig.default);\n                }\n            }\n\n            /**\n             * Load the selected theme\n             * @param themeId\n             */\n            function changeTheme(themeId) {\n                var $qtiItem = $('.qti-item');\n                var previousTheme = state.selectedTheme;\n                state.selectedTheme = themeId;\n\n                if ($qtiItem) {\n                    _.defer(function(){\n                        $qtiItem.trigger('themechange', [state.selectedTheme]);\n                    });\n                }\n                if (self.storage) {\n                    self.storage.setItem('itemThemeId', themeId);\n                }\n\n                if (previousTheme !== state.selectedTheme) {\n                    testRunner.trigger('themechange', state.selectedTheme, previousTheme);\n                }\n\n                allMenuEntries.forEach(function (menuEntry) {\n                    if (menuEntry.getId() === themeId) {\n                        menuEntry.turnOn();\n                    } else {\n                        menuEntry.turnOff();\n                    }\n                });\n            }\n\n            //init plugin state\n            if (themesConfig) {\n                if (themesConfig.default) {\n                    state.defaultTheme = themesConfig.default;\n                    state.selectedTheme = themesConfig.default;\n                }\n                if (themesConfig.available) {\n                    _.forEach(themesConfig.available, function (theme) {\n                        state.availableThemes.push({\n                            id: theme.id,\n                            label: theme.name\n                        });\n                    });\n                }\n            }\n\n            // register toolbox button\n            this.menuButton = this.getAreaBroker().getToolbox().createMenu({\n                control: 'color-contrast',\n                title: __('Change the current color preset'),\n                icon: 'contrast',\n                text: __('Contrast')\n            }).on('click', function (e) {\n                e.preventDefault();\n                testRunner.trigger('tool-themeswitcher-toggle');\n            }).on('openmenu', function() {\n                testRunner.trigger('plugin-open.' + pluginName, state.selectedTheme);\n            }).on('closemenu', function() {\n                testRunner.trigger('plugin-close.' + pluginName, state.selectedTheme);\n            });\n\n            // register menu entries\n            state.availableThemes.forEach(function (theme) {\n                var themeEntry = self.getAreaBroker().getToolbox().createEntry({\n                    control: theme.id,\n                    title: theme.label,\n                    icon: 'preview',\n                    text: __(theme.label)\n                });\n\n                themeEntry.setMenuId('color-contrast');\n\n                themeEntry.on('click', function(e) {\n                    var themeId = this.config.control;\n                    e.preventDefault();\n\n                    self.menuButton.turnOffAll();\n                    this.turnOn();\n\n                    changeTheme(themeId);\n                });\n\n                if (state.defaultTheme === theme.id) {\n                    themeEntry.on('render', function() {\n                        this.turnOn();\n                    });\n                }\n                allMenuEntries.push(themeEntry);\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger('tool-themeswitcher-toggle');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            if (!isPluginAllowed()) {\n                this.hide();\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', function() {\n                    if (isPluginAllowed()) {\n                        self.show();\n                    } else {\n                        self.hide();\n                    }\n                })\n                .on('renderitem', function () {\n                    self.enable();\n                    changeTheme(state.selectedTheme);\n                })\n                .on('enabletools', function() {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function () {\n                    self.disable();\n                })\n                .on('tool-themeswitcher-toggle', function () {\n                    if (self.getState('enabled') !== false) {\n                        self.menuButton.toggleMenu();\n                    }\n                });\n\n            return testRunner.getPluginStore(this.getName())\n                .then(function (itemThemesStore) {\n                    self.storage = itemThemesStore;\n                    self.storage.getItem('itemThemeId')\n                        .then(function (itemThemeId) {\n                            if (itemThemeId && state.selectedTheme !== itemThemeId) {\n                                changeTheme(itemThemeId);\n                            }\n                        });\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.menuButton.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.menuButton.disable();\n\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.menuButton.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.menuButton.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * A compound mask is a mask built with multiple ui/components that interacts with each other.\n * The compound mask itself is not a ui/component but mimic most of its API.\n *\n * Most mask transformations (resize, drag) are achieved by updating a very simple transform model (position, dimensions)\n * which is latter applied to the actual individual components at a proper time\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/lineReader/compoundMask',[\n    'jquery',\n    'lodash',\n    'core/statifier',\n    'core/eventifier',\n    'ui/component',\n    'ui/component/placeable',\n    'ui/component/draggable',\n    'ui/component/resizable',\n    'ui/component/stackable'\n], function(\n    $,\n    _,\n    statifier,\n    eventifier,\n    componentFactory,\n    makePlaceable,\n    makeDraggable,\n    makeResizable,\n    makeStackable\n) {\n    'use strict';\n\n    var defaultDimensions = {\n        outerWidth:  600,\n        outerHeight: 400,\n        innerWidth:  500,\n        innerHeight: 20\n    };\n    var defaultPosition = {\n        outerX: 0,\n        outerY: 0,\n        innerX: 50,\n        innerY: 50\n    };\n    var defaultOptions = {\n        dragMinWidth: 10,\n        dragMinHeight: 10,\n        resizeHandleSize: 10,\n        innerDragHeight: 20\n    };\n    var stackingOptions = {\n        stackingScope: 'test-runner'\n    };\n    var constrains;\n\n    /**\n     * @param {Object} options\n     * @param {Number} options.resizeHandleSize - size of the resize handlers on each resizable edge\n     * @param {Number} options.dragMinWidth - minimal width for the draggable area of each component.\n     * @param {Number} options.dragMinHeight - minimal height for the draggable area of each component.\n     * @param {Number} options.innerDragHeight - height of the inner window drag handle\n     * @param {Object} dimensions\n     * @param {Number} dimensions.outerWidth - overall mask width\n     * @param {Number} dimensions.outerHeight - overall mask height\n     * @param {Number} dimensions.innerWidth - inner window width\n     * @param {Number} dimensions.innerHeight - inner window height\n     * @param {Number} position\n     * @param {Number} position.outerX - overall mask x\n     * @param {Number} position.outerY - overall mask y\n     * @param {Number} position.innerX - inner window mask x\n     * @param {Number} position.innerY - inner window mask y\n     */\n    return function compoundMaskFactory(options, dimensions, position) {\n        var compoundMask,\n            allParts = {},\n            innerDrag,\n            closer,\n            visualGuides = {};\n\n        /**\n         * ============================================\n         * Definition of Mask & Overlay component types\n         * ============================================\n         */\n\n        /**\n         * Create a mask component. They are used for masking (obviously) but also resizing the compound mask\n         * @param {Object} maskConfig\n         * @param {String} maskConfig.id\n         * @param {Function} maskConfig.place - size and position the mask according to the transform model\n         * @param {Function} maskConfig.placeOverlay - size and position the overlay according to the transform model\n         * @param {Function} maskConfig.beforeResize - used to set the resize limit depending on which edge the resizing occurs\n         * @param {Function} maskConfig.onResize - how the resize affect the transform model\n         * @param {Object} maskConfig.edges - Interact configuration to specify which edges can be used for resizing\n         * @param {Number} maskConfig.minWidth\n         * @param {Number} maskConfig.minHeight\n         */\n        function createMask(maskConfig) {\n            var mask,\n                maskAPI = {\n                    place: maskConfig.place,\n                    placeOverlay: maskConfig.placeOverlay,\n\n                    styleResizableEdges: function styleResizableEdges() {\n                        var $element = this.getElement();\n                        _.forOwn(this.config.edgesBorders, function (isResizable, edgeId) {\n                            if (isResizable) {\n                                $element.addClass('border-' + edgeId);\n                            }\n                        });\n                    },\n                    addResizeControll: function addResizeControll() {\n                        var $element = this.getElement();\n                        var $resizeControll = $('<div>', {\n                            'class': 'resize-control',\n                        });\n\n                        $element.append($resizeControll);\n                    }\n                };\n\n            mask = componentFactory(maskAPI, maskConfig);\n            makeResizable(mask);\n            makeStackable(mask, stackingOptions);\n\n            return mask\n                .on('render', function() {\n                    var $element = this.getElement();\n\n                    this.styleResizableEdges();\n\n                    if (this.config.resizeControll) {\n                        this.addResizeControll();\n                    }\n\n                    $element\n                        .addClass('line-reader-mask ' + maskConfig.id)\n                        .on('mousedown touchstart', function() {\n                            bringAllToFront();\n                        });\n\n                    // uncomment this to see what's going on with masks:\n                    // $element.css({ border: '1px solid olive'});\n                })\n                .on('resizestart', function () {\n                    innerDrag.hide();\n                    closer.hide();\n                    invokeOnOverlays('hide');\n                    invokeOnMasks('setState', ['resizing', true]);\n                    this.setState('resizer', true);\n                })\n                .on('beforeresize', maskConfig.beforeResize || _.noop)\n                .on('resize', maskConfig.onResize || _.noop)\n                .on('resizeend', function () {\n                    applyTransformsToOverlays();\n                    applyTransformsToInnerDrag();\n                    applyTransformsToCloser();\n\n                    invokeOnMasks('setState', ['resizing', false]);\n                    invokeOnOverlays('show');\n                    innerDrag.show();\n                    closer.show();\n                    this.setState('resizer', false);\n                })\n                .init();\n        }\n\n\n        /**\n         * Create a overlay component. Overlay are invisible and are used for dragging.\n         * When clicked, the whole mask is hidden and only the overlay is displayed, after being resized to fit the whole mask surface\n         * this allows for performance improvement as well as giving the dragged element proper dragging boundaries.\n         * Also, visual guides are added, like a fake inner window, during the drag\n         * @param {Object} overlayConfig\n         * @param {String} overlayConfig.id\n         */\n        function createOverlay(overlayConfig) {\n            var overlay,\n                overlayAPI = {\n                    transformOverlay: function transformOverlay() {\n                        var $element = this.getElement();\n\n                        this._sizeBackup = this.getSize();\n                        this._posBackup = this.getPosition();\n\n                        this.setSize(dimensions.outerWidth, dimensions.outerHeight)\n                            .moveTo(position.outerX, position.outerY);\n                        $element.addClass('moving');\n\n                        this.setState('transformed', true);\n                    },\n\n                    restoreOverlay: function restoreOverlay() {\n                        var $element = this.getElement();\n\n                        if (this.is('transformed')) {\n\n                            this.setSize(this._sizeBackup.width, this._sizeBackup.height)\n                                .moveTo(this._posBackup.x, this._posBackup.y);\n                            $element.removeClass('moving');\n\n                            this._sizeBackup = null;\n                            this._posBackup = null;\n\n                            this.setState('transformed', false);\n                        }\n                    },\n\n                    appendVisualGuides: function appendVisualGuides() {\n                        var $element = this.getElement(),\n                            borderWidth = 1, // this mirror the $lrBorderWidth css variable\n                            borderOffset = borderWidth * 2;\n\n                        $element.append(visualGuides.$maskBg);\n                        $element.append(visualGuides.$innerWindow);\n\n                        visualGuides.$maskBg.css({\n                            width:  dimensions.outerWidth - borderOffset,\n                            height: dimensions.outerHeight - borderOffset,\n                            'border-top-width':     dimensions.topHeight - borderOffset,\n                            'border-right-width':   dimensions.rightWidth - borderOffset,\n                            'border-bottom-width':  dimensions.bottomHeight - borderOffset,\n                            'border-left-width':    dimensions.leftWidth - borderOffset\n                        });\n\n                        visualGuides.$innerWindow.css({\n                            width:  dimensions.innerWidth,\n                            height: dimensions.innerHeight,\n                            left:   dimensions.leftWidth - borderOffset,\n                            top:    dimensions.topHeight - borderOffset\n                        });\n                    },\n\n                    removeVisualGuides: function removeVisualGuides() {\n                        visualGuides.$maskBg.remove();\n                        visualGuides.$innerWindow.remove();\n                    }\n                };\n\n            overlay = componentFactory(overlayAPI, overlayConfig);\n            makeDraggable(overlay);\n            makeStackable(overlay, stackingOptions);\n\n            return overlay\n                .on('render', function() {\n                    var self = this,\n                        $element = this.getElement(),\n                        // captures touch and mouse\n                        // also fixes issue with IE not capturing 'mousedown' etc\n                        pointerEventsPrefix = window.PointerEvent ? 'pointer' : 'mouse',\n                        $moveIcon = $('<div>', {\n                            'class': 'icon icon-mobile-menu'\n                        });;\n\n\n                    $element\n                        .addClass('line-reader-overlay ' + overlayConfig.id)\n                        .on(pointerEventsPrefix + 'down' + ' touchstart', function() {\n                            bringAllToFront();\n                            self.transformOverlay();\n                        })\n                        .on(pointerEventsPrefix + 'up' + ' touchend', function() {\n                            self.restoreOverlay();\n                        })\n                        .prepend($moveIcon);\n                })\n                .on('dragstart', function() {\n                    innerDrag.hide();\n                    closer.hide();\n                    invokeOnMasks('hide');\n                    this.appendVisualGuides();\n                })\n                .on('dragmove', function moveAllPartsTogether(xOffsetRelative, yOffsetRelative) {\n                    // update the transform model\n                    position.outerX += xOffsetRelative;\n                    position.outerY += yOffsetRelative;\n                    position.innerX += xOffsetRelative;\n                    position.innerY += yOffsetRelative;\n                })\n                .on('dragend', function() {\n                    this.removeVisualGuides();\n                    // although they are already display, calling show() again on the overlays\n                    // will force their z-Index at the top of the stack\n                    invokeOnAll('show');\n                    innerDrag.show();\n                    closer.show();\n\n                    // apply the new transform model\n                    applyTransforms();\n                })\n                .init();\n        }\n\n\n        /**\n         * ==========================\n         * Inner Drag Handle & Closer\n         * ==========================\n         */\n\n        /**\n         * This handle allows to drag the inner window\n         */\n        function createInnerDragHandle() {\n            // uncomment this (and a few lines below) if debugging is needed:\n            // var $boundingBox = $('<div>').css({ position: 'fixed', 'box-sizing': 'border-box', border: '1px solid red' });\n\n            innerDrag = componentFactory();\n\n            makeStackable(innerDrag, stackingOptions);\n            makeDraggable(innerDrag, {\n                dragRestriction: function dragRestriction() {\n                    var fixedXY = allParts.nw.mask.getElement().offset(),\n                        rect;\n\n                    rect = {\n                        x: fixedXY.left + constrains.minWidth,\n                        y: fixedXY.top + (constrains.minTopHeight + dimensions.innerHeight + options.resizeHandleSize),\n                        width: dimensions.outerWidth - (constrains.minWidth * 2 ),\n                        height: dimensions.outerHeight -\n                            (dimensions.innerHeight + constrains.minTopHeight + constrains.minBottomHeight - options.innerDragHeight)\n                    };\n\n                    // uncomment to see what's going on:\n                    // allParts.ne.mask.getContainer().append($boundingBox);\n                    // $boundingBox.css({ width: rect.width, height: rect.height, top: rect.y, left: rect.x });\n\n                    return rect;\n                }\n            })\n                .on('render', function() {\n                    var $element = this.getElement(),\n                        $dragIcon = $('<div>', {\n                            'class': 'icon icon-move'\n                        });\n\n                    $element.addClass('line-reader-inner-drag');\n                    $element.css({ background: 'none' });\n                    $element.append($dragIcon);\n                    $element.on('mousedown touchstart', function(e) {\n                        e.stopPropagation();\n                        bringAllToFront();\n                    });\n                })\n                .on('dragstart', function() {\n                    closer.hide();\n                    invokeOnMasks('setState', ['resizing', true]);\n                })\n                .on('dragmove', function(xOffsetRelative, yOffsetRelative) {\n                    position.innerX += xOffsetRelative;\n                    position.innerY += yOffsetRelative;\n\n                    dimensions.leftWidth += xOffsetRelative;\n                    dimensions.topHeight += yOffsetRelative;\n\n                    dimensions.rightWidth   -= xOffsetRelative;\n                    dimensions.bottomHeight -= yOffsetRelative;\n\n                    applyTransformsToMasks();\n                })\n                .on('dragend', function() {\n                    innerDrag.bringToFront();\n                    closer.show();\n                    invokeOnMasks('setState', ['resizing', false]);\n\n                    applyTransformsToOverlays();\n                })\n                .init();\n        }\n\n        /**\n         * Close button for the compound mask\n         */\n        function createCloser() {\n            closer = componentFactory();\n\n            makeStackable(closer, stackingOptions);\n            makePlaceable(closer)\n                .on('render', function() {\n                    var self = this,\n                        $element = this.getElement(),\n                        $closeIcon = $('<div>', {\n                            'class': 'icon icon-result-nok'\n                        });\n\n                    $element.append($closeIcon);\n                    $element.addClass('line-reader-closer');\n\n                    $element.on('mousedown touchstart', function() {\n                        bringAllToFront();\n                    });\n\n                    $element.on('click', function(e) {\n                        e.stopPropagation();\n                        self.trigger('click');\n                    });\n                })\n                .init();\n        }\n\n        /**\n         * =================\n         * Utility functions\n         * =================\n         */\n        function bringAllToFront() {\n            invokeOnAll('bringToFront');\n            innerDrag.bringToFront();\n            closer.bringToFront();\n        }\n\n        function invokeOnAll(fn, args) {\n            invokeOnMasks(fn, args);\n            invokeOnOverlays(fn, args);\n        }\n\n        function invokeOnMasks(fn, args) {\n            invokeOn('mask', fn, args);\n        }\n\n        function invokeOnOverlays(fn, args) {\n            invokeOn('overlay', fn, args);\n        }\n\n        /**\n         * Invoke a method on all compound mask parts, whether mask or overlays\n         * @param {String} target - mask | overlay\n         * @param {String} fn - the name of the method to invoke\n         * @param {*[]} args - arguments passed on invoke\n         */\n        function invokeOn(target, fn, args) {\n            _.forOwn(allParts, function(part) {\n                if (_.isObject(part[target]) && _.isFunction(part[target][fn])) {\n                    part[target][fn].apply(part[target], args);\n                }\n            });\n        }\n\n        /**\n         * =================================\n         * Transform model related functions\n         * =================================\n         */\n\n        function applyTransforms() {\n            applyTransformsToMasks();\n            applyTransformsToOverlays();\n            applyTransformsToInnerDrag();\n            applyTransformsToCloser();\n        }\n\n        function applyTransformsToMasks() {\n            invokeOnMasks('place');\n        }\n\n        function applyTransformsToOverlays() {\n            _.forOwn(allParts, function(part) {\n                if (part.overlay) {\n                    part.mask.placeOverlay(part.overlay);\n                }\n            });\n        }\n\n        function applyTransformsToInnerDrag() {\n            if (innerDrag) {\n                innerDrag\n                    .setSize(dimensions.innerWidth - 20, options.innerDragHeight)\n                    .moveTo(\n                        position.innerX + 10,\n                        position.innerY + dimensions.innerHeight + options.resizeHandleSize\n                    );\n            }\n        }\n\n        function applyTransformsToCloser() {\n            if (closer) {\n                closer\n                    .setSize(\n                        constrains.minWidth - options.resizeHandleSize,\n                        constrains.minHeight - options.resizeHandleSize\n                    )\n                    .moveTo(\n                        position.outerX + dimensions.outerWidth - constrains.minWidth - 5, // manual adjustment so it looks better\n                        position.outerY + options.resizeHandleSize - 4\n                    );\n            }\n        }\n\n        /**\n         * Check that the given transform model respect the current constrains.\n         * If not, correct them\n         */\n        function correctTransforms() {\n            if (dimensions.topHeight < constrains.minTopHeight) {\n                dimensions.topHeight = constrains.minTopHeight;\n                position.innerY = position.outerY + constrains.minTopHeight;\n            }\n            if (dimensions.innerHeight < constrains.minHeight) {\n                dimensions.innerHeight = constrains.minHeight;\n            }\n            if (dimensions.bottomHeight < constrains.minBottomHeight) {\n                dimensions.bottomHeight = constrains.minBottomHeight;\n            }\n            dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + dimensions.bottomHeight;\n\n            if (dimensions.leftWidth < constrains.minWidth) {\n                dimensions.leftWidth = constrains.minWidth;\n                position.innerX = position.outerX + constrains.minWidth;\n            }\n            if (dimensions.innerWidth < constrains.minWidth) {\n                dimensions.innerWidth = constrains.minWidth;\n            }\n            if (dimensions.rightWidth < constrains.minWidth) {\n                dimensions.rightWidth = constrains.minWidth;\n            }\n            dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + dimensions.rightWidth;\n        }\n\n        /**\n         * Update the transform model during a resize affecting the top height\n         * @param {Number} newHeight\n         * @param {Number} newY\n         * @param {Boolean} fromTop - if the resize occurs from the top\n         */\n        function setTopHeight(newHeight, newY, fromTop) {\n            dimensions.topHeight = newHeight;\n\n            if (fromTop) {\n                dimensions.outerHeight = newHeight + dimensions.innerHeight + dimensions.bottomHeight;\n                position.outerY = newY;\n            } else {\n                dimensions.innerHeight = dimensions.outerHeight - newHeight - dimensions.bottomHeight;\n                position.innerY = position.outerY + newHeight;\n            }\n        }\n\n        /**\n         * Update the transform model during a resize affecting the right width\n         * @param {Number} newWidth\n         * @param {Number} newX\n         * @param {Boolean} fromLeft - if the resize occurs from the left\n         */\n        function setRightWidth(newWidth, newX, fromLeft) {\n            dimensions.rightWidth = newWidth;\n\n            if (fromLeft) {\n                dimensions.innerWidth = newX - position.innerX;\n            } else {\n                dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + newWidth;\n            }\n        }\n\n        /**\n         * Update the transform model during a resize affecting the bottom height\n         * @param {Number} newHeight\n         * @param {Number} newY\n         * @param {Boolean} fromTop - if the resize occurs from the top\n         */\n        function setBottomHeight(newHeight, newY, fromTop) {\n            dimensions.bottomHeight = newHeight;\n\n            if (fromTop) {\n                dimensions.innerHeight = newY - position.innerY;\n                dimensions.bottomHeight = newHeight;\n            } else {\n                dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + newHeight;\n            }\n        }\n\n        /**\n         * Update the transform model during a resize affecting the left width\n         * @param {Number} newWidth\n         * @param {Number} newX\n         * @param {Boolean} fromLeft - if the resize occurs from the left\n         */\n        function setLeftWidth(newWidth, newX, fromLeft) {\n            dimensions.leftWidth = newWidth;\n\n            if (fromLeft) {\n                dimensions.outerWidth = newWidth + dimensions.innerWidth + dimensions.rightWidth;\n                position.outerX = newX;\n            } else {\n                dimensions.innerWidth = dimensions.outerWidth - newWidth - dimensions.rightWidth;\n                position.innerX = position.outerX + newWidth;\n            }\n        }\n\n\n        /**\n         * ======================================\n         * Mask parts and other elements creation\n         * ======================================\n         */\n\n        function createCompoundMask() {\n\n            // North\n            createPart({\n                id: 'n',\n                edges: { top: false, right: false, bottom: false, left: false },\n                edgesBorders: { top: true, right: false, bottom: true, left: false },\n                addOverlay: true,\n                minHeight: constrains.minTopHeight,\n\n                // move and dimension the mask\n                place: function place() {\n                    this.moveTo(\n                        position.innerX,\n                        position.outerY\n                    ).setSize(\n                        dimensions.innerWidth,\n                        dimensions.topHeight\n                    );\n                },\n\n                // move and dimension the overlay\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        position.outerX,\n                        pos.y\n                    ).setSize(\n                        dimensions.outerWidth,\n                        size.height\n                    );\n                },\n\n                // set a resize limit whenever resize happens on an inner edge (here, the top inner edge, eg. the bottom of the mask),\n                // so the min/max width/height limit for \"inner component\" is respected\n                beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n                    this.config.maxHeight = (fromTop)\n                        ? null\n                        : dimensions.topHeight + (dimensions.innerHeight - constrains.minHeight);\n                },\n\n                // set the new transform values (dimension and position) resulting from the current mask resize, and apply them\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setTopHeight(height, y, fromTop);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // North-east\n            createPart({\n                id: 'ne',\n                edges: { top: false, right: false, bottom: false, left: false },\n                edgesBorders: { top: true, right: true, bottom: false, left: false },\n                minHeight: constrains.minTopHeight,\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX + dimensions.innerWidth,\n                        position.outerY\n                    ).setSize(\n                        dimensions.rightWidth,\n                        dimensions.topHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setTopHeight(height, y, fromTop);\n                    setRightWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // South east\n            createPart({\n                id: 'se',\n                edges: { top: false, right: '.resize-control', bottom: '.resize-control', left: false },\n                edgesBorders: { top: false, right: true, bottom: true, left: false },\n                minHeight: constrains.minBottomHeight,\n                resizeControll: true,\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX + dimensions.innerWidth,\n                        position.innerY + dimensions.innerHeight\n                    ).setSize(\n                        dimensions.rightWidth,\n                        dimensions.bottomHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setRightWidth(width, x, fromLeft);\n                    setBottomHeight(height, y, fromTop);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // East\n            createPart({\n                id: 'e',\n                edges: { top: false, right: false, bottom: false, left: '.resize-control', },\n                edgesBorders: { top: false, right: true, bottom: false, left: true },\n                resizeControll: true,\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX + dimensions.innerWidth,\n                        position.innerY\n                    ).setSize(\n                        dimensions.rightWidth,\n                        dimensions.innerHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y - options.resizeHandleSize\n                    ).setSize(\n                        size.width - (options.resizeHandleSize * 2),\n                        size.height + (options.resizeHandleSize * 2)\n                    );\n                },\n\n                beforeResize: function beforeResize(width, height, fromLeft) {\n                    this.config.maxWidth = (fromLeft)\n                        ? dimensions.rightWidth + (dimensions.innerWidth - constrains.minWidth)\n                        : null;\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x) {\n                    setRightWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // South\n            createPart({\n                id: 's',\n                edges: { top: '.resize-control', right: false, bottom: false, left: false },\n                edgesBorders: { top: true, right: false, bottom: true, left: false },\n                minHeight: constrains.minBottomHeight,\n                resizeControll: true,\n\n                place: function place() {\n                    this.moveTo(\n                        position.innerX ,\n                        position.innerY + dimensions.innerHeight\n                    ).setSize(\n                        dimensions.innerWidth,\n                        dimensions.bottomHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\n                    this.config.maxHeight = (fromTop)\n                        ? dimensions.bottomHeight + (dimensions.innerHeight - constrains.minHeight)\n                        : null;\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setBottomHeight(height, y, fromTop);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // South-west\n            createPart({\n                id: 'sw',\n                edges: { top: false, right: false, bottom: false, left: false },\n                edgesBorders: { top: false, right: false, bottom: true, left: true },\n                minHeight: constrains.minBottomHeight,\n\n                place: function place() {\n                    this.moveTo(\n                        position.outerX,\n                        position.innerY + dimensions.innerHeight\n                    ).setSize(\n                        dimensions.leftWidth,\n                        dimensions.bottomHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setBottomHeight(height, y, fromTop);\n                    setLeftWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // West\n            createPart({\n                id: 'w',\n                edges: { top: false, right: false, bottom: false, left: false },\n                edgesBorders: { top: false, right: true, bottom: false, left: true },\n\n                place: function place() {\n                    this.moveTo(\n                        position.outerX,\n                        position.innerY\n                    ).setSize(\n                        dimensions.leftWidth,\n                        dimensions.innerHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y - options.resizeHandleSize\n                    ).setSize(\n                        size.width - (options.resizeHandleSize * 2),\n                        size.height + (options.resizeHandleSize * 2)\n                    );\n                },\n\n                beforeResize: function beforeResize(width, height, fromLeft) {\n                    this.config.maxWidth = (fromLeft)\n                        ? null\n                        : dimensions.leftWidth + (dimensions.innerWidth - constrains.minWidth);\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x) {\n                    setLeftWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n\n            // North-west\n            createPart({\n                id: 'nw',\n                edges: { top: false, right: false, bottom: false, left: false },\n                edgesBorders: { top: true, right: false, bottom: false, left: true },\n                minHeight: constrains.minTopHeight,\n\n                place: function place() {\n                    this.moveTo(\n                        position.outerX,\n                        position.outerY\n                    ).setSize(\n                        dimensions.leftWidth,\n                        dimensions.topHeight\n                    );\n                },\n\n                placeOverlay: function placeOverlay(overlay) {\n                    var pos = this.getPosition(),\n                        size = this.getSize();\n                    overlay.moveTo(\n                        pos.x + options.resizeHandleSize,\n                        pos.y + options.resizeHandleSize\n                    ).setSize(\n                        size.width - options.resizeHandleSize,\n                        size.height - (options.resizeHandleSize * 2)\n                    );\n                },\n\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\n                    setTopHeight(height, y, fromTop);\n                    setLeftWidth(width, x, fromLeft);\n                    applyTransformsToMasks();\n                }\n            });\n        }\n\n        function createPart(partConfig) {\n            allParts[partConfig.id] = {\n                mask: createMask(_.assign({}, constrains, partConfig)),\n                overlay: partConfig.addOverlay ? createOverlay(partConfig) : null\n            };\n        }\n\n\n        function createVisualGuides() {\n            visualGuides.$maskBg = $('<div>', {\n                'class': 'mask-bg'\n            });\n            visualGuides.$innerWindow = $('<div>', {\n                'class': 'inner-window'\n            });\n        }\n\n\n        /**\n         * =========================\n         * The compoundMask instance\n         * =========================\n         */\n\n        dimensions  = _.defaults(dimensions || {}, defaultDimensions);\n        position    = _.defaults(position   || {}, defaultPosition);\n        options     = _.defaults(options    || {}, defaultOptions);\n\n        constrains = {\n            minWidth:           (options.resizeHandleSize * 2) + options.dragMinWidth,\n            minHeight:          (options.resizeHandleSize * 2) + options.dragMinHeight,\n            minBottomHeight:    (options.resizeHandleSize * 2) + options.innerDragHeight,\n            minTopHeight: (options.resizeHandleSize * 2) + 30 // make sure that top will fit header size\n        };\n\n        compoundMask = {\n            init: function init() {\n                var self = this;\n\n                this.setTransforms(dimensions, position);\n\n                createCompoundMask();\n                createVisualGuides();\n                createInnerDragHandle();\n                createCloser();\n\n                closer.on('click', function() {\n                    self.hide();\n                    self.trigger('close');\n                });\n\n                return this;\n            },\n\n            render: function render($container) {\n                invokeOnAll('render', [$container]);\n                innerDrag.render($container);\n                closer.render($container);\n                applyTransforms();\n                return this;\n            },\n\n            destroy: function destroy() {\n                invokeOnAll('destroy');\n                visualGuides = null;\n                innerDrag = null;\n                closer = null;\n                return this;\n            },\n\n            show: function show() {\n                invokeOnAll('show');\n                innerDrag.show();\n                closer.show();\n                this.setState('hidden', false);\n                return this;\n            },\n\n            hide: function hide() {\n                invokeOnAll('hide');\n                innerDrag.hide();\n                closer.hide();\n                this.setState('hidden', true);\n                return this;\n            },\n\n            /**\n             * Allow updating the transform model\n             * @param {Object} dim\n             * @param {Number} dim.outerWidth - overall mask width\n             * @param {Number} dim.outerHeight - overall mask height\n             * @param {Number} dim.innerWidth - inner window width\n             * @param {Number} dim.innerHeight - inner window height\n             * @param {Number} pos\n             * @param {Number} pos.outerX - overall mask x\n             * @param {Number} pos.outerY - overall mask y\n             * @param {Number} pos.innerX - inner window x\n             * @param {Number} pos.innerY - inner window y\n             */\n            setTransforms: function setTransforms(dim, pos) {\n                dimensions  = _.defaults(dim || {}, dimensions);\n                position    = _.defaults(pos || {}, position);\n\n                // automatically complete the dimensions\n                dimensions.topHeight    = pos.innerY - pos.outerY;\n                dimensions.rightWidth   = dim.outerWidth - (pos.innerX - pos.outerX) - dim.innerWidth;\n                dimensions.bottomHeight = dim.outerHeight - (pos.innerY - pos.outerY) - dim.innerHeight;\n                dimensions.leftWidth    = pos.innerX - pos.outerX;\n\n                correctTransforms();\n                applyTransforms();\n            },\n\n            getDimensions: function getDimensions() {\n                return dimensions;\n            },\n\n            getPosition: function getPosition() {\n                return position;\n            },\n\n            getParts: function getParts() {\n                return allParts;\n            }\n        };\n\n        statifier(compoundMask);\n        eventifier(compoundMask);\n\n        return compoundMask;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Tool Plugin : Line Reader\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/lineReader/plugin',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/plugins/tools/lineReader/compoundMask'\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, compoundMaskFactory) {\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'line-reader';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Options for the compoundMask factory\n     * @type {Object}\n     */\n    var maskOptions = {\n        dragMinWidth: 17,\n        dragMinHeight: 7,\n        resizeHandleSize: 7,\n        innerDragHeight: 20\n    };\n\n    var dimensions,\n        position;\n\n    /**\n     * These functions are a first effort to place the mask on the first line on the item\n     * They make a lot of assumptions:\n     * - the item starts with a text\n     * - the padding is set on the .qti-item container\n     * - the padding is consistent with the minWidth/minHeight configuration of the mask\n     * - and some other...\n     * @param {jQuery} $container - where the mask is appended\n     */\n    function getDimensions($container) {\n        var $qtiContent = $container.find('#qti-content'),\n            $qtiItem = $qtiContent.find('.qti-item'),\n\n            lineHeight = Math.ceil(parseFloat($qtiContent.css('line-height'))) || 20; // reasonable default line height\n\n        return {\n            outerWidth:     $qtiItem.width() + (maskOptions.resizeHandleSize * 4) + (maskOptions.dragMinWidth * 2),\n            outerHeight:    175, // reasonable default height\n            innerWidth:     $qtiItem.width(),\n            innerHeight:    lineHeight\n        };\n    }\n    function getPosition($container) {\n        var $qtiContent = $container.find('#qti-content'),\n            $qtiItem = $qtiContent.find('.qti-item'),\n\n            itemPosition = $qtiItem.position() || {},\n\n            paddingLeft = parseInt($qtiItem.css('padding-left'), 10),\n            paddingTop = parseInt($qtiItem.css('padding-top'), 10),\n\n            textPadding = 3, // this is to let the text breathe a bit\n\n            innerX = parseInt(itemPosition.left, 10) + paddingLeft - textPadding,\n            innerY = parseInt(itemPosition.top, 10) + paddingTop - textPadding;\n\n        return {\n            outerX: innerX - (maskOptions.resizeHandleSize * 2) - maskOptions.dragMinWidth,\n            outerY: 0,\n            innerX: innerX,\n            innerY: innerY\n        };\n    }\n\n    function containerWidthHasChanged($container) {\n        var newDimensions = getDimensions($container);\n        return newDimensions.outerWidth !== dimensions.outerWidth;\n    }\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this,\n\n                testRunner = this.getTestRunner(),\n                testData = testRunner.getTestData() || {},\n                testConfig = testData.config || {},\n                pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {},\n                $container = testRunner.getAreaBroker().getContentArea().parent();\n\n            this.compoundMask = compoundMaskFactory(maskOptions)\n                .init()\n                .render($container)\n                .on('close', function() {\n                    closeMask();\n                })\n                .hide();\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-lineReader\n                return !!options.lineReader;\n            }\n\n            function toggleButton() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function toggleMask() {\n                if (self.compoundMask.getState('hidden')) {\n                    if (containerWidthHasChanged($container)) {\n                        transformMask($container);\n                    }\n                    openMask();\n                } else {\n                    closeMask();\n                }\n            }\n\n            function openMask() {\n                self.compoundMask.show();\n                self.trigger('start');\n                self.button.turnOn();\n            }\n\n            function closeMask() {\n                if (! self.compoundMask.getState('hidden')) {\n                    self.compoundMask.hide();\n                }\n                self.trigger('end');\n                self.button.turnOff();\n            }\n\n            function transformMask($maskContainer) {\n                dimensions = getDimensions($maskContainer);\n                position = getPosition($maskContainer);\n                self.compoundMask.setTransforms(\n                    _.clone(dimensions),\n                    _.clone(position)\n                );\n            }\n\n            // create button\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                title: __('Line Reader'),\n                icon: 'insert-horizontal-line',\n                control: 'line-reader',\n                text: __('Line Reader')\n            });\n\n            // attach user events\n            this.button\n                .on('click', function(e) {\n                    e.preventDefault();\n                    testRunner.trigger(actionPrefix + 'toggle');\n                });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.toggle) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\n                        testRunner.trigger(actionPrefix + 'toggle');\n                    }, { avoidInput: true, prevent: true });\n                }\n            }\n\n            //start disabled\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', toggleButton)\n                .on('renderitem', function() {\n                    transformMask($container);\n                })\n                .on('enabletools renderitem', function () {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function () {\n                    self.disable();\n                    closeMask();\n                })\n                .on(actionPrefix + 'toggle', function () {\n                    if (isEnabled()) {\n                        toggleMask();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            this.compoundMask.destroy();\n            shortcut.remove('.' + this.getName());\n        },\n\n        /**\n         * Enable the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disable the button\n         */\n        disable: function disable() {\n            this.button.disable();\n        },\n\n        /**\n         * Show the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hide the button\n         */\n        hide: function hide() {\n            this.button.hide();\n        }\n    });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"magnifier\\\">\\n    <div class=\\\"level\\\">\";\n  if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    <div class=\\\"overlay\\\"></div>\\n    <div class=\\\"inner\\\"></div>\\n    <div class=\\\"controls close\\\">\\n        <a href=\\\"#\\\" class=\\\"control\\\" data-control=\\\"zoomIn\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify more\", options) : helperMissing.call(depth0, \"__\", \"Magnify more\", options)))\n    + \"\\\"><span class=\\\"icon-add\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"control\\\"  data-control=\\\"zoomOut\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify less\", options) : helperMissing.call(depth0, \"__\", \"Magnify less\", options)))\n    + \"\\\"><span class=\\\"icon-remove\\\"></span></a>\\n        <a href=\\\"#\\\" class=\\\"closeMagnifier\\\" data-control=\\\"closeMagnifier\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close Magnifier\", options) : helperMissing.call(depth0, \"__\", \"Close Magnifier\", options)))\n    + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel',[\n    'jquery',\n    'lodash',\n    'ui/component',\n    'tpl!taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel',\n    'ui/dynamicComponent',\n], function ($, _, component, magnifierPanelTpl, dynamicComponent) {\n    'use strict';\n\n    /**\n     * The screen pixel ratio\n     * @type {Number}\n     */\n    var screenRatio = window.screen.width / window.screen.height;\n\n    /**\n     * Standard debounce delay for heavy process\n     * @type {Number}\n     */\n    var debounceDelay = 50;\n\n    /**\n     * Standard scrolling throttling for the scrolling\n     * It can be lower than the debounce delay as it is lighter in process and it improves the user experience\n     * @type {Number}\n     */\n    var scrollingDelay = 20;\n\n    /**\n     * The default base size\n     * @type {Number}\n     */\n    var defaultBaseSize = 116;\n\n    /**\n     * The minimum zoom level\n     * @type {Number}\n     */\n    var defaultLevelMin = 2;\n\n    /**\n     * The maximum zoom level\n     * @type {Number}\n     */\n    var defaultLevelMax = 8;\n\n    /**\n     * The default zoom level\n     * @type {Number}\n     */\n    var defaultLevel = defaultLevelMin;\n\n    /**\n     * Some default values\n     * @type {Object}\n     */\n    var defaultConfig = {\n        level: defaultLevel,\n        levelMin: defaultLevelMin,\n        levelMax: defaultLevelMax,\n        levelStep: .5,\n        baseSize: defaultBaseSize,\n        maxRatio: .5,\n    };\n\n    var dynamicComponentDefaultConfig = {\n        draggable: true,\n        resizable: true,\n        preserveAspectRatio: false,\n        width: defaultBaseSize * defaultLevel,\n        height: defaultBaseSize * defaultLevel / screenRatio,\n        minWidth: defaultBaseSize * defaultLevelMin,\n        minHeight: defaultBaseSize * defaultLevelMin / screenRatio,\n        stackingScope: 'test-runner',\n        top: 50,\n        left: 10,\n    };\n\n    /**\n     * Creates a magnifier panel component\n     * @param {Object} config\n     * @param {Number} [config.level] - The default zoom level\n     * @param {Number} [config.levelMin] - The minimum allowed zoom level\n     * @param {Number} [config.levelMax] - The maximum allowed zoom level\n     * @param {Number} [config.levelStep] - The level increment applied when using the controls + and -\n     * @param {Number} [config.baseSize] - The base size used to assign the width and the height according to the zoom level\n     * @param {Number} [config.maxRatio] - The ratio for the maximum size regarding the size of the window\n     * @returns {magnifierPanel} the component (initialized)\n     */\n    function magnifierPanelFactory(config) {\n        var initConfig = _.defaults(config || {}, defaultConfig);\n        var zoomLevelMin = parseFloat(initConfig.levelMin);\n        var zoomLevelMax = parseFloat(initConfig.levelMax);\n        var zoomLevelStep = parseFloat(initConfig.levelStep);\n        var zoomLevel = adjustZoomLevel(initConfig.level);\n        var maxRatio = parseFloat(initConfig.maxRatio);\n        var $initTarget = null;\n        var controls = null;\n        var observer = null;\n        var targetWidth, targetHeight, dx, dy;\n        var scrolling = [];\n        var dynamicComponentInstance;\n\n        var dynamicComponentConfig = _.defaults(config ? config.component || {} : {}, dynamicComponentDefaultConfig);\n\n        /**\n         * @typedef {Object} magnifierPanel\n         */\n        var magnifierPanel = component({\n            /**\n             * Gets the current zoom level\n             * @returns {Number}\n             */\n            getZoomLevel: function getZoomLevel() {\n                return zoomLevel;\n            },\n\n            /**\n             * Gets the targeted content the magnifier will zoom\n             * @returns {jQuery}\n             */\n            getTarget: function getTarget() {\n                return controls && controls.$target;\n            },\n\n            /**\n             * Sets the targeted content the magnifier will zoom\n             * @param {jQuery} $newTarget\n             * @returns {magnifierPanel}\n             * @fires targetchange\n             * @fires update\n             */\n            setTarget: function setTarget($newTarget) {\n                if (controls) {\n                    controls.$target = $newTarget;\n                    controls.$viewTarget = null;\n\n                    setScrollingListener();\n\n                    /**\n                     * @event magnifierPanel#targetchange\n                     * @param {jQuery} $target\n                     */\n                    this.trigger('targetchange', controls.$target);\n\n                    this.update();\n                } else {\n                    $initTarget = $newTarget;\n                }\n\n                return this;\n            },\n\n            /**\n             * Sets the zoom level of the magnifier\n             * @param {Number} level\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomTo: function zoomTo(level) {\n                if (level && _.isFinite(level)) {\n                    zoomLevel = adjustZoomLevel(level);\n                }\n\n                applyZoomLevel();\n                showZoomLevel();\n                updateMaxSize();\n                updateZoom();\n\n                /**\n                 * @event magnifierPanel#zoom\n                 * @param {Number} zoomLevel\n                 */\n                this.trigger('zoom', zoomLevel);\n\n                return this;\n            },\n\n            /**\n             * Increments the zoom level of the magnifier\n             * @param {Number} step\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomBy: function zoomBy(step) {\n                if (step && _.isFinite(step)) {\n                    this.zoomTo(zoomLevel + parseFloat(step));\n                }\n                return this;\n            },\n\n            /**\n             * Zoom-in using the configured level step\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomIn: function zoomIn() {\n                return this.zoomBy(zoomLevelStep);\n            },\n\n            /**\n             * Zoom-out using the configured level step\n             * @returns {magnifierPanel}\n             * @fires zoom\n             */\n            zoomOut: function zoomOut() {\n                return this.zoomBy(-zoomLevelStep);\n            },\n\n            /**\n             * Places the magnifier sight at a particular position on the target content\n             * @param {Number} x\n             * @param {Number} y\n             * @returns {magnifierPanel}\n             */\n            zoomAt: function zoomAt(x, y) {\n                var position;\n                if (controls) {\n                    position = this.translate(x, y);\n                    controls.$inner.css({\n                        top: -position.top,\n                        left: -position.left\n                    });\n                }\n            },\n\n            /**\n             * Translates screen coordinates to zoom coordinates\n             * @param {Number} x\n             * @param {Number} y\n             * @returns {Object}\n             */\n            translate: function translate(x, y) {\n                return {\n                    top: translateMagnifier(y, targetHeight, dynamicComponentInstance.config.height),\n                    left: translateMagnifier(x, targetWidth, dynamicComponentInstance.config.width)\n                };\n            },\n\n            /**\n             * Updates the magnifier with the target content\n             * @returns {magnifierPanel}\n             * @fires update\n             */\n            update: function update() {\n                if (controls && controls.$target) {\n                    controls.$clone = controls.$target.clone().removeAttr('id');\n                    controls.$clone.find('iframe').remove();\n                    controls.$clone.find('[name],[id],[data-serial]').removeAttr('name id data-serial');\n                    controls.$inner.empty().append(controls.$clone);\n\n                    applySize();\n                    applyZoomLevel();\n                    updateZoom();\n                    updateMaxSize();\n                    applyScrolling();\n\n                    /**\n                     * @event magnifierPanel#update\n                     */\n                    this.trigger('update');\n                }\n\n                return this;\n            }\n        }, defaultConfig);\n\n        /**\n         * Will update the magnifier content with the actual content\n         * @type {Function}\n         */\n        var updateMagnifier = _.debounce(_.bind(magnifierPanel.update, magnifierPanel), debounceDelay);\n\n        /**\n         * Will update the magnifier content with the scrolling position\n         * @type {Function}\n         */\n        var scrollingListenerCallback = _.throttle(function (event) {\n\n            var $target = $(event.target);\n            var scrollingTop = event.target.scrollTop;\n            var scrollLeft = event.target.scrollLeft;\n            var scrollId, scrollData;\n\n            //check if the element is already known as a scrollable element\n            if (controls && controls.$clone && $target.data('magnifier-scroll')) {\n\n                scrollId = $target.data('magnifier-scroll');\n                scrollData = _.find(scrolling, {id: scrollId});\n                scrollData.scrollTop = scrollingTop;\n                scrollData.scrollLeft = scrollLeft;\n\n                //if in clone, scroll it\n                scrollInClone(scrollData);\n\n            } else {\n                //if the element is not yet identified as a scrollable element, tag it and register its id\n                scrollId = _.uniqueId('scrolling_');\n                $target.attr('data-magnifier-scroll', scrollId);\n                scrolling.push({\n                    id: scrollId,\n                    scrollTop: scrollingTop,\n                    scrollLeft: scrollLeft\n                });\n\n                //update all\n                magnifierPanel.update();\n            }\n\n        }, scrollingDelay);\n\n        /**\n         * Scroll an element in the clone\n         *\n         * @param {Object} scrollData\n         * @param {String} scrollData.id\n         * @param {Number} [scrollData.scrollTop]\n         * @param {Number} [scrollData.scrollLeft]\n         */\n        function scrollInClone(scrollData) {\n            var $clonedTarget;\n            if (controls && controls.$clone && scrollData && scrollData.id) {\n                $clonedTarget = controls.$clone.find('[data-magnifier-scroll=' + scrollData.id + ']');\n                if ($clonedTarget.length) {\n                    if (_.isNumber(scrollData.scrollTop)) {\n                        $clonedTarget[0].scrollTop = scrollData.scrollTop;\n                    }\n                    if (_.isNumber(scrollData.scrollLeft)) {\n                        $clonedTarget[0].scrollLeft = scrollData.scrollLeft;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Initializes the listener for scrolling event and transfer the scrolling\n         */\n        function setScrollingListener() {\n            window.addEventListener('scroll', scrollingListenerCallback, true);\n        }\n\n        /**\n         * Stops the listener for scrolling event\n         */\n        function removeScrollingListener() {\n            window.removeEventListener('scroll', scrollingListenerCallback, true);\n        }\n\n        /**\n         * Applies scrolling programmatically from the recorded list of elements to be scrolled\n         */\n        function applyScrolling() {\n            _.forEach(scrolling, scrollInClone);\n        }\n\n        /**\n         * Adjusts a provided zoom level to fit the constraints\n         * @param {Number|String} level\n         * @returns {Number}\n         */\n        function adjustZoomLevel(level) {\n            return Math.max(zoomLevelMin, Math.min(parseFloat(level), zoomLevelMax));\n        }\n\n        /**\n         * Applies the zoom level to the content\n         */\n        function applyZoomLevel() {\n            if (controls) {\n                controls.$inner.css({\n                    transform: 'scale(' + zoomLevel + ')'\n                });\n            }\n        }\n\n        /**\n         * Shows the zoom level using a CSS animation\n         */\n        function showZoomLevel() {\n            var $newZoomLevel;\n            if (controls) {\n                $newZoomLevel = controls.$zoomLevel.clone(true).html(zoomLevel);\n                controls.$zoomLevel.before($newZoomLevel).remove();\n                controls.$zoomLevel = $newZoomLevel;\n            }\n        }\n\n        /**\n         * Updates the max size according to the window's size\n         */\n        function updateMaxSize() {\n            if (!dynamicComponentInstance)\n            {\n                return;\n            }\n\n            var $window = $(window);\n            dynamicComponentInstance.config.maxWidth = $window.width() * maxRatio;\n            dynamicComponentInstance.config.maxHeight = $window.height() * maxRatio;\n        }\n\n        /**\n         * Forwards the size of the target to the cloned content\n         */\n        function applySize() {\n            if (controls && controls.$clone) {\n                targetWidth = controls.$target.width();\n                targetHeight = controls.$target.height();\n\n                controls.$clone\n                    .width(targetWidth)\n                    .height(targetHeight);\n            }\n        }\n\n        /**\n         * Place the zoom sight at the right place inside the magnifier\n         */\n        function updateZoom() {\n            var position;\n            if (controls && controls.$target) {\n                position = dynamicComponentInstance.position;\n\n                position.x += dx + controls.$target.scrollLeft();\n                position.y += dy + controls.$target.scrollTop();\n\n                magnifierPanel.zoomAt(position.x, position.y);\n            }\n        }\n\n        /**\n         * Creates the observer that will react to DOM changes to update the magnifier\n         */\n        function createObserver() {\n            observer = new window.MutationObserver(updateMagnifier);\n        }\n\n        /**\n         * Starts to observe the DOM of the magnifier target\n         */\n        function startObserver() {\n            if (controls && controls.$target) {\n                observer.observe(controls.$target.get(0), {\n                    childList: true,        // Set to true if additions and removals of the target node's child elements (including text nodes) are to be observed.\n                    attributes: true,       // Set to true if mutations to target's attributes are to be observed.\n                    characterData: true,    // Set to true if mutations to target's data are to be observed.\n                    subtree: true           // Set to true if mutations to target and target's descendants are to be observed.\n                });\n            }\n            setScrollingListener();\n        }\n\n        /**\n         * Stops to observe the DOM of the magnifier target\n         */\n        function stopObserver() {\n            observer.disconnect();\n            removeScrollingListener();\n        }\n\n        /**\n         * Translates a screen coordinate into the magnifier\n         * @param {Number} coordinate\n         * @param {Number} actualSize\n         * @param {Number} magnifierSize\n         * @returns {Number}\n         */\n        function translateMagnifier(coordinate, actualSize, magnifierSize) {\n            var delta = 0;\n            var ratio = zoomLevel;\n\n            if (actualSize) {\n                delta = ((actualSize * (zoomLevel - 1)) / 2);\n                ratio = (actualSize * zoomLevel - magnifierSize) / (actualSize - magnifierSize);\n            }\n\n            return coordinate * ratio - delta;\n        }\n\n        /**\n         * Gets the top element from a particular absolute point.\n         * @param {Number} x - the page X-coordinate of the point\n         * @param {Number} y - the page Y-coordinate of the point\n         * @returns {HTMLElement}\n         */\n        function getElementFromPoint(x, y) {\n            var el;\n\n            // this is done to prevent working with undefined coordinates\n            x = x || 0;\n            y = y || 0;\n\n            if (controls) {\n                controls.$overlay.addClass('hidden');\n            }\n\n            el = document.elementFromPoint(x, y);\n\n            if (controls) {\n                controls.$overlay.removeClass('hidden');\n            }\n\n            return el;\n        }\n\n        /**\n         * Find the related node in the target. The both trees must have the same content.\n         * @param {jQuery|HTMLElement} node - the node for which find a relation\n         * @param {jQuery|HTMLElement} root - the root of the tree that contains the actual node\n         * @param {jQuery|HTMLElement} target - the root of the tree that could contains the related node\n         * @returns {jQuery}\n         */\n        function findSourceNode(node, root, target) {\n            var $node = $(node);\n            var $root = $(root);\n            var $target = $(target);\n            var indexes = [$node.index()];\n\n            // compute map of node's parents indexes\n            $node.parents().each(function () {\n                var $this = $(this);\n                if (!$this.is($root)) {\n                    indexes.push($this.index());\n                } else {\n                    return false;\n                }\n            });\n\n            // the last index is related to the root, so ignore it\n            indexes.pop();\n\n            // now try to find the same node using the path provided by the indexes map\n            if (indexes.length) {\n                $node = $target;\n                _.forEachRight(indexes, function (index) {\n                    $node = $node.children().eq(index);\n                    if (!$node.length) {\n                        return false;\n                    }\n                });\n            } else {\n                // nothing to search for...\n                $node = $();\n            }\n            return $node;\n        }\n\n        dynamicComponentInstance = dynamicComponent({})\n            .on('rendercontent', function ($content) {\n                var dynamicComponentContext = this;\n                var $element = this.getElement();\n\n                $element.addClass('magnifier-container');\n\n                magnifierPanel\n                    .setTemplate(magnifierPanelTpl)\n                    .on('render', function () {\n                        var self = this;\n                        var $component = this.getElement();\n\n                        this.setState('hidden', true);\n\n                        // compute the padding of the magnifier content\n                        dx = ($component.outerWidth() - $component.width()) / 2;\n                        dy = ($component.outerHeight() - $component.height()) / 2;\n\n                        controls = {\n                            $target: $initTarget,\n                            $inner: $('.inner', $component),\n                            $zoomLevel: $('.level', $component),\n                            $overlay: $('.overlay', $component)\n                        };\n                        $initTarget = null;\n\n                        // click on zoom-out control\n                        $component.on('click touchstart', '.control[data-control=\"zoomOut\"]', function (event) {\n                            event.preventDefault();\n\n                            self.zoomOut();\n                        });\n\n                        // click on zoom-in control\n                        $component.on('click touchstart', '.control[data-control=\"zoomIn\"]', function (event) {\n                            event.preventDefault();\n\n                            self.zoomIn();\n                        });\n\n                        // click on close controls\n                        $component.on('click touchstart', '.closeMagnifier', function (event) {\n                            event.preventDefault();\n                            self.hide();\n                            self.trigger('close');\n                        });\n\n                        // interact through the magnifier glass with the zoomed content\n                        $component.on('click touchstart', '.overlay', function (event) {\n                            findSourceNode(\n                                getElementFromPoint(event.pageX, event.pageY),\n                                controls.$inner,\n                                controls.$target\n                            ).click().focus();\n                        });\n\n                        createObserver();\n                        updateMaxSize();\n                        applyZoomLevel();\n                    })\n                    .on('show', function () {\n                        updateMagnifier();\n                        startObserver();\n\n                        dynamicComponentContext.show();\n                    })\n                    .on('hide', function () {\n                        stopObserver();\n\n                        dynamicComponentContext.hide();\n                    })\n                    .on('destroy', function () {\n                        stopObserver();\n                        $initTarget = null;\n                        controls = null;\n                        observer = null;\n\n                        dynamicComponentContext.destroy();\n                    })\n                    .init(initConfig)\n                    .render($content);\n            })\n            .on('down move resize', function () {\n                updateZoom();\n            })\n            .on('resize', function () {\n                updateMaxSize();\n            })\n            .init(dynamicComponentConfig);\n\n        return magnifierPanel;\n    }\n\n    return magnifierPanelFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/runner/plugins/tools/magnifier/magnifier',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoTests/runner/plugin',\n    'ui/hider',\n    'util/shortcut',\n    'util/namespace',\n    'taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel'\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, magnifierPanelFactory) {\n    'use strict';\n\n    /**\n     * The public name of the plugin\n     * @type {String}\n     */\n    var pluginName = 'magnifier';\n\n    /**\n     * The prefix of actions triggered through the event loop\n     * @type {String}\n     */\n    var actionPrefix = 'tool-' + pluginName + '-';\n\n    /**\n     * Some default options for the plugin\n     * @type {Object}\n     */\n    var defaultOptions = {\n        zoomMin: 2,    // Smallest magnification factor\n        zoomMax: 8,    // Biggest magnification factor\n        zoomStep: .5   // Increment between min an max\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name: pluginName,\n\n        /**\n         * Initializes the plugin (called during runner's init)\n         */\n        init: function init() {\n            var self = this;\n\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {}, defaultOptions);\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\n            var magnifierPanel = null;\n\n            /**\n             * Creates the magnifier panel on demand\n             * @returns {magnifierPanel}\n             * @fires plugin-magnifier-create.magnifier\n             */\n            function getMagnifierPanel() {\n                var $container;\n\n                if (!magnifierPanel) {\n                    $container = testRunner.getAreaBroker().getContainer();\n\n                    magnifierPanel = magnifierPanelFactory(\n                        {\n                            levelMin: pluginConfig.zoomMin,\n                            levelMax: pluginConfig.zoomMax,\n                            levelStep: pluginConfig.zoomStep,\n                            component:{\n                                renderTo: $container.parent(),\n                                draggableContainer: $container.parent(),\n                            }\n                        }\n                    )\n                        .on('show', function () {\n                            /**\n                             * @event plugin-magnifier-show.magnifier\n                             */\n                            self.trigger('magnifier-show');\n                        })\n                        .on('hide', function () {\n                            /**\n                             * @event plugin-magnifier-hide.magnifier\n                             */\n                            self.trigger('magnifier-hide');\n                        })\n                        .on('zoom', function (level) {\n                            /**\n                             * @event plugin-magnifier-zoom.magnifier\n                             * @param {Number} zoomLevel\n                             */\n                            self.trigger('magnifier-zoom', level);\n                        })\n                        .on('close', function () {\n                            hideMagnifier();\n                        })\n                        .setTarget($container);\n\n                    /**\n                     * @event plugin-magnifier-create.magnifier\n                     */\n                    self.trigger('magnifier-create');\n                }\n                return magnifierPanel;\n            }\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isEnabled() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-magnifier\n                return !!options.magnifier;\n            }\n\n            /**\n             * Shows/hides the plugin GUI according to context\n             */\n            function togglePlugin() {\n                if (isEnabled()) {\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            /**\n             * Shows/hides the magnifier\n             */\n            function toggleMagnifier() {\n                if (self.getState('enabled')) {\n                    if (self.getState('active')) {\n                        hideMagnifier();\n                    } else {\n                        showMagnifier();\n                    }\n                }\n            }\n\n            /**\n             * Opens the magnifier panel\n             * @fires plugin-magnifier-show.magnifier\n             */\n            function showMagnifier() {\n                getMagnifierPanel();\n\n                if (magnifierPanel.is('hidden')) {\n                    magnifierPanel.show();\n                }\n                self.button.turnOn();\n                testRunner.trigger('plugin-open.' + pluginName);\n\n                self.setState('active', true);\n            }\n\n            /**\n             * Closes the magnifier panel\n             * @fires plugin-magnifier-hide.magnifier\n             */\n            function hideMagnifier() {\n                self.setState('active', false);\n\n                self.button.turnOff();\n                testRunner.trigger('plugin-close.' + pluginName);\n\n                if (magnifierPanel && !magnifierPanel.is('hidden')) {\n                    magnifierPanel.hide();\n                }\n            }\n\n            // build element\n            this.button = this.getAreaBroker().getToolbox().createEntry({\n                control: 'magnify',\n                title: __('Displays a customisable magnifier'),\n                text: __('Magnifying Glass'),\n                icon: 'find'\n            });\n\n            // attach behavior\n            this.button.on('click', function (event) {\n                event.preventDefault();\n                testRunner.trigger(actionPrefix + 'toggle');\n            });\n\n\n            // handle the plugin's shortcuts\n            if (testConfig.allowShortcuts) {\n                _.forEach(pluginShortcuts, function (command, key) {\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\n                        // just fire the action using the event loop\n                        testRunner.trigger(actionPrefix + key);\n                    }, {\n                        avoidInput: true\n                    });\n                });\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n            // runner life cycle\n                .on('loaditem', function () {\n                    togglePlugin();\n                    self.disable();\n                })\n                .on('renderitem', function () {\n                    if (magnifierPanel) {\n                        magnifierPanel\n                            .update()\n                            .zoomTo(pluginConfig.zoomMin);\n                    }\n                })\n                .on('enabletools renderitem', function () {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function () {\n                    if (self.getState('active')) {\n                        hideMagnifier();\n                    }\n                    self.disable();\n                })\n                .on('destroy', function () {\n                    if (magnifierPanel) {\n                        magnifierPanel.destroy();\n                    }\n                    magnifierPanel = null;\n                })\n\n                // commands that controls the magnifier\n                .on(actionPrefix + 'toggle', function () {\n                    if (isEnabled()) {\n                        toggleMagnifier();\n                    }\n                })\n                .on(actionPrefix + 'in', function () {\n                    if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n                        getMagnifierPanel().zoomIn();\n                    }\n                })\n                .on(actionPrefix + 'out', function () {\n                    if (isEnabled() && self.getState('enabled') && self.getState('active')) {\n                        getMagnifierPanel().zoomOut();\n                    }\n                })\n                .on(actionPrefix + 'close', function () {\n                    if (self.getState('active')) {\n                        hideMagnifier();\n                    }\n                });\n        },\n\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy: function destroy() {\n            shortcut.remove('.' + pluginName);\n        },\n\n        /**\n         * Enables the button\n         */\n        enable: function enable() {\n            this.button.enable();\n        },\n\n        /**\n         * Disables the button\n         */\n        disable: function disable() {\n            this.button.disable();\n        },\n\n        /**\n         * Shows the button\n         */\n        show: function show() {\n            this.button.show();\n        },\n\n        /**\n         * Hides the button\n         */\n        hide: function hide() {\n            this.button.hide();\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2019  (original work) Open Assessment Technologies SA;\n *\n * @author dieter <dieter@taotesting.com>\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n */\n\ndefine('taoQtiTest/runner/plugins/tools/zoom',[\n    'jquery',\n    'i18n',\n    'ui/hider',\n    'ui/transformer',\n    'util/shortcut',\n    'util/namespace',\n    'taoTests/runner/plugin'\n], function ($, __, hider, transformer, shortcut, namespaceHelper, pluginFactory){\n    'use strict';\n\n    /**\n     * The standard zoom level, in percentage\n     * @type {Number}\n     */\n    var standard = 100;\n\n    /**\n     * Zoom-In/Zoom-Out steps\n     * @type {Number}\n     */\n    var increment = 10;\n\n    /**\n     * The zoom boundaries, in percentage\n     * @type {Object}\n     */\n    var threshold = {\n        lower: 10,\n        upper: 200\n    };\n\n    /**\n     * Sets the zoom level\n     * @param {jQuery} $target\n     * @param {Number} level - Zoom percentage\n     */\n    var _setZoomLevel = function($target, level) {\n        var $parent = $target.parent();\n        var newScale = level / standard;\n\n        var isOverZoom = $parent.outerWidth(true) < $target.width() * newScale;\n\n        if(isOverZoom){\n            transformer.setTransformOrigin($target, '0 0');\n            $parent.css('margin-left', '0');\n        } else {\n            transformer.setTransformOrigin($target, '50% 0');\n            $parent.css('margin-left', '');\n        }\n\n        transformer.scale($target, newScale);\n    };\n\n    /**\n     * Restores the standard zoom level\n     * @param {jQuery} $target\n     */\n    var _resetZoom = function($target) {\n        transformer.reset($target);\n    };\n\n    /**\n     * Forces a browser repaint\n     * Solution from http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes?answertab=votes#tab-top\n     * @param {jQuery} $target\n     */\n    var forceRepaint = function($target) {\n        var sel = $target[0];\n        if (sel) {\n            sel.style.display = 'none';\n            sel.offsetHeight; // no need to store this anywhere, the reference is enough\n            sel.style.display = '';\n        }\n    };\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n\n        name : 'zoom',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init : function init(){\n            var self = this;\n            var testRunner = this.getTestRunner();\n            var testData = testRunner.getTestData() || {};\n            var testConfig = testData.config || {};\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n\n\n            /**\n             * Checks if the plugin is currently available\n             * @returns {Boolean}\n             */\n            function isConfigured() {\n                var context = testRunner.getTestContext() || {},\n                    options = context.options || {};\n                //to be activated with the special category x-tao-option-zoom\n                return !!options.zoom;\n            }\n\n            /**\n             * Is zoom activated ? if not, then we hide the plugin\n             */\n            function togglePlugin() {\n                if (isConfigured()) {//allow zoom\n                    self.show();\n                } else {\n                    self.hide();\n                }\n            }\n\n            function zoomAction(dir) {\n\n                var inc = increment * dir;\n                var el, sx, sy, before, after;\n\n                if (self.$zoomTarget) {\n                    el = self.$zoomTarget[0];\n\n                    before = el.getBoundingClientRect();\n\n                    sx = self.$container.scrollLeft();\n                    sy = self.$container.scrollTop();\n\n                    self.zoom = Math.max(threshold.lower, Math.min(threshold.upper, self.zoom + inc));\n\n                    if (self.zoom === standard) {\n                        _resetZoom(self.$zoomTarget);\n                    } else {\n                        _setZoomLevel(self.$zoomTarget, self.zoom);\n                    }\n\n                    // force a browser repaint to fix a scrollbar issue with WebKit\n                    forceRepaint(self.$zoomTarget);\n\n                    after = el.getBoundingClientRect();\n\n                    sx = Math.max(0, sx + (after.width - before.width) / 2);\n                    sy = Math.max(0, sy + (after.height - before.height) / 2);\n\n                    self.$container.scrollLeft(sx).scrollTop(sy);\n                }\n            }\n\n            function zoomIn() {\n                if (self.getState('enabled') !== false) {\n                    zoomAction(1);\n                }\n            }\n\n            function zoomOut() {\n                if (self.getState('enabled') !== false) {\n                    zoomAction(-1);\n                }\n            }\n\n            //build element (detached)\n            this.buttonZoomOut = this.getAreaBroker().getToolbox().createEntry({\n                control : 'zoomOut',\n                title : __('Zoom out'),\n                icon : 'remove'\n            });\n\n            this.buttonZoomIn = this.getAreaBroker().getToolbox().createEntry({\n                control : 'zoomIn',\n                title : __('Zoom in'),\n                icon : 'add'\n            });\n\n            //attach behavior\n            this.buttonZoomIn.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger('tool-zoomin');\n            });\n\n            //attach behavior\n            this.buttonZoomOut.on('click', function (e){\n                e.preventDefault();\n                testRunner.trigger('tool-zoomout');\n            });\n\n            if (testConfig.allowShortcuts) {\n                if (pluginShortcuts.in) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.in, this.getName(), true), function () {\n                        testRunner.trigger('tool-zoomin');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n\n                if (pluginShortcuts.out) {\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.out, this.getName(), true), function () {\n                        testRunner.trigger('tool-zoomout');\n                    }, {\n                        avoidInput: true\n                    });\n                }\n            }\n\n            //start disabled\n            togglePlugin();\n            this.disable();\n\n            //update plugin state based on changes\n            testRunner\n                .on('loaditem', function (){\n                    self.zoom = standard;\n\n                    togglePlugin();\n                    self.disable();\n                })\n                .on('renderitem', function (){\n                    self.$container = $('#qti-content');\n                    self.$zoomTarget = $('.qti-item');\n\n                    self.enable();\n                })\n                .on('enabletools', function() {\n                    self.enable();\n                })\n                .on('disabletools unloaditem', function (){\n                    self.disable();\n                })\n                .on('tool-zoomin', zoomIn)\n                .on('tool-zoomout', zoomOut);\n        },\n        /**\n         * Called during the runner's destroy phase\n         */\n        destroy : function destroy(){\n            shortcut.remove('.' + this.getName());\n        },\n        /**\n         * Enable the button\n         */\n        enable : function enable(){\n            this.buttonZoomIn.enable();\n            this.buttonZoomOut.enable();\n        },\n        /**\n         * Disable the button\n         */\n        disable : function disable(){\n            this.buttonZoomIn.disable();\n            this.buttonZoomOut.disable();\n        },\n        /**\n         * Show the button\n         */\n        show : function show(){\n            this.buttonZoomIn.show();\n            this.buttonZoomOut.show();\n        },\n        /**\n         * Hide the button\n         */\n        hide : function hide(){\n            this.buttonZoomIn.hide();\n            this.buttonZoomOut.hide();\n        }\n    });\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.test-runner-scope .content-wrapper p.key-navigation-group,.test-runner-scope .content-wrapper div.key-navigation-group{padding:5px !important}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction){border-width:1px !important;border-style:solid;border-color:transparent}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction).focusin{border-color:#0e5d91 !important;outline:none}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction).qti-interaction .qti-choice.key-navigation-highlight{background:#e7eff4 !important}.test-runner-scope .content-wrapper span.key-navigation-group{border:none !important}.test-runner-scope .content-wrapper span.key-navigation-group.focusin{outline:solid #0e5d91 1px !important;outline-offset:1px}.test-runner-scope .test-sidebar .key-navigation-group.focusin{background:#e7eff4}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight .qti-navigator-tab{border-width:2px}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus{outline:none}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus .qti-navigator-tab{border-top-color:#222 !important;border-left-color:#222 !important;border-right-color:#222 !important}.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight{padding-left:8px;border-left:solid 2px #222}.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight .key-navigation-highlight:focus{outline:none}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group.focusin{-webkit-box-shadow:0 0 6px 2px #3e7da7;-moz-box-shadow:0 0 6px 2px #3e7da7;-ms-box-shadow:0 0 6px 2px #3e7da7;-o-box-shadow:0 0 6px 2px #3e7da7;box-shadow:0 0 6px 2px #3e7da7}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus{margin-bottom:0;border-bottom-color:#e7eff4 !important;outline:none}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus.active{border-bottom-color:transparent !important;background:#e7eff4 !important}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus:not(.active):not(:active) .li-inner{color:#e7eff4}header .settings-menu .key-navigation-group{padding-right:5px}header .settings-menu .key-navigation-group.focusin{background-color:rgba(14,93,145,0.5);padding-bottom:10px}header .settings-menu .key-navigation-highlight:focus{height:54px;color:white !important;border-bottom:solid 2px white !important}\\n\\n/*# sourceMappingURL=key-navigation.css.map */.countdown{opacity:0;position:relative;display:inline-block;overflow:hidden;text-align:center;vertical-align:top;line-height:1.2;padding:0 20px;margin-top:-1px;height:100%}.countdown.rendered{opacity:1;-webkit-transition:opacity, 300ms, linear, 0s;-moz-transition:opacity, 300ms, linear, 0s;-ms-transition:opacity, 300ms, linear, 0s;-o-transition:opacity, 300ms, linear, 0s;transition:opacity, 300ms, linear, 0s}.countdown .label{max-width:130px;display:block;font-size:12px;font-size:1.2rem}\\n\\n/*# sourceMappingURL=countdown.css.map */.timer-box{opacity:0;padding-top:0;white-space:nowrap;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}.timer-box.rendered{opacity:1;-webkit-transition:opacity, 300ms, linear, 0s;-moz-transition:opacity, 300ms, linear, 0s;-ms-transition:opacity, 300ms, linear, 0s;-o-transition:opacity, 300ms, linear, 0s;transition:opacity, 300ms, linear, 0s}.timer-box .timer-toggler{text-decoration:none;color:#fff;line-height:1.3;opacity:.68;padding:8px 20px;position:relative;top:-1px;left:20px;z-index:2;-webkit-transition:opacity, .5s, ease-out, 0s;-moz-transition:opacity, .5s, ease-out, 0s;-ms-transition:opacity, .5s, ease-out, 0s;-o-transition:opacity, .5s, ease-out, 0s;transition:opacity, .5s, ease-out, 0s}.timer-box .timer-toggler:hover,.timer-box .timer-toggler:active,.timer-box .timer-toggler:focus{outline:unset}.timer-box .timer-toggler:hover{opacity:.93;-webkit-transition:opacity, .5s, ease-out, 0s;-moz-transition:opacity, .5s, ease-out, 0s;-ms-transition:opacity, .5s, ease-out, 0s;-o-transition:opacity, .5s, ease-out, 0s;transition:opacity, .5s, ease-out, 0s}.timer-box.zen .timer-toggler{opacity:.93;-webkit-transition:opacity, .5s, ease-out, 0s;-moz-transition:opacity, .5s, ease-out, 0s;-ms-transition:opacity, .5s, ease-out, 0s;-o-transition:opacity, .5s, ease-out, 0s;transition:opacity, .5s, ease-out, 0s}.timer-box.zen .countdown .time{opacity:0;-webkit-transition:opacity, 1s, ease-out, 0s;-moz-transition:opacity, 1s, ease-out, 0s;-ms-transition:opacity, 1s, ease-out, 0s;-o-transition:opacity, 1s, ease-out, 0s;transition:opacity, 1s, ease-out, 0s}.timer-box .countdown::before{content:\\' \\';background:rgba(255,255,255,0.3);width:1px;height:20px;position:absolute;left:0;top:5px}.timer-box .countdown:first-child::before{content:none}.timer-box .countdown[data-scope=test][data-type=min]{-ms-flex-order:5;-webkit-order:5;order:5}.timer-box .countdown[data-scope=test]{-ms-flex-order:10;-webkit-order:10;order:10}.timer-box .countdown[data-scope=testPart][data-type=min]{-ms-flex-order:15;-webkit-order:15;order:15}.timer-box .countdown[data-scope=testPart]{-ms-flex-order:20;-webkit-order:20;order:20}.timer-box .countdown[data-scope=section][data-type=min]{-ms-flex-order:25;-webkit-order:25;order:25}.timer-box .countdown[data-scope=section]{-ms-flex-order:30;-webkit-order:30;order:30}.timer-box .countdown[data-scope=item][data-type=min]{-ms-flex-order:35;-webkit-order:35;order:35}.timer-box .countdown[data-scope=item]{-ms-flex-order:40;-webkit-order:40;order:40}\\n\\n/*# sourceMappingURL=timerbox.css.map */');\n","\ndefine(\"taoQtiTest/loader/testPlugins.bundle\", function(){});\n"]}