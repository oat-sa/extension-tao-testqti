{"version":3,"file":"routes.js","sources":["routes.js","creator/templates/testpart!tpl","creator/templates/section!tpl","creator/templates/rubricblock!tpl","creator/templates/itemref!tpl","creator/templates/item!tpl","tpl!taoQtiTest/controller/creator/templates/test-props","tpl!taoQtiTest/controller/creator/templates/testpart-props","tpl!taoQtiTest/controller/creator/templates/section-props","tpl!taoQtiTest/controller/creator/templates/itemref-props","tpl!taoQtiTest/controller/creator/templates/rubricblock-props","creator/templates/index.js","creator/views/item.js","creator/views/property.js","creator/views/actions.js","creator/views/itemref.js","../../taoQtiItem/qtiItem/core/qtiClasses.js","../../taoQtiItem/qtiCreator/model/qtiClasses.js","../../taoQtiItem/qtiItem/helper/util.js","../../taoQtiItem/qtiItem/helper/rendererConfig.js","../../taoQtiItem/qtiItem/core/Element.js","../../taoQtiItem/qtiItem/helper/interactionHelper.js","../../taoQtiItem/qtiRunner/core/Renderer.js","../../taoQtiItem/qtiDefaultRenderer/renderers/config.js","../../taoQtiItem/qtiCommonRenderer/renderers/config.js","../../taoQtiItem/qtiCreator/renderers/config.js","../../taoQtiItem/qtiCreator/renderers/Renderer.js","../../taoQtiItem/qtiCreator/helper/creatorRenderer.js","../../taoQtiItem/qtiXmlRenderer/renderers/config.js","../../taoQtiItem/qtiXmlRenderer/renderers/Renderer.js","../../taoQtiItem/qtiItem/core/Loader.js","../../taoQtiItem/qtiCreator/helper/simpleParser.js","creator/views/rubricblock.js","creator/helpers/qtiTest.js","creator/views/section.js","creator/views/testpart.js","creator/views/test.js","creator/encoders/dom2qti.js","creator/creator.js","../../serviceApi/ServiceApi.js","../../serviceApi/UserInfoService.js","../../serviceApi/StateStorage.js","../../lib/jquery.badonkatrunc.js","runtime/testRunner.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoQtiTest/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Creator': {\n            'css': 'creator', \n            'actions': {\n                'index' : 'controller/creator/creator'\n            }\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart clearfix\\\">\\n\\n   <h1><span data-bind=\\\"identifier\\\">\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\"> \\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"Test Part Properties\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"Move Up\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"Move Down\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span> \\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"Remove Test Part\\\" data-delete=\\\"#\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>  \\n                        <!--<span class=\\\"tlb-bar\\\">-->\\n                            <!--<span class=\\\"tlb-start\\\"></span>-->\\n                            <!--<span class=\\\"tlb-text-button-box\\\">-->\\n                                <!--<a class=\\\"tlb-text-button-off section-adder\\\">-->\\n                                    <!--<span class=\\\"icon-add\\\"></span>-->\\n                                    <!--<span class=\\\"tlb-text\\\">New Section</span>-->\\n                                <!--</a>-->\\n                            <!--</span>-->\\n                            <!--<span class=\\\"tlb-end\\\"></span>-->\\n                        <!--</span>-->\\n                    </span>   \\n                </div>\\n            </div>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"toggler opened\\\" data-toggle=\\\"#testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></a>\\n    </h1>\\n    <div id=\\\"testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-content\\\">\\n        \\n       <!-- assessmentTest/testPart/assessmentSections -->\\n       <div class=\\\"sections\\\" data-bind-each=\\\"assessmentSections\\\" data-bind-tmpl=\\\"section\\\" data-bind-filter=\\\"isSection\\\"></div>\\n\\n        <button class=\\\"btn-info small section-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>New section\\n        </button>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section\\\">\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <h2><span data-bind=\\\"title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\">  \\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off rub-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Manage Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Manage Rubric Blocks\", options)))\n    + \"\\\" data-toggle=\\\"#rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" ><span class=\\\"icon-rubric\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section Properties\", options) : helperMissing.call(depth0, \"__\", \"Section Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span> \\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Section\", options) : helperMissing.call(depth0, \"__\", \"Remove Section\", options)))\n    + \"\\\" data-delete=\\\":parent .section\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>  \\n                    </span>   \\n                </div>\\n            </div>\\n        </div>\\n    </h2>\\n\\n    <div id=\\\"rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"rublocks clearfix toggled\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Rubric Blocks\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"rubricblocks decimal\\\" data-bind-each=\\\"rubricBlocks\\\" data-bind-tmpl=\\\"rubricblock\\\"></ol>\\n        <button class=\\\"btn-info small rublock-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"New Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"New Rubric Block\", options)))\n    + \"\\n        </button>\\n    </div>\\n    <div class=\\\"itemrefs-wrapper\\\">\\n        <ol class=\\\"itemrefs decimal clearfix\\\" data-bind-each=\\\"sectionParts\\\" data-bind-tmpl=\\\"itemref\\\" data-bind-filter=\\\"isItemRef\\\" data-msg=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\\"></ol>\\n        <div class=\\\"itemref-placeholder\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li class=\\\"rubricblock\\\">\\n    <div class=\\\"actions\\\"> \\n       <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <!--<a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block Properties\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>-->\\n                            <!--<span class=\\\"tlb-separator\\\"></span> -->\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Remove Rubric Block\", options)))\n    + \"\\\" data-delete=\\\":parent .rubricblock\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>  \\n                </span>   \\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"rubricblock-content\\\"></div>\\n    <div class=\\\"rubricblock-binding\\\" data-bind=\\\"content\\\" data-bind-html=\\\"true\\\" data-bind-encoder=\\\"dom2qti\\\"></div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<li id='\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-uri='\";\n  if (helper = helpers.href) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.href); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='itemref'>\\n    <span class='title truncate'>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <div class=\\\"actions\\\"> \\n        <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Reference Properties\", options) : helperMissing.call(depth0, \"__\", \"Item Reference Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span> \\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Item Reference\", options) : helperMissing.call(depth0, \"__\", \"Remove Item Reference\", options)))\n    + \"\\\" data-delete=\\\":parent .itemref\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>  \\n                </span>   \\n            </div>\\n        </div>\\n    </div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/item', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n     <li data-uri='\";\n  if (helper = helpers.uri) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.uri); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='truncate'>\\n        \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parent), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n     </li>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class='flag truncate' title=\\\"\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/test-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"test-props props clearfix\\\">\\n    \\n    <!-- test properties --> \\n    <h3 data-bind=\\\"title\\\"></h3>\\n\\n<!-- assessmentTest/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The principle identifier of the test.\", options) : helperMissing.call(depth0, \"__\", \"The principle identifier of the test.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test title.\", options) : helperMissing.call(depth0, \"__\", \"The test title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"test-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for the all test.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for the all test.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"test-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"testpart-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n    \\n    <form autocomplete=\\\"off\\\">\\n\\n<!-- assessmentTest/testPart/identifier -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"testpart-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"testpart-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test part identifier.\", options) : helperMissing.call(depth0, \"__\", \"The test part identifier.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/navigationMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n               \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"navigationMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Linear\", options) : helperMissing.call(depth0, \"__\", \"Linear\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Non Linear\", options) : helperMissing.call(depth0, \"__\", \"Non Linear\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options) : helperMissing.call(depth0, \"__\", \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/submissionMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Submission\", options) : helperMissing.call(depth0, \"__\", \"Submission\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"submissionMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Individual\", options) : helperMissing.call(depth0, \"__\", \"Individual\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Simultaneous\", options) : helperMissing.call(depth0, \"__\", \"Simultaneous\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options) : helperMissing.call(depth0, \"__\", \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl -->\\n        <div class=\\\"testpart-item-session-control toggled\\\">\\n\\n<!-- assessmentTest/testPart/itemSessionControl/maxAttempts -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input name=\\\"testpart-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/showFeedback -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowComment -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-comment\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowSkipping -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\"   />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/timeLimits/minTime -->\\n        <div class=\\\"testpart-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/testPart/timeLimits/maxTime -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this test part.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this test part.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/timeLimits/allowLateSubmission -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"section-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the section.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The section title.\", options) : helperMissing.call(depth0, \"__\", \"The section title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/visible -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-visible\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Visible\", options) : helperMissing.call(depth0, \"__\", \"Visible\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-visible\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"visible\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"A visible section is one that is identifiable by the candidate.\", options) : helperMissing.call(depth0, \"__\", \"A visible section is one that is identifiable by the candidate.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/keepTogether -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-keep-together\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keep Together\", options) : helperMissing.call(depth0, \"__\", \"Keep Together\", options)))\n    + \"</label>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-keep-together\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"keepTogether\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options) : helperMissing.call(depth0, \"__\", \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Selection\", options) : helperMissing.call(depth0, \"__\", \"Selection\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection -->\\n    <div class=\\\"section-selection toggled\\\">\\n\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-enable-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enable selection\", options) : helperMissing.call(depth0, \"__\", \"Enable selection\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-enable-selection\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/select -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-select\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select\", options) : helperMissing.call(depth0, \"__\", \"Select\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-select\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"0\\\" data-bind=\\\"selection.select\\\"  data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The number of child elements to be selected.\", options) : helperMissing.call(depth0, \"__\", \"The number of child elements to be selected.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/withReplacement -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-with-replacement\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With Replacement\", options) : helperMissing.call(depth0, \"__\", \"With Replacement\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-with-replacement\\\" value=\\\"true\\\" data-bind=\\\"selection.withReplacement\\\"  data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"When selecting child elements each element is normally eligible for selection once only.\", options) : helperMissing.call(depth0, \"__\", \"When selecting child elements each element is normally eligible for selection once only.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-ordering\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Ordering\", options) : helperMissing.call(depth0, \"__\", \"Ordering\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/ordering -->\\n    <div class=\\\"section-ordering toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/ordering/shuffle -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-shuffle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Shuffle\", options) : helperMissing.call(depth0, \"__\", \"Shuffle\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-shuffle\\\" value=\\\"true\\\" data-bind=\\\"ordering.shuffle\\\"  data-bind-encoder=\\\"boolean\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options) : helperMissing.call(depth0, \"__\", \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl -->\\n    <div class=\\\"section-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"section-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this section.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this section.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"itemref-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"itemref-props props clearfix\\\">\\n\\n    <h3>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the item reference.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the item reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/href -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-href\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reference\", options) : helperMissing.call(depth0, \"__\", \"Reference\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-href\\\" data-bind=\\\"href\\\" readonly=\\\"readonly\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The reference.\", options) : helperMissing.call(depth0, \"__\", \"The reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    \\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-category\\\" data-bind=\\\"categories\\\" data-bind-encoder=\\\"str2array\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items can optionally be assigned to one or more categories.\", options) : helperMissing.call(depth0, \"__\", \"Items can optionally be assigned to one or more categories.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/required -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-required\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required\", options) : helperMissing.call(depth0, \"__\", \"Required\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-required\\\" value=\\\"true\\\" data-bind=\\\"required\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If required it must appear (at least once) in the selection.\", options) : helperMissing.call(depth0, \"__\", \"If required it must appear (at least once) in the selection.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/fixed -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-fixed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Fixed\", options) : helperMissing.call(depth0, \"__\", \"Fixed\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-fixed\\\" value=\\\"true\\\" data-bind=\\\"fixed\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Not shuffled, the position remains fixed.\", options) : helperMissing.call(depth0, \"__\", \"Not shuffled, the position remains fixed.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl -->\\n    <div class=\\\"itemref-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"itemref-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"itemref-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this item.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this item.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"rubricblock-props props clearfix\\\">\\n\\n    <h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block\", options)))\n    + \": \";\n  if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n <!--assessmentTest/testPart/assessmentSection/sectionPart/rubrickBlocK/views -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Views\", options) : helperMissing.call(depth0, \"__\", \"Views\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <select name=\\\"view\\\" multiple=\\\"multiple\\\" data-bind=\\\"views\\\">\\n                <option value=\\\"author\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Author\", options) : helperMissing.call(depth0, \"__\", \"Author\", options)))\n    + \"</option>\\n                <option value=\\\"candidate\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Candidate\", options) : helperMissing.call(depth0, \"__\", \"Candidate\", options)))\n    + \"</option>\\n                <option value=\\\"proctor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proctor\", options) : helperMissing.call(depth0, \"__\", \"Proctor\", options)))\n    + \"</option>\\n                <option value=\\\"scorer\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scorer\", options) : helperMissing.call(depth0, \"__\", \"Scorer\", options)))\n    + \"</option>\\n                <option value=\\\"testConstructor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test constructor\", options) : helperMissing.call(depth0, \"__\", \"Test constructor\", options)))\n    + \"</option>\\n                <option value=\\\"tutor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Tutor\", options) : helperMissing.call(depth0, \"__\", \"Tutor\", options)))\n    + \"</option>\\n            </select>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Who can view the rubric block during the delivery.\", options) : helperMissing.call(depth0, \"__\", \"Who can view the rubric block during the delivery.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","define('taoQtiTest/controller/creator/templates/index',[\n'tpl!taoQtiTest/controller/creator/templates/testpart',\n'tpl!taoQtiTest/controller/creator/templates/section', \n'tpl!taoQtiTest/controller/creator/templates/rubricblock', \n'tpl!taoQtiTest/controller/creator/templates/itemref',\n'tpl!taoQtiTest/controller/creator/templates/item',\n'tpl!taoQtiTest/controller/creator/templates/test-props',\n'tpl!taoQtiTest/controller/creator/templates/testpart-props', \n'tpl!taoQtiTest/controller/creator/templates/section-props', \n'tpl!taoQtiTest/controller/creator/templates/itemref-props', \n'tpl!taoQtiTest/controller/creator/templates/rubricblock-props'], \n\nfunction(testPart, section, rubricBlock, itemRef, item, testProps, testPartProps, sectionProps, itemRefProps, rubricBlockProps){\n    'use strict';\n\n    /**\n     * Expose all the templates used by the test creator\n     * @exports taoQtiTest/controller/creator/templates/index\n     */\n    return {\n        'testpart'      : testPart,\n        'section'       : section,\n        'itemref'       : itemRef,\n        'item'          : item,\n        'rubricblock'   : rubricBlock,\n        'properties'    : {\n            'test'      : testProps,\n            'testpart'  : testPartProps,\n            'section'   : sectionProps,\n            'itemref'   : itemRefProps,\n            'rubricblock'   : rubricBlockProps\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/item',['jquery', 'taoQtiTest/controller/creator/templates/index'], function($, templates){\n    'use strict';\n  \n    var itemTemplate = templates.item;\n \n   /**\n     * The ItemView setup items related components\n     * @exports taoQtiTest/controller/creator/views/item\n     * @param {Function} loadItems - the function used to get items from the server\n     */\n   var itemView =  function(loadItems){\n            \n        var $panel     = $('.test-creator-items .item-selection'); \n        var $search    = $('#item-filter');\n        var $itemBox   = $('.item-box', $panel);\n        \n        if(typeof loadItems === 'function'){\n            //search pattern is empty the 1st time, give it undefined\n            loadItems(undefined, function(items){\n                update(items);\n                setUpLiveSearch();\n            });\n        }\n        \n        /**\n         * Set up the search behavior: once 3 chars are enters into the field,\n         * we load the items that matches the given search pattern.\n         * @private\n         */\n        function setUpLiveSearch (){\n            var timeout;\n            \n            var liveSearch = function(){\n                var pattern = $search.val();\n                if(pattern.length > 1 || pattern.length === 0){\n                    clearTimeout(timeout);\n                    timeout = setTimeout(function(){\n                        loadItems(pattern, function(items){\n                            update(items);\n                        });\n                    }, 300);\n                }\n            };\n            \n            //trigger the search on keyp and on the magnifer button click\n            $search.keyup(liveSearch)\n                     .siblings('.ctrl').click(liveSearch);\n        }\n        \n        /**\n         * Update the items list\n         * @private\n         * @param {Array} items - the new items\n         */\n        function update (items){\n            disableSelection();\n            $itemBox.empty().append(itemTemplate(items));\n            enableSelection();\n        }\n    \n        /**\n         * Disable the selectable component\n         * @private\n         * @param {Array} items - the new items\n         */\n        function disableSelection (){\n            if($panel.data('selectable')){\n                $panel.selectable('disable');\n            }\n        }\n    \n        /**\n         * Enable to select items to be added to sections\n         * using the jquery-ui selectable.\n         * @private\n         */\n        function enableSelection (){\n            \n            if($panel.data('selectable')){\n                $panel.selectable('enable');\n            } else {\n                $panel.selectable({\n                    filter: 'li',\n                    selected: function( event, ui ) {\n                        $(ui.selected).addClass('selected');\n                    },\n                    unselected: function( event, ui ) {\n                        $(ui.unselected).removeClass('selected');\n                    },\n                    stop: function(){\n                        $(this).trigger('itemselect.creator', $('.selected')); \n                    }\n                });\n            }\n        }\n   };\n    \n    return itemView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/property',[\n'jquery', \n'ui', \n'core/databinder', \n'taoQtiTest/controller/creator/templates/index'], \nfunction($, ui, DataBinder, templates){\n    'use strict';\n\n    /**\n     * @callback PropertyViewCallback\n     * @param {propertyView} propertyView - the view object \n     */\n   \n    /**\n     * The PropertyView setup the property panel component\n     * \n     * @exports taoQtiTest/controller/creator/views/property\n     */\n   var propView = function propView(tmplName, model){\n       var $container = $('.test-creator-props');\n       var template = templates.properties[tmplName];\n       var $view;       \n\n       /**\n        * Opens the view for the 1st time\n        */ \n       var open = function propOpen(){\n            var databinder;\n            $container.children('.props').hide().trigger('propclose.propview');\n            $view = $(template(model)).appendTo($container).filter('.props'); \n            \n            //start listening for DOM compoenents inside the view\n            ui.startDomComponent($view);\n\n            //start the data binding\n            databinder = new DataBinder($view, model);\n            databinder.bind();\n    \n            propValidation(); \n\n            $view.trigger('propopen.propview');\n       };\n\n       /**\n        * Get the view container element\n        * @returns {jQueryElement}\n        */  \n       var getView = function propGetView(){\n            return $view;\n       };\n           \n       /**\n        * Check wheter the view is displayed\n        * @returns {boolean} true id opened\n        */  \n       var isOpen = function propIsOpen(){\n            return $view.css('display') !== 'none';\n       };\n\n       /**\n        * Bind a callback on view open\n        * @param {PropertyViewCallback} cb\n        */  \n       var onOpen = function propOnOpen(cb){\n            $view.on('propopen.propview', function(e){\n                e.stopPropagation();\n                cb(); \n            });\n       };\n\n       \n       /**\n        * Bind a callback on view close\n        * @param {PropertyViewCallback} cb\n        */  \n       var onClose = function propOnClose(cb){\n            $view.on('propclose.propview', function(e){\n                e.stopPropagation();\n                cb(); \n            });\n       };\n\n       /**\n        * Removes the property view\n        */  \n       var destroy = function propDestroy(){\n            $view.remove();\n       };\n       \n       /**\n        * Toggles the property view display\n        */  \n       var toggle = function propToggle(){\n            $container.children('.props').not($view).hide().trigger('propclose.propview');\n            if(isOpen()){\n                $view.hide().trigger('propclose.propview');\n            } else {\n                $view.show().trigger('propopen.propview');\n            }\n       };\n      \n       /**\n        * Set up the validation on the property view\n        * @private\n        */  \n       function propValidation() {\n            $view.on('validated.group', function(e, isValid){\n                if(e.namespace === 'group'){\n                    var $togglers = $('#test-creator .property-toggler, #saver');\n                    if(isValid === true){\n                        $togglers.removeClass('disabled');\n                    } else {\n                        $togglers.addClass('disabled');\n                    }\n                }\n            });\n            $view.groupValidator();\n        }\n\n      return {\n        open : open,\n        getView : getView,\n        isOpen : isOpen,\n        onOpen : onOpen,\n        onClose : onClose,\n        destroy : destroy,\n        toggle : toggle\n      }; \n   };\n\n   return propView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/actions',[\n'jquery', \n'taoQtiTest/controller/creator/views/property'], \nfunction($, propertyView){\n    'use strict';\n\n    var disabledClass = 'disabled';\n    var activeClass = 'active';\n    var btnOnClass = 'tlb-button-on';\n\n    /**\n     * Set up the property view for an element\n     * @param {jQueryElement} $container - that contains the property opener\n     * @param {String} template - the name of the template to give to the propertyView\n     * @param {Object} model - the model to bind\n     * @param {PropertyViewCallback} cb - execute at view setup phase\n     */ \n    function properties ($container, template, model, cb) {\n        var propView = null;\n        $container.find('.property-toggler').on('click', function(e){\n            e.preventDefault();\n            var $elt = $(this);\n            if(!$(this).hasClass(disabledClass)){\n\n                $elt.blur(); //to remove the focus\n\n                if(propView === null){\n\n                    $container.addClass(activeClass);\n                    $elt.addClass(btnOnClass);\n\n                    propView = propertyView(template, model);\n                    propView.open();\n                    \n                    propView.onOpen(function(){\n                        $container.addClass(activeClass);\n                        $elt.addClass(btnOnClass);\n                    });\n                    propView.onClose(function(){\n                        $container.removeClass(activeClass);\n                        $elt.removeClass(btnOnClass);\n                    });\n\n                    if(typeof cb === 'function'){\n                        cb(propView);\n                    }\n                } else { \n                    propView.toggle();\n                } \n            }\n        });\n    }\n\n\n    /**\n     * Enable to move an element\n     * @param {jQueryElement} $actionContainer - where the mover is\n     * @param {String} containerClass - the cssClass of the element container\n     * @param {String} elementClass - the cssClass to identify elements \n     */ \n    function move ($actionContainer, containerClass, elementClass) {\n        var $element = $actionContainer.parents('.' + elementClass);\n        var $container = $element.parents('.' + containerClass ); \n   \n        //move up an element\n        $('.move-up', $actionContainer).click(function(e){\n            var $elements, index;\n    \n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n    \n            //get the position\n            $elements = $('.' + elementClass, $container);\n            console.log($elements.length);\n            index = $elements.index($element);\n            if (index > 0) {\n                $element.fadeOut(200, function(){\n                    console.log('.' + elementClass + ' :eq(' + (index - 1) + ')');\n                    $element\n                        .insertBefore($('.' + elementClass + ' :eq(' + (index - 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n\n        //move down an element\n        $('.move-down', $actionContainer).click(function(e){\n            var $elements, index;\n    \n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            console.log($elements.length);\n            index = $elements.index($element);\n            if (index < ($elements.length - 1) && $elements.length > 1) {\n\n                console.log('.' + elementClass + ' :eq(' + (index + 1) + ')');\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertAfter($('.' + elementClass + ' :eq(' + (index + 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n    }\n   \n    /**\n     * Update the movable state of an element\n     * @param {jQueryElement} $container - the movable elements (scopped) \n     * @param {String} elementClass - the cssClass to identify elements \n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function movable ($container, elementClass, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n\n            var index = $container.index($elt);\n            var $moveUp = $('.move-up', $actionContainer);\n            var $moveDown = $('.move-down', $actionContainer);\n            \n            //only one test part, no moving               \n            if( $container.length === 1 ){\n                $moveUp.addClass(disabledClass);\n                $moveDown.addClass(disabledClass);\n\n            //testpart is the first, only moving down\n            } else if(index === 0) {\n                $moveUp.addClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n\n            //testpart is the lasst, only moving up\n            } else if ( index >= ($container.length - 1) ) {\n                $moveDown.addClass(disabledClass);\n                $moveUp.removeClass(disabledClass);\n            \n            //or enable moving top/bottom\n            } else {\n                $moveUp.removeClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n            }\n         });\n    }\n\n    /**\n     * Update the removable state of an element\n     * @param {jQueryElement} $container - that contains the removable action\n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function removable ($container, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n            var $delete = $('[data-delete]', $actionContainer);\n\n            if($container.length <= 1){\n                $delete.addClass(disabledClass);\n            } else {\n                $delete.removeClass(disabledClass);\n            }\n        });\n    }\n\n    /**\n     * Disable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function disable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').addClass(disabledClass);    \n    }\n    \n    /**\n     * Enable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function enable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').removeClass(disabledClass);    \n    }\n\n    /**\n     * The actions gives you shared behavior for some actions. \n     * \n     * @exports taoQtiTest/controller/creator/views/actions\n     */\n    return {\n        properties  : properties,\n        move        : move,\n        removable   : removable,\n        movable     : movable,\n        disable     : disable,\n        enable      : enable\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/itemref',[\n'jquery',\n'lodash', \n'i18n',\n'taoQtiTest/controller/creator/views/actions'],\nfunction($, _, __, actions){\n    'use strict';\n\n   /**\n    * Set up an item ref: init action beahviors. Called for each one.\n    *\n    * @param {jQueryElement} $itemRef - the itemRef element to set up\n    * @param {Object} model - the data model to bind to the ref\n    */\n   var setUp =  function setUp ($itemRef, model){\n\n        var $actionContainer = $('.actions', $itemRef);\n        \n        actions.properties($actionContainer, 'itemref', model, propHandler);\n        actions.move($actionContainer, 'itemrefs', 'itemref');\n\n        resize();\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            categoriesProperty(propView.getView().find('[name=itemref-category]'));\n            \n            $itemRef.parents('.testpart').on('delete', removePropHandler);\n            $itemRef.parents('.section').on('delete', removePropHandler);\n            $itemRef.on('delete', removePropHandler);\n            \n            function removePropHandler(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $select - the select box to set up\n         */\n        function categoriesProperty($select){\n            $select.select2({\n                width: '100%',\n                tags : [],\n                multiple : true,\n                tokenSeparators: [\",\", \" \", \";\"],\n                formatNoMatches : function(){\n                    return __('Enter a category');\n                },\n                maximumInputLength : 32\n            });\n        }\n   };\n\n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n   var listenActionState =  function listenActionState (){\n\n        var $actionContainer;\n        \n        $('.itemrefs').each(function(){\n            actions.movable($('.itemref', $(this)), 'itemref', '.actions');\n        });\n       \n        $(document)\n        .on('delete', function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('itemref')){\n                $parent = $target.parents('.itemrefs');\n                actions.disable($parent.find('.itemref'), '.actions');\n           }\n        })\n        .on('add change undo.deleter deleted.deleter', '.itemrefs',  function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('itemref') || $target.hasClass('itemrefs')){\n                $parent = $('.itemref', $target.hasClass('itemrefs') ? $target : $target.parents('.itemrefs'));\n                actions.enable($parent, '.actions');\n                actions.movable($parent, 'itemref', '.actions');\n            }\n        });\n   };\n\n    /**\n     * We need to resize the itemref in case of long labels\n     */\n    var resize = _.throttle(function resize(){\n        var $refs = $('.itemrefs').first();\n        var $actions = $('.itemref .actions').first();\n        var width = $refs.innerWidth() - $actions.outerWidth();\n        $('.itemref > .title').width(width); \n    }, 100);\n    \n    /**\n     * The itemrefView setup itemref related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/itemref\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState,\n        resize : resize\n   };\n \n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[], function(){\n    return {\n        '_container' : 'taoQtiItem/qtiItem/core/Container',\n        'assessmentItem' : 'taoQtiItem/qtiItem/core/Item',\n        'responseProcessing' : 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        '_simpleFeedbackRule' : 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        'stylesheet' : 'taoQtiItem/qtiItem/core/Stylesheet',\n        'math' : 'taoQtiItem/qtiItem/core/Math',\n        'img' : 'taoQtiItem/qtiItem/core/Img',\n        'object' : 'taoQtiItem/qtiItem/core/Object',\n        'outcomeDeclaration' : 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        'responseDeclaration' : 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        'rubricBlock' : 'taoQtiItem/qtiItem/core/RubricBlock',\n        'associableHotspot' : 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        'gap' : 'taoQtiItem/qtiItem/core/choices/Gap',\n        'gapImg' : 'taoQtiItem/qtiItem/core/choices/GapImg',\n        'gapText' : 'taoQtiItem/qtiItem/core/choices/GapText',\n        'hotspotChoice' : 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        'hottext' : 'taoQtiItem/qtiItem/core/choices/Hottext',\n        'inlineChoice' : 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        'simpleAssociableChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        'simpleChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        'associateInteraction' : 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        'choiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        'prompt' : 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        'selectPointInteraction' : 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        'feedbackBlock' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        'feedbackInline' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        'modalFeedback' : 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        'customInteraction' : 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiItem/core/PortableInfoControl'\n    };\n});\n","/**\n * Define the location of all qti classes used in the QTI Creator\n */\ndefine('taoQtiItem/qtiCreator/model/qtiClasses',['lodash', 'taoQtiItem/qtiItem/core/qtiClasses'], function(_, qtiClasses){\n    \"use strict\";\n    //clone the qtiClasses instead of modifying it by direct extend:\n    return _.defaults({\n        'assessmentItem' : 'taoQtiItem/qtiCreator/model/Item',\n        '_container' : 'taoQtiItem/qtiCreator/model/Container',\n        'img' : 'taoQtiItem/qtiCreator/model/Img',\n        'math' : 'taoQtiItem/qtiCreator/model/Math',\n        'object' : 'taoQtiItem/qtiCreator/model/Object',\n        'rubricBlock' : 'taoQtiItem/qtiCreator/model/RubricBlock',\n        'modalFeedback' : 'taoQtiItem/qtiCreator/model/feedbacks/ModalFeedback',\n        'choiceInteraction' : 'taoQtiItem/qtiCreator/model/interactions/ChoiceInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCreator/model/interactions/OrderInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCreator/model/interactions/AssociateInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCreator/model/interactions/MatchInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCreator/model/interactions/InlineChoiceInteraction',\n        'simpleChoice' : 'taoQtiItem/qtiCreator/model/choices/SimpleChoice',\n        'simpleAssociableChoice' : 'taoQtiItem/qtiCreator/model/choices/SimpleAssociableChoice',\n        'inlineChoice' : 'taoQtiItem/qtiCreator/model/choices/InlineChoice',\n        'mediaInteraction' : 'taoQtiItem/qtiCreator/model/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCreator/model/interactions/UploadInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCreator/model/interactions/TextEntryInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCreator/model/interactions/SliderInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCreator/model/interactions/ExtendedTextInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCreator/model/interactions/HotspotInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCreator/model/interactions/SelectPointInteraction',\n        'graphicInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicOrderInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicGapMatchInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicOrderInteraction',\n        'hotspotChoice' : 'taoQtiItem/qtiCreator/model/choices/HotspotChoice',\n        'gapImg' : 'taoQtiItem/qtiCreator/model/choices/GapImg',\n        'associableHotspot' : 'taoQtiItem/qtiCreator/model/choices/AssociableHotspot',\n        'gapMatchInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GapMatchInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiCreator/model/interactions/HottextInteraction',\n        'hottext' : 'taoQtiItem/qtiCreator/model/choices/Hottext',\n        'gapText' : 'taoQtiItem/qtiCreator/model/choices/GapText',\n        'gap' : 'taoQtiItem/qtiCreator/model/choices/Gap',\n        'responseDeclaration' : 'taoQtiItem/qtiCreator/model/variables/ResponseDeclaration',\n        'responseProcessing' : 'taoQtiItem/qtiCreator/model/ResponseProcessing',\n        'customInteraction' : 'taoQtiItem/qtiCreator/model/interactions/PortableCustomInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCreator/model/interactions/EndAttemptInteraction',\n        'infoControl' : 'taoQtiItem/qtiCreator/model/PortableInfoControl'\n    }, qtiClasses);\n\n});\n\n","/**\n * Common basic util functions\n */\ndefine('taoQtiItem/qtiItem/helper/util',['lodash'], function(_){\n    var util = {\n        buildSerial : function buildSerial(prefix){\n            var id = prefix || '';\n            var chars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n            for(var i = 0; i < 22; i++){\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n        fullpath : function fullpath(src, baseUrl){\n\n            src = src || '';\n            baseUrl = baseUrl || '';\n\n            if(src){\n\n                src = src.replace(/^\\//, '');\n\n                if(!src.match(/^http/i)){\n\n                    if(baseUrl && !baseUrl.match(/\\/$/)){\n                        baseUrl += '/';\n                    }\n\n                    src = baseUrl + src;\n                }\n            }\n\n            return src;\n        },\n        findInCollection : function findInCollection(element, collectionNames, searchedSerial){\n\n            var found = null;\n\n            if(_.isString(collectionNames)){\n                collectionNames = [collectionNames];\n            }\n\n            if(_.isArray(collectionNames)){\n\n                _.each(collectionNames, function(collectionName){\n\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken){\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if(elt){\n                        found = {'parent' : element, 'element' : elt};\n                        return false;//break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt){\n\n                        if(_.isFunction(elt.find)){\n                            found = elt.find(searchedSerial);\n                            if(found){\n                                return false;//break the each loop\n                            }\n                        }\n\n                    });\n\n                    if(found){\n                        return false;//break the each loop\n                    }\n\n                });\n\n            }else{\n\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace : function addMarkupNamespace(markup, ns){\n            if(ns) {\n                markup = markup.replace(/<(\\/)?([a-z]+)([^><:]*)>/g, '<$1' + ns + ':$2$3>');\n                markup = markup.replace('<img ', '<' + ns + 'img ');\n                return markup;\n            }\n            return markup;\n\n        },\n        removeMarkupNamespaces : function removeMarkupNamespace(markup){\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces : function getMarkupUsedNamespaces(markup){\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node){\n                namespaces.push(ns);\n                return '<'+slash+node+'>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n});\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function(_, $){\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args){\n\n        var options = {\n            data : {},\n            placeholder : null,\n            subclass : '',\n            renderer : null\n        };\n        \n        _.each(args, function(arg){\n            if(arg){\n                if(arg.isRenderer){\n                    options.renderer = arg;\n                }else if(arg instanceof $ && arg.length){\n                    options.placeholder = arg;\n                }else if(_.isString(arg)){\n                    options.subclass = arg;\n                }else if(_.isPlainObject(arg)){\n                    options.data = arg;\n                }else{\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n        \n        return options;\n    };\n    \n    return rendererConfigHelper;\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'class', 'lodash', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function($, Class, _, util, rendererConfig){\n\n    var _instances = {};\n\n    var Element = Class.extend({\n        qtiClass : '',\n        serial : '',\n        relatedItem : null,\n        init : function(serial, attributes){\n\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if(typeof (serial) === 'object'){\n                attributes = serial;\n                serial = '';\n            }\n\n            if(!serial){\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if(serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))){\n                throw 'invalid QTI serial : (' + (typeof serial) + ') ' + serial;\n            }\n\n            if(!_instances[serial]){\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            }else{\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                this.initContainer(arguments[2] || '');\n            }\n            if(typeof this.initObject === 'function'){\n                this.initObject();\n            }\n        },\n        is : function(qtiClass){\n            return (qtiClass === this.qtiClass);\n        },\n        placeholder : function(){\n            return '{{' + this.serial + '}}';\n        },\n        getSerial : function(){\n            return this.serial;\n        },\n        getUsedIdentifiers : function(){\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for(var i in elts){\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if(id){\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n        attr : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.attributes[name] = value;\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.attr(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.attributes[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', {element : this, key : name, value : value});\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.data(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.metaData[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData : function(name){\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr : function(name){\n            return this.removeAttributes(name);\n        },\n        setAttributes : function(attributes){\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes : function(){\n            return _.clone(this.attributes);\n        },\n        removeAttributes : function(attrNames){\n            if(typeof (attrNames) === 'string'){\n                attrNames = [attrNames];\n            }\n            for(var i in attrNames){\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements : function(){\n            var elts = {};\n            if(typeof this.initContainer === 'function'){\n                var container = this.getBody();\n                elts[container.getSerial()] = container;//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, container.getComposingElements());\n            }\n            if(typeof this.initObject === 'function'){\n                var object = this.getObject();\n                elts[object.getSerial()] = object;//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, object.getComposingElements());\n            }\n            _.each(this.metaData, function(v){\n                if(Element.isA(v, '_container')){\n                    elts[v.getSerial()] = v;\n                    elts = _.extend(elts, v.getComposingElements());\n                }\n            });\n            return elts;\n        },\n        getUsedClasses : function(){\n\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt){\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find : function(serial){\n\n            var found = null;\n\n            if(typeof this.initObject === 'function'){\n                var object = this.getObject();\n                if(object.serial === serial){\n                    found = {'parent' : this, 'element' : object, 'location' : 'object'};\n                }\n            }\n\n            if(!found && typeof this.initContainer === 'function'){\n                found = this.getBody().find(serial, this);\n            }\n\n            return found;\n        },\n        parent : function(){\n            var item = this.getRelatedItem();\n            if(item){\n                var found = item.find(this.getSerial());\n                if(found){\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        setRelatedItem : function(item, recursive){\n\n            recursive = (typeof recursive === 'undefined') ? true : recursive;\n\n            if(Element.isA(item, 'assessmentItem')){\n                this.relatedItem = item;\n                var composingElts = this.getComposingElements();\n                for(var i in composingElts){\n                    composingElts[i].setRelatedItem(item, false);\n                }\n            }\n\n        },\n        getRelatedItem : function(){\n            var ret = null;\n            if(Element.isA(this.relatedItem, 'assessmentItem')){\n                ret = this.relatedItem;\n            }\n            return ret;\n        },\n        setRenderer : function(renderer){\n            if(renderer && renderer.isRenderer){\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for(var serial in elts){\n                    elts[serial].setRenderer(renderer);\n                }\n            }else{\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer : function(){\n            return this.renderer;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var renderer = args.renderer || this.getRenderer();\n\n            var tplData = {},\n                defaultData = {\n                    'tag' : this.qtiClass,\n                    'serial' : this.serial,\n                    'attributes' : this.getAttributes()\n                };\n\n            if(!renderer){\n                throw 'render: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                defaultData.body = this.getBody().render(renderer);\n            }\n            if(typeof this.initObject === 'function'){\n                defaultData.object = {\n                    attributes : this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = renderer.getAbsoluteUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = renderer.getData(this, tplData, args.subclass);\n            var rendering = renderer.renderTpl(this, tplData, args.subclass);\n            if(args.placeholder){\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender : function(data, altClassName, renderer){\n\n            renderer = renderer || this.getRenderer();\n\n            if(typeof this.initContainer === 'function'){\n                //post render body element\n                this.getBody().postRender({}, '', renderer);\n            }\n            \n            if(renderer){\n                return renderer.postRender(this, data, altClassName);\n            }else{\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        getContainer : function($scope, subclass){\n            var renderer = this.getRenderer();\n            if(renderer){\n                return renderer.getContainer(this, $scope, subclass);\n            }else{\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray : function(){\n            var arr = {\n                serial : this.serial,\n                type : this.qtiClass,\n                attributes : this.getAttributes()\n            };\n\n            if(typeof this.initContainer === 'function'){\n                arr.body = this.getBody().toArray();\n            }\n            if(typeof this.initObject === 'function'){\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty : function(){\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass : function(className){\n            var clazz = this.attr('class') || '';\n            if(!_containClass(clazz, className)){\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass : function(className){\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass : function(className){\n\n            var clazz = this.attr('class') || '';\n            if(clazz){\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n                clazz = clazz.replace(regex, '').replace(/^\\s+/, '');\n                if(clazz){\n                    this.attr('class', clazz);\n                }else{\n                    this.removeAttr('class');\n                }\n            }\n        },\n        isset : function(){\n            return Element.issetElement(this.serial);\n        },\n        unset : function(){\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className){\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass){\n        return (qtiElement instanceof Element && qtiElement.is(qtiClass));\n    };\n\n    Element.getElementBySerial = function(serial){\n        return _instances[serial];\n    };\n    \n    Element.issetElement = function(serial){\n        return !!_instances[serial];\n    };\n    \n    Element.unsetElement = function(serial){\n        \n        var element = Element.getElementBySerial(serial);\n        \n        if(element){\n            \n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt){\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n            \n        }else{\n            throw 'cannot unset an element that does not exist';\n        }\n        \n        return true;\n    };\n\n    return Element;\n});\n\n\n\n","/**\n * Common helper functions\n */\ndefine('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function(_, Element){\n    return {\n        convertChoices : function(choices, outputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                if(Element.isA(c, 'choice')){\n                    switch(outputType){\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n\n                }else if(_.isArray(c)){\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices : function(interaction, choices, inputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                var choice;\n                if(_.isString(c)){\n                    if(inputType === 'serial'){\n                        choice = interaction.getChoice(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else if(inputType === 'identifier'){\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else{\n                        ret.push(c);\n                    }\n                }else if(_.isArray(c)){\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                }else{\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices : function(choices){\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for(var i in choices){\n                if(Element.isA(choices[i], 'choice')){\n                    var choice = choices[i];\n                    if(choice.attr('fixed')){\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                }else{\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for(var n = 0; n < r.length - 1; n++){\n                if(f[n]){\n                    continue;\n                }\n                var k = -1;\n                do{\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                }while(f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier : function(interaction, choiceSerial){\n            var choice = interaction.getChoice(choiceSerial);\n            if(choice){\n                return choice.id();\n            }else{\n                return '';\n            }\n        }\n    }\n});\n","define('taoQtiItem/qtiRunner/core/Renderer',[\n    'lodash',\n    'jquery',\n    'handlebars',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/interactionHelper'\n], function(_, $, Handlebars, Element, interactionHelper){\n\n    'use strict';\n\n    var _isValidRenderer = function(renderer){\n\n        var valid = true;\n\n        if(typeof (renderer) !== 'object'){\n            return false;\n        }\n\n        var classCorrect = false;\n        if(renderer.qtiClass){\n            if(_.indexOf(_renderableClasses, renderer.qtiClass) >= 0){\n                classCorrect = true;\n            }else{\n                var pos = renderer.qtiClass.indexOf('.');\n                if(pos > 0){\n                    var qtiClass = renderer.qtiClass.slice(0, pos);\n                    var subClass = renderer.qtiClass.slice(pos + 1);\n                    if(_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0){\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if(!classCorrect){\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if(!renderer.template){\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    var _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        'img',\n        'math',\n        'object',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl'\n    ];\n\n    var _dependencies = {\n        assessmentItem : ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock : ['_container'],\n        associateInteraction : ['simpleAssociableChoice'],\n        choiceInteraction : ['simpleChoice'],\n        gapMatchInteraction : ['gap', 'gapText'],\n        graphicAssociateInteraction : ['associableHotspot'],\n        graphicGapMatchInteraction : ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction : ['hotspotChoice'],\n        hotspotInteraction : ['hotspotChoice'],\n        hottextInteraction : ['hottext'],\n        inlineChoiceInteraction : ['inlineChoice'],\n        matchInteraction : ['simpleAssociableChoice'],\n        orderInteraction : ['simpleChoice']\n    };\n\n    var _renderableSubclasses = {\n        'simpleAssociableChoice' : ['associateInteraction', 'matchInteraction'],\n        'simpleChoice' : ['choiceInteraction', 'orderInteraction']\n    };\n    \n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl(){\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n    \n    var Renderer = function(options){\n\n        options = options || {};\n\n        this.isRenderer = true;\n        this.name = '';\n        this.shuffleChoices = (options.shuffleChoices !== undefined) ? options.shuffleChoices : true;\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Store the registered renderer location\n         */\n        var _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        var _renderers = {};\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        var _getClassRenderer = function(qtiClass){\n            var ret = null;\n            if(_renderers[qtiClass]){\n                ret = _renderers[qtiClass];\n            }else{\n                var pos = qtiClass.indexOf('.');\n                if(pos > 0){\n                    qtiClass = qtiClass.slice(0, pos);\n                    if(_renderers[qtiClass]){\n                        ret = _renderers[qtiClass]\n                    }\n                }\n            }\n            return ret;\n        };\n\n        this.setOption = function(key, value){\n            if(typeof (key) === 'string'){\n                options[key] = value;\n            }\n            return this;\n        };\n\n        this.setOptions = function(opts){\n            _.extend(options, opts);\n            return this;\n        };\n\n        this.getOption = function(key){\n            if(typeof (key) === 'string' && options[key]){\n                return options[key];\n            }\n            return null;\n        };\n\n        this.renderTpl = function(element, data, qtiSubclass){\n\n            var ret = '',\n                tplFound = false,\n                qtiClass = qtiSubclass || element.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.template) === 'function'){\n                    ret = renderer.template(data);\n                    tplFound = true;\n                }\n            }\n\n            if(!tplFound){\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass){\n\n            var ret = data,\n                qtiClass = qtiSubclass || element.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getData) === 'function'){\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data){\n            return Handlebars.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass){\n\n            var ret = null,\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                ret = renderer.getContainer(qtiElement, $scope);\n            }else{\n                throw 'no renderer found for the class : ' + qtiElement.qtiClass;\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.render) === 'function'){\n                    ret = renderer.render.call(this, qtiElement, data);\n                }else{\n                    //postRendering is optional, log missing call of postRender?\n                }\n            }\n\n            return ret;\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.setResponse) === 'function'){\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    var $container = renderer.getContainer.call(this, qtiInteraction);\n                    if($container instanceof $ && $container.length){\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getResponse) === 'function'){\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.resetResponse) === 'function'){\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function(){\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations){\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses){\n\n            var required = [];\n            if(requiredClasses){\n                if(_.isArray(requiredClasses)){\n\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass){\n                        var deps = _dependencies[reqClass];\n                        if(deps){\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    for(var i in requiredClasses){\n                        var qtiClass = requiredClasses[i];\n                        if(_renderableSubclasses[qtiClass]){\n                            var requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass){\n                                if(_locations[qtiClass + '.' + subclass]){\n                                    required.push(_locations[qtiClass + '.' + subclass]);\n                                }else if(_locations[qtiClass]){\n                                    required.push(_locations[qtiClass]);\n                                }else{\n                                    throw new Error(this.name + ' : missing qti class location declaration: ' + qtiClass + ', subclass: ' + subclass);\n                                }\n                            });\n                        }else{\n                            if(_locations[qtiClass] === false){\n                                _renderers[qtiClass] = false;//mark this class as not renderable\n                            }else if(_locations[qtiClass]){\n                                required.push(_locations[qtiClass]);\n                            }else{\n                                throw new Error(this.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    }\n                }else{\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            }else{\n                required = _.values(_locations);\n            }\n\n            var _this = this;\n            require(required, function(){\n\n                _.each(arguments, function(clazz){\n                    if(_isValidRenderer(clazz)){\n                        _renderers[clazz.qtiClass] = clazz;\n                    }\n                });\n\n                if(typeof (callback) === 'function'){\n                    callback.call(_this, _renderers);\n                }\n            });\n\n            return this;\n        };\n\n        this.setShuffledChoices = function(interaction, choices, identificationType){\n            if(Element.isA(interaction, 'interaction')){\n                this.shuffledChoices[interaction.getSerial()] = interactionHelper.findChoices(interaction, choices, identificationType);\n            }\n        };\n\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType){\n            var ret = [], tmp;\n\n            if(Element.isA(interaction, 'interaction')){\n                var serial = interaction.getSerial();\n                if(!this.shuffledChoices[serial] || reshuffle){\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        this.shuffledChoices[serial] = [];\n                        for(var i = 0; i < 2; i++){\n                            this.shuffledChoices[serial].push(interactionHelper.shuffleChoices(interaction.getChoices(i)))\n                        }\n                    }else{\n                        this.shuffledChoices[serial] = interactionHelper.shuffleChoices(interaction.getChoices());\n                    }\n                }\n                tmp = this.shuffledChoices[serial];\n\n                if(returnedType === 'serial' || returnedType === 'identifier'){\n                    ret = interactionHelper.convertChoices(tmp, returnedType);\n                }else{\n                    //pass value only, not ref\n                    ret = _.clone(tmp);\n                }\n            }\n\n            return ret;\n        };\n\n        this.getRenderers = function(){\n            return _renderers;\n        };\n\n        this.getLocations = function(){\n            return _locations;\n        };\n\n        this.getAbsoluteUrl = function(relUrl){\n            \n            //allow relative url outpu only if explicitely said so\n            if(this.getOption('userRelativeUrl')){\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n            \n            if(/^http(s)?:\\/\\//i.test(relUrl)){\n                //already absolute\n                return relUrl;\n            }else{\n\n                var absUrl = '';\n                var runtimeLocations = this.getOption('runtimeLocations');\n\n                if(runtimeLocations && _.size(runtimeLocations)){\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier){\n                        if(relUrl.indexOf(typeIdentifier) === 0){\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false;//break\n                        }\n                    });\n                }\n\n                if(absUrl){\n                    return absUrl;\n                }else{\n                    var baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n\n            }\n        };\n    };\n\n    return {\n        build : function(renderersLocations, name, defaultOptions){\n            var NewRenderer = function(){\n                Renderer.apply(this, arguments);\n                this.register(renderersLocations);\n                this.name = name || '';\n                if(defaultOptions){\n                    this.setOptions(defaultOptions);\n                }\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n});\n","define('taoQtiItem/qtiDefaultRenderer/renderers/config',[],function(){\n    return {\n        name : 'defaultRenderer',\n        locations : {\n            '_container' : 'taoQtiItem/qtiDefaultRenderer/renderers/Container',\n            'assessmentItem' : 'taoQtiItem/qtiDefaultRenderer/renderers/Item',\n            'stylesheet' : 'taoQtiItem/qtiDefaultRenderer/renderers/Stylesheet',\n            'outcomeDeclaration' : 'taoQtiItem/qtiDefaultRenderer/renderers/OutcomeDeclaration',\n            'responseDeclaration' : 'taoQtiItem/qtiDefaultRenderer/renderers/ResponseDeclaration',\n            'responseProcessing' : 'taoQtiItem/qtiDefaultRenderer/renderers/ResponseProcessing',\n            'math' : 'taoQtiItem/qtiDefaultRenderer/renderers/Math',\n            'object' : 'taoQtiItem/qtiDefaultRenderer/renderers/Object',\n            'modalFeedback' : 'taoQtiItem/qtiDefaultRenderer/renderers/ModalFeedback',\n            'rubricBlock' : 'taoQtiItem/qtiDefaultRenderer/renderers/RubricBlock',\n            'associateInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/AssociateInteraction',\n            'choiceInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/ChoiceInteraction',\n            'extendedTextInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/ExtendedTextInteraction',\n            'gapMatchInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/GapMatchInteraction',\n            'graphicAssociateInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/GraphicAssociateInteraction',\n            'graphicGapMatchInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/GraphicGapMatchInteraction',\n            'graphicOrderInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/GraphicOrderInteraction',\n            'hotspotInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/HotspotInteraction',\n            'hottextInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/HottextInteraction',\n            'inlineChoiceInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/InlineChoiceInteraction',\n            'matchInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/MatchInteraction',\n            'mediaInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/MediaInteraction',\n            'orderInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/OrderInteraction',\n            'selectPointInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/SelectPointInteraction',\n            'sliderInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/SliderInteraction',\n            'textEntryInteraction' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/TextEntryInteraction',\n            'prompt' : 'taoQtiItem/qtiDefaultRenderer/renderers/interactions/Prompt',\n            'associableHotspot' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/AssociableHotspot',\n            'gap' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/Gap',\n            'gapImg' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/GapImg',\n            'gapText' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/GapText',\n            'hotspotChoice' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/HotspotChoice',\n            'hottext' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/Hottext',\n            'inlineChoice' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/InlineChoice',\n            'simpleAssociableChoice' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/SimpleAssociableChoice',\n            'simpleChoice' : 'taoQtiItem/qtiDefaultRenderer/renderers/choices/SimpleChoice'\n        }\n    }\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'taoQtiItem/qtiDefaultRenderer/renderers/config'], function(_, defaultRenderConfig){\n    var locations = _.extend(_.clone(defaultRenderConfig.locations), {\n        'assessmentItem' : 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        '_container' : 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        '_simpleFeedbackRule' : false,\n        'stylesheet' : 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        'outcomeDeclaration' : 'taoQtiItem/qtiCommonRenderer/renderers/OutcomeDeclaration',\n        'responseDeclaration' : 'taoQtiItem/qtiCommonRenderer/renderers/ResponseDeclaration',\n        'responseProcessing' : 'taoQtiItem/qtiCommonRenderer/renderers/ResponseProcessing',\n        'img' : 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        'math' : 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        'object' : 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        'rubricBlock' : 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        'modalFeedback' : 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        'prompt' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        'choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'hottext' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        'gap' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        'gapText' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        'inlineChoice' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        'hottextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        'gapImg' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        'customInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    });\n    return {\n        name:'commonRenderer',\n        locations : locations\n    };\n});\n\n\n\n\n\n","define('taoQtiItem/qtiCreator/renderers/config',['lodash', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function(_, commonRenderConfig){\n\n    var locations = _.defaults({\n        '_container' : 'taoQtiItem/qtiCreator/renderers/Container',\n        'assessmentItem' : 'taoQtiItem/qtiCreator/renderers/Item',\n        'rubricBlock' : 'taoQtiItem/qtiCreator/renderers/RubricBlock',\n        'img' : 'taoQtiItem/qtiCreator/renderers/Img',\n        'math' : 'taoQtiItem/qtiCreator/renderers/Math',\n        'object' : 'taoQtiItem/qtiCreator/renderers/Object',\n        'modalFeedback' : 'taoQtiItem/qtiCreator/renderers/ModalFeedback',\n        'choiceInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/ChoiceInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/OrderInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/MatchInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/AssociateInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/InlineChoiceInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/TextEntryInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/HotspotInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/SelectPointInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GraphicOrderInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GraphicGapMatchInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/UploadInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/SliderInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/ExtendedTextInteraction',\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleChoice.OrderInteraction',\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GapMatchInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/HottextInteraction',\n        'customInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/PortableCustomInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/EndAttemptInteraction',\n        'infoControl' : 'taoQtiItem/qtiCreator/renderers/PortableInfoControl',\n        'gap' : 'taoQtiItem/qtiCreator/renderers/choices/Gap',\n        'gapText' : 'taoQtiItem/qtiCreator/renderers/choices/GapText',\n        'hottext' : 'taoQtiItem/qtiCreator/renderers/choices/Hottext'\n    }, commonRenderConfig.locations);\n\n    return {\n        name : 'creatorRenderer',\n        locations : locations\n    };\n});\n\n","define('taoQtiItem/qtiCreator/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCreator/renderers/config'], function(Renderer, config){\n    return Renderer.build(config.locations, config.name);\n});\n","define('taoQtiItem/qtiCreator/helper/creatorRenderer',[\n    'taoQtiItem/qtiCreator/renderers/Renderer',\n    'helpers',\n    'jquery',\n    'lodash',\n    'util/dom'\n], function(Renderer, helpers, $, _, dom){\n    \"use strict\";\n    //configure and instanciate once only:\n    var _creatorRenderer = null;\n    \n    //list of configurable interactions\n    //some interactions allow additional non-standard but sometimes useful configuration\n    var _configurableInteractions = ['endAttempt'];\n    \n    /**\n     * Extract interaction-specific configuration from the main one\n     * \n     * @param {object} config - the configuration object of the creatorRenderer\n     * @returns {module.exports.properties|Function.properties|config.properties}\n     */\n    function _extractInteractionsConfig(config){\n        var ret = {};\n        if(config && config.properties){\n            _.each(_configurableInteractions, function(interactionName){\n                if(config.properties[interactionName]){\n                    ret[interactionName] = config.properties[interactionName];\n                }\n            });\n        }\n        return ret;\n    }\n    \n    /**\n     * Get a preconfigured renderer singleton\n     * \n     * @param {Boolean} reset\n     * @param {Object} config\n     * @returns {Object} - a configured instance of creatorRenderer\n     */\n    var get = function(reset, config){\n        if(!_creatorRenderer || reset){\n\n            var $bodyEltForm = _creatorRenderer ? _creatorRenderer.getOption('bodyElementOptionForm') : null;\n            var mediaSources = config.properties.mediaSources || [];\n            if(reset\n                || !$bodyEltForm\n                || !$bodyEltForm.length\n                || !dom.contains($bodyEltForm)){\n\n                _creatorRenderer = new Renderer({\n                    baseUrl : '',\n                    lang : '',\n                    uri : '',\n                    shuffleChoices : false,\n                    itemOptionForm : $('#item-editor-item-property-bar .panel'),\n                    interactionOptionForm : $('#item-editor-interaction-property-bar .panel'),\n                    choiceOptionForm : $('#item-editor-choice-property-bar .panel'),\n                    responseOptionForm : $('#item-editor-response-property-bar .panel'),\n                    bodyElementOptionForm : $('#item-editor-body-element-property-bar .panel'),\n                    textOptionForm : $('#item-editor-text-property-bar .panel'),\n                    modalFeedbackOptionForm : $('#item-editor-modal-feedback-property-bar .panel'),\n                    mediaManager : {\n                        appendContainer : '#mediaManager',\n                        browseUrl : helpers._url('files', 'ItemContent', 'taoItems'),\n                        uploadUrl : helpers._url('upload', 'ItemContent', 'taoItems'),\n                        deleteUrl : helpers._url('delete', 'ItemContent', 'taoItems'),\n                        downloadUrl : helpers._url('download', 'ItemContent', 'taoItems'),\n                        fileExistsUrl : helpers._url('fileExists', 'ItemContent', 'taoItems'),\n                        mediaSources : mediaSources\n                    },\n                    interactions : _extractInteractionsConfig(config)\n                });\n\n            }\n        }\n\n        return _creatorRenderer;\n    };\n\n\n    return {\n        get : function(reset, config){\n            return get(reset, config);\n        },\n        setOption : function(name, value){\n            return get().setOption(name, value);\n        },\n        setOptions : function(options){\n            return get().setOptions(options);\n        },\n        load : function(qtiClasses, done){\n            return get().load(function(){\n                if(_.isFunction(done)){\n                    done.apply(this, arguments);\n                }\n            }, qtiClasses);\n        }\n    };\n\n});\n\n","define('taoQtiItem/qtiXmlRenderer/renderers/config',[],function(){\n    return {\n        name : 'xmlRenderer',\n        locations : {\n            '_container' : 'taoQtiItem/qtiXmlRenderer/renderers/Container',\n            'assessmentItem' : 'taoQtiItem/qtiXmlRenderer/renderers/Item',\n            'stylesheet' : 'taoQtiItem/qtiXmlRenderer/renderers/Stylesheet',\n            'responseDeclaration' : 'taoQtiItem/qtiXmlRenderer/renderers/ResponseDeclaration',\n            'outcomeDeclaration' : 'taoQtiItem/qtiXmlRenderer/renderers/OutcomeDeclaration',\n            'responseProcessing' : 'taoQtiItem/qtiXmlRenderer/renderers/ResponseProcessing',\n            '_simpleFeedbackRule' : 'taoQtiItem/qtiXmlRenderer/renderers/responses/SimpleFeedbackRule',\n            'math' : 'taoQtiItem/qtiXmlRenderer/renderers/Math',\n            'img' : 'taoQtiItem/qtiXmlRenderer/renderers/Img',\n            'object' : 'taoQtiItem/qtiXmlRenderer/renderers/Object',\n            'modalFeedback' : 'taoQtiItem/qtiXmlRenderer/renderers/feedbacks/ModalFeedback',\n            'rubricBlock' : 'taoQtiItem/qtiXmlRenderer/renderers/RubricBlock',\n            'associateInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/AssociateInteraction',\n            'choiceInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/ChoiceInteraction',\n            'extendedTextInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/ExtendedTextInteraction',\n            'gapMatchInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GapMatchInteraction',\n            'graphicAssociateInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GraphicAssociateInteraction',\n            'graphicGapMatchInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GraphicGapMatchInteraction',\n            'graphicOrderInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GraphicOrderInteraction',\n            'hotspotInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/HotspotInteraction',\n            'hottextInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/HottextInteraction',\n            'inlineChoiceInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/InlineChoiceInteraction',\n            'matchInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/MatchInteraction',\n            'mediaInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/MediaInteraction',\n            'orderInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/OrderInteraction',\n            'selectPointInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/SelectPointInteraction',\n            'sliderInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/SliderInteraction',\n            'textEntryInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/TextEntryInteraction',\n            'uploadInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/UploadInteraction',\n            'prompt' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/Prompt',\n            'associableHotspot' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/AssociableHotspot',\n            'gap' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/Gap',\n            'gapImg' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/GapImg',\n            'gapText' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/GapText',\n            'hotspotChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/HotspotChoice',\n            'hottext' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/Hottext',\n            'inlineChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/InlineChoice',\n            'simpleAssociableChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/SimpleAssociableChoice',\n            'simpleChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/SimpleChoice',\n            'customInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/PortableCustomInteraction',\n            'endAttemptInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/EndAttemptInteraction',\n            'infoControl' : 'taoQtiItem/qtiXmlRenderer/renderers/PortableInfoControl'\n        },\n        options : {\n            userRelativeUrl : true\n        }\n    };\n});\n","define('taoQtiItem/qtiXmlRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiXmlRenderer/renderers/config'], function(Renderer, config){\n    return Renderer.build(config.locations, config.name, config.options);\n});\n","//@todo : move this to the ../helper directory\ndefine('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element'], function(_, Class, qtiClasses, Element){\n\n    var Loader = Class.extend({\n        init : function(item, classesLocation){\n\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n\n            this.item = item || null;//starts either from scratch or with an existing item object\n            this.setClassesLocation(classesLocation || qtiClasses);//load default location for qti classes model\n        },\n        setClassesLocation : function(qtiClasses){\n            _.extend(this.classesLocation, qtiClasses);\n            return this;\n        },\n        getRequiredClasses : function(data){\n            var ret = [];\n            for(var i in data){\n                if(i === 'qtiClass' && data[i] !== '_container' && i !== 'relatedItem'){//although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                }else if(typeof(data[i]) === 'object'){\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n            return ret;\n        },\n        loadRequiredClasses : function(data, callback, reload){\n\n            var requiredClasses = this.getRequiredClasses(data, reload), required = [];\n\n            for(var i in requiredClasses){\n                var requiredClass = requiredClasses[i];\n                if(this.classesLocation[requiredClass]){\n                    required.push(this.classesLocation[requiredClass]);\n                }else{\n                    throw new Error('missing qti class location declaration : ' + requiredClass);\n                }\n            }\n\n            var _this = this;\n            require(required, function(){\n                _.each(arguments, function(QtiClass){\n                    _this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(_this, _this.qti);\n            });\n        },\n        getLoadedClasses : function(){\n            return _.keys(this.qti);\n        },\n        loadItemData : function(data, callback){\n\n            var _this = this;\n            _this.loadRequiredClasses(data, function(Qti){\n\n                if(typeof(data) === 'object' && data.qtiClass === 'assessmentItem'){\n                    _this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    _this.loadContainer(_this.item.getBody(), data.body);\n\n                    for(var i in data.outcomes){\n                        var outcome = _this.buildOutcome(data.outcomes[i]);\n                        if(outcome){\n                            _this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n                    for(var i in data.feedbacks){\n                        var feedback = _this.buildElement(data.feedbacks[i]);\n                        if(feedback){\n                            _this.item.addModalFeedback(feedback);\n                        }\n                    }\n                    for(var i in data.stylesheets){\n                        var stylesheet = _this.buildElement(data.stylesheets[i]);\n                        if(stylesheet){\n                            _this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    for(var i in data.responses){\n                        var response = _this.buildResponse(data.responses[i]);\n                        if(response){\n                            _this.item.addResponseDeclaration(response);\n\n                            var feedbackRules = data.responses[i].feedbackRules;\n                            if(feedbackRules){\n                                _.forIn(feedbackRules, function(fbData, serial){\n                                    response.feedbackRules[serial] = _this.buildSimpleFeedbackRule(fbData);\n                                });\n                            }\n                        }\n                    }\n\n                    if(data.responseProcessing){\n                        _this.item.setResponseProcessing(_this.buildResponseProcessing(data.responseProcessing));\n                    }\n                    _this.item.setNamespaces(data.namespaces);\n                }\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, _this.item);\n                }\n            });\n        },\n        loadElement : function(data, callback){\n\n            var _this = this;\n\n            _this.loadRequiredClasses(data, function(Qti){\n\n                var element = _this.buildElement(data);\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item \n         * \n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements : function(data, callback){\n\n            var _this = this;\n\n            if(_this.item){\n\n                this.loadRequiredClasses(data, function(){\n\n                    var allElements = _this.item.getComposingElements();\n\n                    for(var i in data){\n                        var elementData = data[i];\n                        if(elementData && elementData.qtiClass && elementData.serial){\n                            //find and update element\n                            if(allElements[elementData.serial]){\n                                _this.loadElementData(allElements[elementData.serial], elementData);\n                            }\n                        }\n                    }\n\n                    if(typeof(callback) === 'function'){\n                        callback.call(_this, _this.item);\n                    }\n                });\n            }else{\n                throw 'QtiLoader : cannot load elements in empty item';\n            }\n\n        },\n        buildResponse : function(data){\n\n            var response = this.buildElement(data);\n\n            response.template = data.howMatch || null;\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if(_.size(data.mapping)){\n                response.mapEntries = data.mapping;\n            }else if(_.size(data.areaMapping)){\n                response.mapEntries = data.areaMapping;\n            }else{\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule : function(data){\n\n            var feedbackRule = this.buildElement(data);\n\n            if(data.condition){\n                feedbackRule.condition = data.condition;\n            }\n            if(data.comparedValue){\n                feedbackRule.comparedValue = data.comparedValue;\n            }\n\n            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            return feedbackRule;\n        },\n        buildOutcome : function(data){\n            var outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n            return outcome;\n        },\n        buildResponseProcessing : function(data){\n            var rp = this.buildElement(data);\n            if(data && data.processingType){\n                if(data.processingType === 'custom'){\n                    rp.xml = data.data;\n                    rp.processingType = 'custom';\n                }else{\n                    rp.processingType = 'templateDriven';\n                }\n            }\n            return rp;\n        },\n        loadContainer : function(bodyObject, bodyData){\n            if(!Element.isA(bodyObject, '_container')){\n                throw 'bodyObject must be a QTI Container';\n            }\n\n            if(bodyData && typeof bodyData.body === 'string' && (typeof bodyData.elements === 'array' || typeof bodyData.elements === 'object')){\n                for(var serial in bodyData.elements){\n                    var eltData = bodyData.elements[serial];\n                    //check if class is loaded:\n                    var element = this.buildElement(eltData);\n                    if(element){\n                        bodyObject.setElement(element, bodyData.body);\n                    }\n                }\n                bodyObject.body(bodyData.body);\n            }else{\n                throw 'wrong bodydata format';\n            }\n        },\n        buildElement : function(elementData){\n            var elt = null;\n            if(elementData && elementData.qtiClass && elementData.serial){\n                var className = elementData.qtiClass;\n                if(this.qti[className]){\n                    elt = new this.qti[className](elementData.serial);\n                    this.loadElementData(elt, elementData);\n                }else{\n                    throw 'the qti element class does not exist: ' + className;\n                }\n            }else{\n                throw 'wrong elementData format';\n            }\n            return elt;\n        },\n        loadElementData : function(element, data){\n\n            element.setAttributes(_.clone(data.attributes) || {});\n\n            if(element.body && data.body){\n                if(element.bdy){\n                    this.loadContainer(element.getBody(), data.body);\n                }\n            }\n\n            if(element.object && data.object){\n                if(element.object){\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if(Element.isA(element, 'interaction')){\n                this.loadInteractionData(element, data);\n            }else if(Element.isA(element, 'choice')){\n                this.loadChoiceData(element, data);\n            }else if(Element.isA(element, 'math')){\n                this.loadMathData(element, data);\n            }else if(Element.isA(element, 'infoControl')){\n                this.loadPicData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData : function(interaction, data){\n            if(Element.isA(interaction, 'blockInteraction')){\n                if(data.prompt){\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if(Element.isA(interaction, 'customInteraction')){\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices : function(interaction, data){\n\n            //note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if(data.choices){\n                if(Element.isA(interaction, 'matchInteraction')){\n                    for(var set = 0; set < 2; set++){\n                        if(!data.choices[set]){\n                            throw 'missing match set #' + set;\n                        }\n                        var matchSet = data.choices[set];\n                        for(var serial in matchSet){\n                            var choice = this.buildElement(matchSet[serial]);\n                            if(choice){\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                }else{\n                    for(var serial in data.choices){\n                        var choice = this.buildElement(data.choices[serial]);\n                        if(choice){\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if(Element.isA(interaction, 'graphicGapMatchInteraction')){\n                    if(data.gapImgs){\n                        for(var serial in data.gapImgs){\n                            var gapImg = this.buildElement(data.gapImgs[serial]);\n                            if(gapImg){\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n\n            }\n\n        },\n        loadChoiceData : function(choice, data){\n            if(Element.isA(choice, 'textVariableChoice')){\n                choice.val(data.text);\n            }else if(Element.isA(choice, 'gapImg')){\n                //has already been taken care of in buildElement()\n            }else if(Element.isA(choice, 'containerChoice')){\n                //has already been taken care of in buildElement()\n            }\n        },\n        loadObjectData : function(object, data){\n            object.setAttributes(data.attributes);\n            //@todo: manage object like a container\n            if(data._alt){\n                if(data._alt.qtiClass === 'object'){\n                    object._alt = Loader.buildElement(data._alt);\n                }else{\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData : function(math, data){\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            math.annotations = data.annotations || {};\n        },\n        loadPciData : function(pci, data){\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData : function(pic, data){\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n    \n    function loadPortableCustomElementData(portableElement, data){\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.properties = data.properties;\n        portableElement.libraries = data.libraries;\n    }\n    \n    return Loader;\n});\n","define('taoQtiItem/qtiCreator/helper/simpleParser',[\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/qtiItem/core/Loader'\n], function(_, $, util, Loader){\n    \"use strict\";\n    var _parsableElements = ['img', 'object'];\n    var _qtiClassNames = {\n        rubricblock : 'rubricBlock'\n    };\n\n    var _defaultOptions = {\n        ns : {\n            math : ''\n        },\n        loaded : null,\n        model : null\n    };\n\n    function _getElementSelector(qtiClass, ns){\n        return ns ? ns + \"\\\\:\" + qtiClass + ','+qtiClass : qtiClass;\n    }\n\n    function getQtiClassFromXmlDom($node){\n\n        var qtiClass = $node.prop('tagName').toLowerCase();\n\n        //remove ns : \n        qtiClass = qtiClass.replace(/.*:/, '');\n\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\n    }\n\n    function buildElement($elt){\n\n        var qtiClass = getQtiClassFromXmlDom($elt);\n\n        var elt = {\n            qtiClass : qtiClass,\n            serial : util.buildSerial(qtiClass + '_'),\n            attributes : {}\n        };\n\n        $.each($elt[0].attributes, function(){\n            if(this.specified){\n                elt.attributes[this.name] = this.value;\n            }\n        });\n\n        return elt;\n    }\n\n    function buildMath($elt, options){\n\n        var elt = buildElement($elt);\n\n        //set annotations:\n        elt.annotations = {};\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function(){\n            var $annotation = $(this);\n            var encoding = $annotation.attr('encoding');\n            if(encoding){\n                elt.annotations[encoding] = $annotation.html();\n            }\n            $annotation.remove();\n        });\n        \n        //set math xml\n        elt.mathML = $elt.html();\n        \n        //set ns: \n        elt.ns = {\n            name : 'm',\n            uri : 'http://www.w3.org/1998/Math/MathML'//@todo : remove hardcoding there\n        };\n\n        return elt;\n    }\n\n    function parseContainer($container, opts){\n\n        var options = _.merge(_.clone(_defaultOptions), opts || {});\n\n        var ret = {\n            serial : util.buildSerial('_container_'),\n            body : '',\n            elements : {}\n        };\n\n        _.each(_parsableElements, function(qtiClass){\n\n            $container.find(qtiClass).each(function(){\n\n                var $qtiElement = $(this);\n                var element = buildElement($qtiElement, opts);\n\n                ret.elements[element.serial] = element;\n                $qtiElement.replaceWith(_placeholder(element));\n\n            });\n\n        });\n        \n        $container.find(_getElementSelector('math', options.ns.math)).each(function(){\n\n            var $qtiElement = $(this);\n            var element = buildMath($qtiElement, opts);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n\n        });\n\n        ret.body = $container.html();\n\n        return ret;\n    }\n\n    function _placeholder(element){\n        return '{{' + element.serial + '}}';\n    }\n\n    var parser = {\n        parse : function(xmlStr, options){\n\n            var $container = $(xmlStr);\n\n            var element = buildElement($container, options);\n\n            var data = parseContainer($container, options);\n\n            if(data.body !== undefined){\n                element.body = data;\n            }\n\n            if(_.isFunction(options.loaded) && options.model){\n                var loader = new Loader().setClassesLocation(options.model);\n                loader.loadElement(element, options.loaded);\n            }\n\n            return element;\n        }\n    };\n\n    return parser;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n * FIXME There is a strong dependency to the QtiItem extension, due to the reuse of the QTI Editor for the rubricblock. \n */\ndefine('taoQtiTest/controller/creator/views/rubricblock',[\n    'jquery',\n    'lodash',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiItem/qtiCreator/model/qtiClasses',\n    'taoQtiItem/qtiCreator/helper/creatorRenderer',\n    'taoQtiItem/qtiXmlRenderer/renderers/Renderer',\n    'taoQtiItem/qtiCreator/helper/simpleParser',\n    'helpers'\n], function($, _, actions, qtiClasses, creatorRenderer, XmlRenderer, simpleParser, helpers){\n    'use strict';\n\n    /**\n     * Set up a rubric block: init action beahviors. Called for each one.\n     *\n     * @param {jQueryElement} $rubricBlock - the rubricblock to set up\n     */\n    var setUp = function setUp($rubricBlock, model, data){\n        \n        actions.properties($rubricBlock, 'rubricblock', model, propHandler);\n        setUpEditor();\n\n        $('formatting-toggler', $rubricBlock).click(function(){\n\n            $rubricBlock.find('.cke_editable').focus().click();\n        });\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler(propView){\n\n            rbViews(propView.getView());\n\n            $rubricBlock.parents('.testpart').on('delete', removePropHandler);\n            $rubricBlock.parents('.section').on('delete', removePropHandler);\n            $rubricBlock.on('delete', removePropHandler);\n\n            function removePropHandler(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the views select box\n         * @private\n         * @param {jQuerElement} $propContainer - the element container\n         */\n        function rbViews($propContainer){\n            var $select = $('select', $propContainer);\n\n            $select.select2({\n                'width' : '100%'\n            }).on(\"select2-removed\", function(e){\n                if($select.select2('val').length === 0){\n                    $select.select2('val', [1]);\n                }\n            });\n\n            if($select.select2('val').length === 0){\n                $select.select2('val', [1]);\n            }\n        }\n\n        function setUpEditor(){\n\n            var mathNs = 'm';//for 'http://www.w3.org/1998/Math/MathML'\n            var $rubricBlockBinding = $('.rubricblock-binding', $rubricBlock);\n            var $rubricBlockContent = $('.rubricblock-content', $rubricBlock);\n            var $editorForm = $('<div class=\"rubricblock-formatting-props props clearfix\">');\n               //uncomment to manage images\n               $editorForm.appendTo('.test-creator-props').hide();\n            var fakeXml = '<rubricBlock>' + $rubricBlockBinding.html() + '</rubrickBlock>';\n\n            var xmlRenderer = new XmlRenderer({shuffleChoices : false}).load();\n\n            //parse xml\n            simpleParser.parse(fakeXml, {\n                ns : {\n                    math : mathNs\n                },\n                model : qtiClasses,\n                loaded : function(rubricBlock){\n\n                    var uri = data.uri, lang = 'en-US';\n                    \n                    creatorRenderer.setOptions({\n                        uri : uri,\n                        lang : lang,\n                        baseUrl : helpers._url('download', 'TestContent', 'taoQtiTest', {uri : uri, lan : lang, path : ''}),\n                        interactionOptionForm : $(),\n                        choiceOptionForm : $(),\n                        responseOptionForm : $(),\n                        bodyElementOptionForm : $editorForm,\n                        itemOptionForm : $(),\n                        textOptionForm : $(),\n                        mediaManager : {\n                            appendContainer : '#test-creator',\n                            browseUrl : helpers._url('files', 'TestContent', 'taoQtiTest'),\n                            uploadUrl : helpers._url('upload', 'TestContent', 'taoQtiTest'),\n                            deleteUrl : helpers._url('delete', 'TestContent', 'taoQtiTest'),\n                            downloadUrl : helpers._url('download', 'TestContent', 'taoQtiTest')\n                        }\n                    });\n\n                    creatorRenderer.get().load(function(){\n\n                        var syncRubricBlockContent = _.throttle(function(){\n                             $rubricBlockBinding\n                                .html($(rubricBlock.render(xmlRenderer)).html())\n                                .trigger('change');\n                        }, 500);\n\n                        rubricBlock.setRenderer(this);\n                        $rubricBlockContent.html(rubricBlock.render());\n                        var widget = rubricBlock.postRender({\n                            ready : function(){\n                                this.changeState('active');\n                            }\n                        });\n\n                        //disable some elements that are not yet ready or not useful   \n                        $('.mini-tlb [data-role=\"delete\"]', $rubricBlockContent).remove();\n                        $rubricBlockContent.on('editorready', function(){\n                            //comment to manage images\n                            $('.cke_button__taoqtiimage').remove();\n                            $('.cke_button__taoqtimaths').remove();\n                        });\n\n                        widget.on('containerBodyChange', function(data){\n                            if(data.container.serial === rubricBlock.getBody().serial){\n                                syncRubricBlockContent();\n                            }\n\n                        }, true);\n\n                    }, this.getLoadedClasses());\n                }\n            });\n        }\n    };\n\n    /**\n     * The rubriclockView setup RB related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/rubricblock\n     */\n    return {\n        setUp : setUp\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/qtiTest',['lodash', 'i18n'], function(_, __){\n    'use strict';\n\n    /**\n     * Utils to manage the QTI Test model \n     * @exports taoQtiTest/controller/creator/qtiTestHelper\n     */\n    var qtiTestHelper = {\n\n        /**\n         * Extract qti identifiers from a model\n         * @param {Object} obj - the model to extract id from\n         * @returns {Array} the extracted identifiers\n         */       \n        extractIdentifiers : function(obj){\n            var self = this;\n            var identifiers = [];\n            if(_.has(obj, 'identifier')){\n                identifiers = identifiers.concat(obj.identifier.toLowerCase());\n            } \n            _.flatten(_.forEach(obj, function(value) {\n                identifiers = identifiers.concat(typeof value === \"object\" ? self.extractIdentifiers(value) : []);\n            }), true);\n            return identifiers;\n        },\n\n        /**\n         * Get a valid and avialable qti identifier\n         * @param {String} qtiType - the type of element you want an id for\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {String} the identifier\n         */       \n        getIdentifier : function(qtiType, lockedIdentifiers){\n            var index = 1;\n            var suggestion;\n            var glue =  '-';\n            \n            do {\n                suggestion = qtiType +  glue + (index++);\n            } while(_.contains(lockedIdentifiers, suggestion.toLowerCase()));\n\n            lockedIdentifiers.push(suggestion.toLowerCase());\n\n            return suggestion;\n        },\n\n        /**\n         * Gives you a validator that check QTI id format\n         * @returns {Object} the validator\n         */\n        idFormatValidator : function(){\n            var qtiIdPattern = /^[_a-zA-Z]{1}[a-zA-Z0-9\\-._]{0,31}$/i;\n            return {\n                name : 'testIdFormat',\n                message : __('is not a valid identifier (alphanum, underscore, dash and dots.)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiIdPattern.test(value));\n                    } \n                }\n            };\n        },\n\n        \n        /**\n         * Gives you a validator that check if a QTI id is available\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {Object} the validator\n         */\n        idAvailableValidator : function(lockedIdentifiers){\n            return {\n                name : 'testIdAvailable',\n                message : __('is already used in the test.'),\n                validate : function(value, callback, options){\n                    if(typeof callback === 'function'){\n                        callback(!_.contains(_.values(lockedIdentifiers), value.toLowerCase()) || (options.original && value === options.original));\n                    } \n                }\n            };\n        },\n \n        /**\n         * Does the value contains the type type\n         * @param {Object} value \n         * @param {string} type\n         * @returns {boolean} \n         */\n        filterQtiType : function (value, type){\n             return value['qti-type'] && value['qti-type'] === type;\n        },\n    \n        /**\n         * Add the 'qti-type' properties to object that miss it, using the parent key name\n         * @param {Object|Array} collection\n         * @param {string} parentType\n         */\n        addMissingQtiType : function (collection, parentType) {\n              var self = this;\n              _.forEach(collection, function(value, key) {\n                if (_.isObject(value) && !_.isArray(value) && !_.has(value, 'qti-type')) {\n                    if (_.isNumber(key)) {\n                        if (parentType) {\n                            value['qti-type'] = parentType;\n                        }\n                    } else {\n                        value['qti-type'] = key;\n                    }\n                }\n                if (_.isArray(value)) {\n                    self.addMissingQtiType(value, key.replace(/s$/, ''));\n                } else if (_.isObject(value)) {\n                   self.addMissingQtiType(value);\n                }\n            });\n        },\n    \n        /**\n         * Applies consolidation rules to the model\n         * @param {Object} model\n         * @returns {Object}\n         */\n        consolidateModel : function(model){\n            if(model && model.testParts && _.isArray(model.testParts) && model.testParts[0]){\n                var testPart = model.testParts[0];\n                if(testPart.assessmentSections && _.isArray(testPart.assessmentSections)){\n                     _.forEach(testPart.assessmentSections, function(assessmentSection, key) {\n                         \n                         //remove ordering is shuffle is false\n                         if(assessmentSection.ordering && \n                                 assessmentSection.ordering.shuffle !== undefined && assessmentSection.ordering.shuffle === false){\n                             delete assessmentSection.ordering;\n                         }\n\n                          if(assessmentSection.rubricBlocks && _.isArray(assessmentSection.rubricBlocks)) {\n\n                              //remove rubrick blocks if empty\n                              if (assessmentSection.rubricBlocks.length === 0 || \n                                      (assessmentSection.rubricBlocks.length === 1 && assessmentSection.rubricBlocks[0].content.length === 0) ) {\n                                  \n                                  delete assessmentSection.rubricBlocks;\n                              }\n                              //ensure the view attribute is present\n                              else if(assessmentSection.rubricBlocks.length > 0){\n                                _.forEach(assessmentSection.rubricBlocks, function(rubricBlock){\n                                        rubricBlock.views = ['candidate'];\n                                        //change once views are supported\n                                        //if(rubricBlock && rubricBlock.content && (!rubricBlock.views || (_.isArray(rubricBlock.views) && rubricBlock.views.length === 0))){\n                                            //rubricBlock.views = ['candidate'];\n                                        //}\n                                  });\n                              }\n                        }\n                     });\n                }\n            }\n            return model;\n        }\n    };\n\n    return  qtiTestHelper;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/section',[\n    'jquery', 'lodash', 'uri', \n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/views/rubricblock',\n    'taoQtiTest/controller/creator/templates/index', \n    'taoQtiTest/controller/creator/helpers/qtiTest'\n],\nfunction($, _, uri, actions, itemRefView, rubricBlockView, templates, qtiTestHelper){\n    'use strict';\n        \n   /**\n    * Set up a section: init action beahviors. Called for each section.\n    *\n    * @param {jQueryElement} $sectuin - the section to set up\n    * @param {Object} model - the data model to bind to the test part\n    * @param {Object} [data] - additionnal data used by the setup\n    * @param {Array} [data.identifiers] - the locked identifiers\n    */\n   var setUp = function setUp ($section, model, data){\n\n        var $actionContainer = $('h2', $section);\n\n        \n        actions.properties($actionContainer, 'section', model, propHandler);\n        actions.move($actionContainer, 'sections', 'section');\n        itemRefs();\n        acceptItemRefs();\n        rubricBlocks();\n        addRubricBlock();\n\n        //trigger for the case the section is added an a selection is ongoing\n\n\n        /**\n         *  Perform some binding once the property view is create\n         *  @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            var $view = propView.getView();\n\n           //enable/disable selection\n           var $selectionSwitcher = $('[name=section-enable-selection]', $view);\n           var $selectionSelect = $('[name=section-select]', $view);\n           var $selectionWithRep = $('[name=section-with-replacement]', $view);\n\n           var switchSelection = function switchSelection(){\n                if($selectionSwitcher.prop('checked') === true){\n                   $selectionSelect.incrementer('enable');\n                   $selectionWithRep.removeClass('disabled');\n                } else {\n                   $selectionSelect.incrementer('disable');\n                   $selectionWithRep.addClass('disabled');\n                }\n           };\n           $selectionSwitcher.on('change', switchSelection);\n           $selectionSwitcher.on('change', function updateModel(){\n                if(!$selectionSwitcher.prop('checked')){\n                    $selectionSelect.val(0);\n                    $selectionWithRep.prop('checked', false);\n                    delete model.selection;\n                }\n           });\n\n           $selectionSwitcher.prop('checked', !!model.selection).trigger('change');\n\n           //listen for databinder change to update the test part title\n           var $title =  $('[data-bind=title]', $section);\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentSection'){\n                    $title.text(model.title);\n                }\n            });\n\n            $section.parents('.testpart').on('deleted.deleter', removePropHandler);\n            $section.on('deleted.deleter', removePropHandler);\n            \n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the item refs that already belongs to the section\n         * @private\n         */\n        function itemRefs(){\n            \n            if(!model.sectionParts){\n                model.sectionParts = [];\n            }                   \n            $('.itemref', $section).each(function(){\n                var $itemRef = $(this);\n                var index = $itemRef.data('bind-index');\n                if(!model.sectionParts[index]){\n                    model.sectionParts[index] = {};\n                }\n\n                itemRefView.setUp($itemRef, model.sectionParts[index]);\n                $itemRef.find('.title').text(\n                    data.labels[uri.encode($itemRef.data('uri'))]\n                );\n            });\n        }\n\n        /**\n         * Make the section to accept the selected items\n         * @private\n         */\n        function acceptItemRefs(){\n            var $selected;\n            var $items     = $('.test-creator-items'); \n            \n             //the item selector trigger a select event \n             $items.on('itemselect.creator', function(e){\n                var selection = Array.prototype.slice.call(arguments, 1);\n                var $placeholder = $('.itemref-placeholder', $section);\n                var $placeholders = $('.itemref-placeholder');\n \n                if(selection.length > 0){\n                    $placeholder.show().off('click').on('click', function(e){\n\n                        _.forEach(selection, function(item){\n                            var $item = $(item);\n                            \n                            addItemRef($('.itemrefs', $section), undefined, {\n                                href        : uri.decode($item.data('uri')),\n                                label       : $.trim($item.clone().children().remove().end().text()),\n                                'qti-type'  : 'assessmentItemRef'\n                            });\n                        }); \n\n                        //reset the current selection\n                        $('.ui-selected', $items).removeClass('ui-selected').removeClass('selected');\n                        $placeholders.hide().off('click');\n                    });    \n                } else {\n                    $placeholders.hide().off('click');\n                }\n             });\n\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '#' + $section.attr('id') + ' .itemrefs')\n              .on('add.binder', '#' + $section.attr('id') + ' .itemrefs', function(e, $itemRef){\n                if(e.namespace === 'binder' && $itemRef.hasClass('itemref')){\n                    var index = $itemRef.data('bind-index'); \n\n                    //initialize the new item ref\n                    itemRefView.setUp($itemRef, model.sectionParts[index]);\n                } \n            });\n\n            //on set up, if there is a selection ongoing, we trigger the event\n            $selected = $('.selected', $items); \n            if($selected.length > 0){\n                $items.trigger('itemselect.creator', $selected);\n            }\n\n        }\n\n        /**\n         * Add a new item ref to the section\n         * @param {jQueryElement} $refList - the element to add the item to\n         * @param {Number} [index] - the position of the item to add\n         * @param {Object} [itemData] - the data to bind to the new item ref\n         */\n        function addItemRef($refList, index, itemData){\n           var $itemRef;\n           var $items = $refList.children('li');\n           index = index || $items.length;\n           itemData.identifier = qtiTestHelper.getIdentifier('item', data.identifiers);\n           itemData.index = index + 1;\n           $itemRef = $(templates.itemref(itemData));\n           if(index > 0){\n               $itemRef.insertAfter($items.eq(index - 1));\n           } else {\n               $itemRef.appendTo($refList); \n           }\n           $refList.trigger('add', [$itemRef, itemData]);\n        }\n\n\n        /**\n         * Set up the rubric blocks that already belongs to the section\n         * @private\n         */\n        function rubricBlocks () {\n            if(!model.rubricBlocks){\n                model.rubricBlocks = [];\n            }                   \n            $('.rubricblock', $section).each(function(){\n                var $rubricBlock = $(this);\n                var index = $rubricBlock.data('bind-index');\n                if(!model.rubricBlocks[index]){\n                    model.rubricBlocks[index] = {};\n                }\n\n                rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\n            });\n        }\n\n        /**\n         * Enable to add new rubrick block\n         * @private\n         */\n        function addRubricBlock () {\n\n            $('.rublock-adder', $section).adder({\n                target: $('.rubricblocks', $section),\n                content : templates.rubricblock,\n                templateData : function(cb){\n                    cb({\n                        'qti-type' : 'rubricBlock',\n                        index  : $('.rubricblock', $section).length,\n                        content : [],\n                        views : [1]\n                    });\n                }\n            });\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document).on('add.binder', '#' + $section.attr('id') + ' .rubricblocks', function(e, $rubricBlock){\n                if(e.namespace === 'binder' && $rubricBlock.hasClass('rubricblock')){\n                    var index = $rubricBlock.data('bind-index'); \n                    $('.rubricblock-binding', $rubricBlock).html('<p>&nbsp;</p>');\n                    rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\n                }\n            });\n        }        \n   };\n\n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n   var listenActionState =  function listenActionState (){\n\n        var $sections;\n        var $actionContainer;\n        \n        $('.sections').each(function(){\n            $sections = $('.section', $(this));\n\n            actions.removable($sections, 'h2');\n            actions.movable($sections, 'section', 'h2');\n        });\n\n        $(document)\n        .on('delete', function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('section')){\n                $parent = $target.parents('.sections');\n                actions.disable($parent.find('.section'), 'h2');\n           }\n        })\n        .on('add change undo.deleter deleted.deleter', function(e){\n            var $target = $(e.target);\n            if($target.hasClass('section') || $target.hasClass('sections')){\n                $sections = $('.section', $target.hasClass('sections') ? $target : $target.parents('.sections'));\n                actions.removable($sections, 'h2');\n                actions.movable($sections, 'section', 'h2');\n            }\n        })\n        .on('open.toggler', '.rub-toggler', function(e){\n            if(e.namespace === 'toggler'){\n               $(this).parents('h2').addClass('active'); \n            }\n        })\n        .on('close.toggler', '.rub-toggler', function(e){\n            if(e.namespace === 'toggler'){\n               $(this).parents('h2').removeClass('active'); \n            }\n        });\n   };\n   \n \n   /**\n     * The sectionView setup section related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/section\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n   };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/testpart',[\n'jquery', 'lodash', \n'taoQtiTest/controller/creator/views/actions', \n'taoQtiTest/controller/creator/views/section',\n'taoQtiTest/controller/creator/templates/index', \n'taoQtiTest/controller/creator/helpers/qtiTest'],\nfunction($, _, actions, sectionView, templates, qtiTestHelper){\n    'use strict';\n\n   /**\n    * Set up a test part: init action beahviors. Called for each test part.\n    *\n    * @param {jQueryElement} $testPart - the testpart to set up\n    * @param {Object} model - the data model to bind to the test part\n    * @param {Object} [data] - additionnal data used by the setup\n    * @param {Array} [data.identifiers] - the locked identifiers\n    */\n   var setUp =  function setUp ($testPart, model, data){\n\n        var $actionContainer = $('h1', $testPart);\n\n        //run setup methods\n        actions.properties($actionContainer, 'testpart', model, propHandler);\n        actions.move($actionContainer, 'testparts', 'testpart');\n        sections();\n        addSection();\n\n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n            \n           var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n           var $identifier =  $('[data-bind=identifier]', $testPart);\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'testPart'){\n                    $identifier.text(model.identifier);\n                }\n            });\n\n            //destroy it when it's testpart is removed\n            $testPart.on('delete', function(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            });\n        }\n\n        /**\n         * Set up sections that already belongs to the test part\n         * @private\n         */\n        function sections(){\n            if(!model.assessmentSections){\n                model.assessmentSections = [];\n            }                   \n            $('.section', $testPart).each(function(){\n                var $section = $(this);\n                var index = $section.data('bind-index');\n                if(!model.assessmentSections[index]){\n                    model.assessmentSections[index] = {};\n                }\n\n                sectionView.setUp($section, model.assessmentSections[index], data);\n            });\n        }\n\n        /**\n         * Enable to add new sections\n         * @private\n         */\n        function addSection(){\n            $('.section-adder', $testPart).adder({\n                target: $('.sections', $testPart),\n                content : templates.section,\n                templateData : function(cb){\n\n                    //create a new section model object to be bound to the template\n                    var sectionIndex = $('.section', $testPart).length;\n                    cb({\n                        'qti-type' : 'assessmentSection',\n                        identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\n                        title : 'Section ' + (sectionIndex + 1),\n                        index : 0,\n                        sectionParts : []             \n                    });\n                }\n            });\n            \n                   \n \n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '#' + $testPart.attr('id') + ' .sections')\n              .on ('add.binder', '#' + $testPart.attr('id') + ' .sections', function(e, $section){\n                if(e.namespace === 'binder' && $section.hasClass('section')){\n                    var index = $section.data('bind-index'); \n                    //initialize the new test part\n                    sectionView.setUp($section, model.assessmentSections[index], data);\n                }\n            });\n        }\n\n   };\n   \n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n   var listenActionState =  function listenActionState (){\n\n        var $testParts = $('.testpart');\n        \n        actions.removable($testParts, 'h1');\n        actions.movable($testParts, 'testpart', 'h1');\n\n        $('.testparts')\n        .on('delete', function(e){\n            var $target = $(e.target);\n            if($target.hasClass('testpart')){\n                actions.disable($('.testpart'), 'h1');\n           }\n        })\n        .on('add change undo.deleter deleted.deleter', function(e){\n            var $target = $(e.target);\n\n            if($target.hasClass('testpart') || $target.hasClass('testparts')){\n                \n                //refresh\n                $testParts = $('.testpart');\n\n                //check state\n                actions.removable($testParts, 'h1');\n                actions.movable($testParts, 'testpart', 'h1');\n            }\n        });\n   };\n \n    /**\n     * The testPartView setup testpart related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/testpart\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n   }; \n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/test',[\n'jquery', 'lodash',\n'taoQtiTest/controller/creator/views/actions', \n'taoQtiTest/controller/creator/views/testpart',\n'taoQtiTest/controller/creator/templates/index',\n'taoQtiTest/controller/creator/helpers/qtiTest'\n], \nfunction($, _, actions, testPartView, templates, qtiTestHelper){\n    'use strict';\n \n   /**\n     * The TestView setup test related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/test\n     * @param {Object} model - the data model to bind to the test\n     * @param {Object} [data] - additionnal data used by the setup\n     * @param {Array} [data.identifiers] - the locked identifiers\n     */\n   var testView = function testView (model, data) {\n       \n        actions.properties($('.test-creator-test > h1'), 'test', model, propHandler);\n        testParts();\n        addTestPart();\n\n        /**\n         * set up the exisiting test part views\n         * @private\n         */\n        function testParts () {\n            if(!model.testParts){\n                model.testParts = [];\n            }                   \n            $('.testpart').each(function(){\n                var $testPart = $(this);\n                var index = $testPart.data('bind-index');\n                if(!model.testParts[index]){\n                    model.testParts[index] = {};\n                }\n\n                testPartView.setUp($testPart, model.testParts[index], data);\n            });\n        }\n        \n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n            \n           var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n           var $title =  $('.test-creator-test > h1 [data-bind=title]');\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentTest'){\n                    $title.text(model.title);\n                }\n            });\n        }\n\n        /**\n         * Enable to add new test parts\n         * @private\n         */\n        function addTestPart () {\n\n            $('.testpart-adder').adder({\n                target: $('.testparts'),\n                content : templates.testpart,\n                templateData : function(cb){\n\n                    //create an new testPart model object to be bound to the template\n                    var testPartIndex = $('.testpart').length;\n                    cb({\n                        'qti-type' : 'testPart',\n                        identifier : qtiTestHelper.getIdentifier('testPart', data.identifiers),\n                        index  : testPartIndex,\n                        navigationMode : 0,\n                        submissionMode : 0,\n                        assessmentSections : [{\n                            'qti-type' : 'assessmentSection',\n                            identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\n                            title : 'Section 1',\n                            index : 0,\n                            sectionParts : []             \n                        }]\n                    });\n                }\n            });\n            \n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '.testparts')\n              .on ('add.binder', '.testparts', function(e, $testPart, added){\n                if(e.namespace === 'binder' && $testPart.hasClass('testpart')){\n                    //initialize the new test part\n                    testPartView.setUp($testPart, model.testParts[added.index], data);\n                }\n            });\n        }\n    };\n\n    return testView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/encoders/dom2qti',['jquery', 'lodash'], function($, _){\n    \n   /**\n    * Get the list of objects attributes to encode\n    * @param {Object} object\n    * @returns {Array}\n    */\n   var getAttributes = function getAttributes(object){\n        return _.omit(object, [\n           'qti-type',\n           'content',\n           'xmlBase',\n           'lang',\n           'label'\n        ]);\n   };\n   \n   /**\n    * Encode object's properties to xml/html string attributes\n    * @param {Object} attributes\n    * @returns {string}\n    */\n   var attrToStr = function attrToStr(attributes){\n     return _.reduce(attributes, function(acc, value, key){\n         if(_.isNumber(value) || (_.isString(value) && !_.isEmpty(value)) ){\n             return acc + ' ' + key + '=\"'+ value + '\" ';\n         }\n         return acc;\n     }, '');  \n   };\n    \n   /**\n    * This encoder is used to transform DOM to JSON QTI and JSON QTI to DOM. \n    * It works now for the rubricBlocks components.\n    * @exports creator/encoders/dom2qti\n    */\n   var Dom2QtiEncoder = {\n       \n       /**\n        * Encode an object to a dom string\n        * @param {Object} modelValue\n        * @returns {string}\n        */\n       encode : function(modelValue){\n           var self = this;\n           \n           if(_.isArray(modelValue)){\n               return _.reduce(modelValue, function(result, value){\n                   return result + self.encode(value);\n               }, '');\n           } else if(_.isObject(modelValue) && modelValue['qti-type']){\n                if(modelValue['qti-type'] === 'textRun'){\n                    return modelValue.content;\n                }\n                var startTag = '<' + modelValue['qti-type'] + attrToStr(getAttributes(modelValue));\n                if(modelValue.content){\n                    return  startTag + '>' + self.encode(modelValue.content) + '</' + modelValue['qti-type'] + '>';\n                } else {\n                    return startTag + '/>';\n                }\n           } \n           return modelValue;\n       },\n       \n       /**\n        * Decode a string that represents a DOM to a QTI formated object\n        * @param {string} nodeValue\n        * @returns {Array}\n        */\n       decode : function(nodeValue){\n           var self = this;\n           var $nodeValue = (nodeValue instanceof $) ? nodeValue : $(nodeValue);\n           var result = [];\n          \n           _.forEach($nodeValue, function(elt){\n               var object;\n                if (elt.nodeType === 3) {\n                    if (!_.isEmpty($.trim(elt.nodeValue))) {\n                        result.push({\n                            'qti-type': 'textRun',\n                            'content': elt.nodeValue,\n                            \"xmlBase\": \"\"\n                        });\n                    }\n                } else if (elt.nodeType === 1){\n                    object = _.merge({\n                        'qti-type': elt.nodeName.toLowerCase(),\n                        'id' : '',\n                        'class' : '',\n                        'xmlBase' : '',\n                        'lang' : '',\n                        'label' : ''\n                    },\n                    _.transform(elt.attributes, function(acc, value) {\n                        acc[value.nodeName] = value.nodeValue;\n                    })\n                    );\n                    if (elt.childNodes.length > 0) {\n                        object.content = self.decode(elt.childNodes);\n                    } \n                    result.push(object);\n                }\n            });\n           return result;\n       }\n   };\n   \n   return Dom2QtiEncoder;\n});\n\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine(\n'taoQtiTest/controller/creator/creator',['module', 'jquery', 'lodash', 'helpers', 'i18n',\n'ui/feedback',\n'core/databindcontroller', \n'taoQtiTest/controller/creator/views/item', \n'taoQtiTest/controller/creator/views/test',\n'taoQtiTest/controller/creator/views/testpart',\n'taoQtiTest/controller/creator/views/section',\n'taoQtiTest/controller/creator/views/itemref',\n'taoQtiTest/controller/creator/encoders/dom2qti',\n'taoQtiTest/controller/creator/templates/index',\n'taoQtiTest/controller/creator/helpers/qtiTest',\n'core/validator/validators'], \nfunction(module, $, _, helpers, __, feedback,  DataBindController, itemView, testView, testPartView, sectionView, itemrefView, Dom2QtiEncoder, templates, qtiTestHelper, validators ){\n    'use strict';\n\n    /**\n     * Generic callback used when retrieving data from the server\n     * @callback DataCallback\n     * @param {Object} data - the received data\n     */\n\n    /**\n     * Call the server to get the list of items\n     * @param {string} url \n     * @param {string} search - a posix pattern to filter items\n     * @param {DataCallback} cb - with items\n     */\n    function loadItems(url, search, cb){\n        $.getJSON(url, {pattern : search}, function(data){\n            if(data && typeof cb === 'function'){\n                cb(data);\n            }\n        });\n    }\n    \n    \n    /**\n     * The test creator controller is the main entry point\n     * and orchestrates data retrieval and view/components loading. \n     * @exports creator/controller\n     */\n    var Controller = {\n        \n         routes : {},\n\n         identifiers: [],\n        \n         /**\n          * Start the controller, main entry method.\n          * @public \n          * @param {Object} options\n          * @param {Object} options.labels - the list of item's labels to give to the ItemView\n          * @param {Object} options.routes - action's urls\n          */\n         start : function(options){\n            var self = this;\n            var $container = $('#test-creator');\n            var $saver = $('#saver');\n\n\n            options = _.merge(module.config(), options || {});\n            options.routes = options.routes || {};\n            options.labels = options.labels || {};\n\n\n            //back button\n            $('#authoringBack').on('click', function(e){\n                e.preventDefault();\n            \n                //Capitalized History means polyfilled by History.js\n                if(window.History){\n                    window.History.back();\n                }\n            });\n\n            //set up the ItemView, give it a configured loadItems ref\n            itemView( _.partial(loadItems, options.routes.items) );\n\n            //Print data binder chandes for DEBUGGING ONLY\n            //$container.on('change.binder', function(e, model){\n                //if(e.namespace === 'binder'){\n                    //console.log(model);\n                //}\n            //});\n            \n            //Data Binding options\n            var binderOptions = _.merge(options.routes, {\n                filters : {\n                    'isItemRef' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentItemRef');\n                    },\n                    'isSection' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentSection');\n                    }\n                },\n                encoders : {\n                  'dom2qti' : Dom2QtiEncoder  \n                },\n                templates : templates,\n                beforeSave : function(model){\n                    //ensure the qti-type is present\n                    qtiTestHelper.addMissingQtiType(model); \n                    \n                    //apply consolidation rules\n                    qtiTestHelper.consolidateModel(model);\n                    return true;\n                }\n            });\n            \n            //set up the databinder\n            var binder = DataBindController\n                .takeControl($container, binderOptions)\n                .get(function(model){\n\n                    //extract ids\n                    self.identifiers = qtiTestHelper.extractIdentifiers(model);\n\n                    //register validators\n                    validators.register('testIdFormat', qtiTestHelper.idFormatValidator());\n                    validators.register('testIdAvailable', qtiTestHelper.idAvailableValidator(self.identifiers));\n            \n                    //once model is loaded, we set up the test view\n                    testView(model, {\n                        uri : options.uri,\n                        identifiers : self.identifiers,\n                        labels : options.labels\n                    });\n    \n                    //listen for changes to update available actions\n                    testPartView.listenActionState();\n                    sectionView.listenActionState();\n                    itemrefView.listenActionState();\n                    itemrefView.resize();\n                \n                    $(window)\n                      .off('resize.qti-test-creator')\n                      .on('resize.qti-test-creator', function(){\n                            itemrefView.resize();\n                    });\n                });\n               \n            //the save button triggers binder's save action.\n            $saver.on('click', function(event){\n                event.preventDefault();\n        \n                if(!$saver.hasClass('disabled')){\n                    $saver.attr('disabled', true).addClass('disabled');\n                    binder.save(function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n\n                        feedback().success(__('Test Saved'));\n\n                    }, function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n                    });\n                }\n            });\n        }\n    };\n    \n    return Controller;\n});\n\n","define('serviceApi/ServiceApi',['jquery', 'urlParser', 'iframeResizer'], function($, UrlParser, iframeResizer){\n    \n    function ServiceApi(baseUrl, parameters, serviceCallId, stateStorage, userService){\n        this.baseUrl = baseUrl;\n        this.parameters = parameters;\n        this.connected = false;\n\n        this.serviceCallId = serviceCallId; \n        this.state = stateStorage;\n        this.userService = userService;\n\n        this.onFinishCallback;\n        this.onKillCallback;\n        this.onDisplayChangeCallback;\n    }\n\n    ServiceApi.SIG_SUCCESS = 0; \n    ServiceApi.SIG_ERROR = 1;\n        \n    ServiceApi.prototype.loadInto = function(frame, connected){\n        var self = this;\n        var $frame = $(frame);\n        var callUrl = this.getCallUrl();        \n        var isCORSAllowed = new UrlParser(callUrl).checkCORS();\n\n        $frame.on('load', function(e){\n             //if we are  in the same domain, we add a variable\n             //to the frame window, so the frame knows it can communicate\n             //with the parent\n            $(document).on('serviceready', function(){\n                self.connect(frame, function(){\n                    $(document).off('serviceready');\n                    if(typeof connected === 'function'){\n                        connected();\n                    }\n                });\n            });\n             if(isCORSAllowed === true){\n                 frame.contentWindow.__knownParent__ = true;\n             }\n         });\n\n        $frame.attr('src', callUrl);\n    };\n\n    ServiceApi.prototype.connect = function(frame, connected){\n        if(this.connected === false && frame.contentWindow){\n            //frame.contentWindow.serviceApi = this;\n            if (typeof(frame.contentWindow.onServiceApiReady) === \"function\") {\n                frame.contentWindow.onServiceApiReady(this);\n                this.connected = true;\n                if(typeof connected === 'function'){\n                    connected();\n                }\n            }\n        }\n    };\n    \n    /**\n     * Get the service call URL\n     * @returns {String} the URI\n     */\n    ServiceApi.prototype.getCallUrl = function(){\n        var params = this.parameters || {};\n        params.serviceCallId = this.serviceCallId;\n        return this.baseUrl + '?' + $.param(params);\n    };\n\n    ServiceApi.prototype.getUserPropertyValues = function(property, callback){\n    \tthis.userService.get(property, callback);\n    };\n    \n    //Context\n    ServiceApi.prototype.getServiceCallId = function(){\n        return this.serviceCallId;\n    };\n\n    //Context\n    ServiceApi.prototype.getState = function(){\n        return this.state.get();\n    };\n\n    ServiceApi.prototype.setState = function(state, callback){\n        return this.state.set(state, callback);\n    };\n\n    // Variables \n    ServiceApi.prototype.getParameter = function(identifier){\n        if (typeof(this.parameters[identifier]) !== \"undefined\") {\n            return this.parameters[identifier];\n        } else {\n            return null;\n        }\n    };\n\n    ServiceApi.prototype.onFinish = function(callback) {\n        this.onFinishCallback = callback;\t\n    };\n\n    ServiceApi.prototype.onKill = function(callback) {\n        this.onKillCallback = callback;\t\n    };\n    \n    ServiceApi.prototype.kill = function(callback) {\n    \tif (typeof this.onKillCallback == 'function') {\n    \t\tthis.onKillCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n    \n    // Flow\n    // valueArray are return parameters of the service.\n    ServiceApi.prototype.finish = function(valueArray) {\n            //return execution to service caller\n            if (typeof this.onFinishCallback === 'function') {\n                    this.onFinishCallback(valueArray);\n            }\n    };\n\n    return ServiceApi;\n\n});\n\n","define('serviceApi/UserInfoService',['jquery'], function($){\n    \n    function UserInfoService(requestUrl, data) {\n        this.data = data;\n        this.requestUrl = requestUrl;\n    }\n\n    UserInfoService.prototype.get = function(property, callback){\n        if (this.data.hasOwnProperty(property)) {\n            if (typeof callback === \"function\") {\n                    callback(this.data[property]);\n            }\n        } else {\n            $.ajax({\n                url : this.requestUrl,\n                data \t\t: {\n                    'property' : property\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : (function(service, callback) {return function(r) {\n            \t\tfor (key in r.data) {\n            \t\t\tservice.data[key] = r.data[key];\n            \t\t}\n                    if (typeof callback === \"function\") {\n                        callback(service.data[property]);\n                    }\n\n                }})(this, callback)\n                /*\t\n            \tfunction(r){\n                    if(r.success){\n                    \tconsole.log(this.data);\n                    \tthis.data[property] = r.values;\n                    \t//console.log(this.data);\n\t                    if (typeof callback === \"function\") {\n\t                        callback(this.data[property]);\n\t                    }\n                    }\n                }\n                */\n                \n                \n            });\n        }\n    };\n\n    return UserInfoService;\n});\n","define('serviceApi/StateStorage',['jquery'], function($){\n    \n    function StateStorage(state, submitUrl) {\n        this.state = state;\n        this.submitUrl = submitUrl;\n    }\n\n    StateStorage.prototype.get = function(callback){\n        if (typeof callback === 'function') {\n                callback(this.state);\n        }\n        return this.state;\n    };\n\n    StateStorage.prototype.set = function(state, callback){\n\n        if (state === this.state) {\n            if (typeof callback === \"function\") {\n                    callback();\n            }\n        } else {\n            $.ajax({\n                url : this.submitUrl,\n                data \t\t: {\n                    'state' : state\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : typeof callback === \"function\" ? callback : null\n            });\n        }\n    };\n\n    return StateStorage;\n});\n","// Badonkatrunc 1.0.0, (http://badonkatrunc.com)\n// Copyright (c) 2012 Plexipixel, Inc. (http://plexipixel.com)\n\n// Developed by: Joel Day (joeld@plexipixel.com)\n// Co-conspirator: David Seelig\n\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\ndefine('jquery.trunc',['jquery'],function($){var methods={init:function(options){var all=this;var instanceOptions=$.extend(true,{},$.fn.badonkatrunc.defaultOptions,options);if(instanceOptions.fitDirection!=\"horizontal\"&&instanceOptions.fitDirection!=\"vertical\"){$.error(\"'\"+instanceOptions.fitDirection+\"' is not a valid fit direction. Use 'horizontal' or 'vertical.'\");return this;}if(instanceOptions.truncateLocation!=\"start\"&&instanceOptions.truncateLocation!=\"middle\"&&instanceOptions.truncateLocation!=\"end\"){$.error(\"'\"+instanceOptions.truncateLocation+\"' is not a valid truncation location. Use 'start,' 'middle' or 'end.'\");return this;}if(instanceOptions.minimumFontSize>instanceOptions.maximumFontSize){$.error(\"Minimum font size can not exceed the maximum font size.\");return this;}if(instanceOptions.minimumLetterSpacing>instanceOptions.maximumLetterSpacing){$.error(\"Minimum letter spacing can not exceed the maximum letter spacing.\");return this;}return this.each(function(){var $this=$(this);var data=$(this).data(\"badonkatrunc\");if(data){$this.badonkatrunc(\"destroy\");}var instance=pluginInstance($this,instanceOptions,all);$(this).data(\"badonkatrunc\",instance);instance.init();if(instance.options.automaticSizeTracking){resizeMonitor.add(instance);}});},destroy:function(){return this.each(function(){var $this=$(this);var data=$this.data(\"badonkatrunc\");data.destroy();resizeMonitor.remove(data);dirtyMonitor.remove(data);$(window).unbind(\".badonkatrunc\");$this.removeData(\"badonkatrunc\");});},refresh:function(){return this.each(function(){var $this=$(this);var data=$this.data(\"badonkatrunc\");dirtyMonitor.remove(data);data.refresh();});},changeContents:function(newContents){return this.each(function(){var $this=$(this);var data=$this.data(\"badonkatrunc\");if(typeof(newContents)==\"string\"){data.contentHtml=$(\"<span></span>\").text(newContents).html();}else{data.contentHtml=$(newContents).html();}dirtyMonitor.add(data);});}};$.fn.badonkatrunc=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else{if(typeof method===\"object\"||!method){return methods.init.apply(this,arguments);}else{$.error(\"Method \"+method+\" does not exist on jQuery.badonkatrunc\");}}};$.fn.badonkatrunc.settings={sizeTrackingTimeout:1000/60};$.fn.badonkatrunc.defaultOptions={automaticSizeTracking:false,fitDirection:\"horizontal\",minimumFontSize:1,maximumFontSize:1,fontSizeSynced:false,minimumLetterSpacing:0,maximumLetterSpacing:0,letterSpacingSynced:false,truncate:true,truncateString:\"&hellip;\",truncateLocation:\"end\",truncateOnlyWholeWords:false,extraOptimizeLimit:8};$.fn.btrunc=$.fn.badonkatrunc;var pluginInstance=function($target,options,$targetGroup){var createRenderState=function(content,fontSize,letterSpacing){return{content:content,fontSize:fontSize,letterSpacing:letterSpacing};};var instance={target:$target,options:options,refresh:function(){var self=this;var view=createHtmlTextView(this.contentHtml);var text=this.contentHtml;var fontSize=this.options.maximumFontSize;var letterSpacing=this.options.maximumLetterSpacing;var renderFunc=function(){var state=createRenderState(text,fontSize,letterSpacing);self.renderState(state);};var overflowFunc=function(){return self.getCurrentOverflow();};if(this.options.maximumFontSize-this.options.minimumFontSize>0){optimize(self.options.minimumFontSize,self.options.maximumFontSize,function(value){fontSize=value;renderFunc();},overflowFunc);}if(this.options.maximumLetterSpacing-this.options.minimumLetterSpacing>0){var truncationLevel=1;if(this.options.truncate){optimize(0,1,function(value){truncationLevel=value;text=getTruncatedHtml(view,self.options.truncateString,self.options.truncateLocation,value,true);optimize(self.options.minimumLetterSpacing,0,function(value){letterSpacing=value;renderFunc();},overflowFunc);renderFunc();},overflowFunc);}if(truncationLevel==1){optimize(self.options.minimumLetterSpacing,self.options.maximumLetterSpacing,function(value){letterSpacing=value;renderFunc();},overflowFunc);}}if(this.options.truncate){optimize(0,1,function(value){text=getTruncatedHtml(view,self.options.truncateString,self.options.truncateLocation,value,self.options.truncateOnlyWholeWords);renderFunc();},overflowFunc,this.options.extraOptimizeLimit);}this.renderState(createRenderState(text,fontSize,letterSpacing),!this.options.truncate);this.currentOptimalState=this.currentRenderedState;this.syncFonts();},syncFonts:function(){if($targetGroup.length>1&&(this.options.fontSizeSynced||this.options.letterSpacingSynced)){var lowestFontSize=this.currentOptimalState.fontSize;var lowestLetterSpacing=this.currentOptimalState.letterSpacing;for(var i=0;i<$targetGroup.length;i++){var groupInstance=$($targetGroup[i]).data(\"badonkatrunc\");if(groupInstance!=null&&groupInstance.currentOptimalState!=null){if(groupInstance.currentOptimalState.fontSize<lowestFontSize){lowestFontSize=groupInstance.currentOptimalState.fontSize;}if(groupInstance.currentOptimalState.letterSpacing<lowestLetterSpacing){lowestLetterSpacing=groupInstance.currentOptimalState.letterSpacing;}}}for(var i=0;i<$targetGroup.length;i++){var groupInstance=$($targetGroup[i]).data(\"badonkatrunc\");if(groupInstance!=null){groupInstance.acceptFontSync(lowestFontSize,lowestLetterSpacing);}}}},acceptFontSync:function(fontSize,letterSpacing){var self=this;var view=createHtmlTextView(this.contentHtml);var text=this.contentHtml;if(this.currentOptimalState!=null){if(!this.options.fontSizeSynced){fontSize=this.currentOptimalState.fontSize;}if(!this.options.letterSpacingSynced){letterSpacing=this.currentOptimalState.letterSpacing;}}var renderFunc=function(){self.renderState(createRenderState(text,fontSize,letterSpacing));};var overflowFunc=function(){return self.getCurrentOverflow();};if(this.options.truncate){optimize(0,1,function(value){text=getTruncatedHtml(view,self.options.truncateString,self.options.truncateLocation,value,self.options.truncateOnlyWholeWords);renderFunc();},overflowFunc);}this.renderState(createRenderState(text,fontSize,letterSpacing),!this.options.truncate);},init:function(){this.contentHtml=this.target.html();this.settingsWrapper=$('<span style=\"margin: 0px; padding: 0px; border: 0px;\"></span>');this.settingsWrapper.addClass(\"badonkatrunc-wrapper\");if(!$.browser.mozilla&&!$.browser.opera&&!($.browser.msie&&$.browser.version==\"7.0\")){this.settingsWrapper.css(\"display\",\"block\");}this.target.empty();this.target.append(this.settingsWrapper);this.refresh();},destroy:function(){this.target.empty();this.target.append(this.contentHtml);},renderState:function(state,forceAllowWrap){this.settingsWrapper.css(\"font-size\",state.fontSize+\"em\");this.settingsWrapper.css(\"letter-spacing\",state.letterSpacing+\"em\");var whiteSpace=(!forceAllowWrap&&this.options.fitDirection==\"horizontal\")?\"nowrap\":\"normal\";this.settingsWrapper.css(\"white-space\",whiteSpace);this.settingsWrapper.empty();this.settingsWrapper.append(state.content);this.currentRenderedState=state;},getCurrentOverflow:function(){var wrapper=this.settingsWrapper[0];var overflow=(this.options.fitDirection==\"horizontal\")?wrapper.scrollWidth-$target.width():wrapper.offsetHeight-$target.height();return overflow;}};return instance;};var createDispatcher=function(updateFunc,addFunc,removeFunc,updateTimeout){var dispatcherInstance={_instances:[],_updateLoop:function(){if($.isFunction(updateFunc)){for(var i=0;i<dispatcherInstance._instances.length;i++){updateFunc(dispatcherInstance._instances[i]);}}if(updateTimeout!=null){if(dispatcherInstance._instances.length>0){setTimeout(dispatcherInstance._updateLoop,updateTimeout);}}else{dispatcherInstance._instances=[];}},add:function(instance){if($.inArray(instance,this._instances)!=-1){return;}if($.isFunction(addFunc)){addFunc(instance);}this._instances.push(instance);if(this._instances.length==1){if(updateTimeout==null){setTimeout(this._updateLoop);}else{this._updateLoop();}}},remove:function(instance){var index=$.inArray(instance,this._instances);if(index!=-1){this._instances.splice(index,1);if($.isFunction(removeFunc)){removeFunc(instance);}}}};return dispatcherInstance;};var resizeMonitor=createDispatcher(function(instance){instance.elementSizeCache.update();},function(instance){instance.elementSizeCache={width:null,height:null,update:function(){var newWidth=instance.target.width();var newHeight=instance.target.height();var hasChanged=((this.width!=null&&newWidth!=this.width)||(this.height!=null&&newHeight!=this.height));this.width=newWidth;this.height=newHeight;if(hasChanged){this.changed();}},changed:function(){dirtyMonitor.add(instance);}};},function(instance){instance.elementSizeCache=undefined;},$.fn.badonkatrunc.settings.sizeTrackingTimeout);var dirtyMonitor=createDispatcher(function(instance){instance.refresh.apply(instance);},null,null,null);var getTruncatedHtml=function(htmlTextView,truncateString,truncateLocation,amount,wordRounded){var text=htmlTextView.text;if(amount>1){amount=1;}if(amount<0){amount=0;}if(amount==1){return htmlTextView.html;}var getTruncatedRange=function(begin,length){var words=text.split(\" \");var totalEntities=(wordRounded)?words.length:text.length;var entityBegin=totalEntities*begin;var entityLength=totalEntities*length;if(wordRounded){var getCharacterPosition=function(wordIndex){var characterCount=0;for(var i=0;i<wordIndex;i++){characterCount+=words[i].length+1;}return characterCount;};var endWord=entityBegin+entityLength;entityBegin=getCharacterPosition(entityBegin);entityLength=getCharacterPosition(endWord)-entityBegin;}return htmlTextView.getHtmlSubstring(entityBegin,entityLength);};switch(truncateLocation){case\"middle\":var amountPerSide=amount/2;var left=getTruncatedRange(0,amountPerSide);var right=getTruncatedRange(1-amountPerSide,amountPerSide);return $.trim(left)+\" \"+truncateString+\" \"+$.trim(right);case\"start\":var truncated=getTruncatedRange(1-amount,amount);return truncateString+$.trim(truncated);case\"end\":var truncated=getTruncatedRange(0,amount);return $.trim(truncated)+truncateString;}};var createHtmlTextView=function(contentHtml){var $content=$(\"<span></span>\");$content.html(contentHtml);var view={html:contentHtml,text:$content.text(),getHtmlSubstring:function(index,length){var element=$content.clone()[0];var totalProcessedLength=0;var totalOutputLength=0;var nodesWithinRange=[];var withinRange=false;var stripOutOfRangeTextInElement=function(node){if(node.nodeType==3){var dataLength=node.data.length;var newData=\"\";var wasWithinRange=false;for(var i=0;i<dataLength;i++){totalProcessedLength++;if(totalProcessedLength>=index&&totalOutputLength<length){withinRange=true;wasWithinRange=true;newData+=node.data.substr(i,1);totalOutputLength++;}else{if(withinRange==true){withinRange=false;}}}node.data=newData;if(wasWithinRange){nodesWithinRange.push(node);}}else{if(node.nodeType==1){if(withinRange){nodesWithinRange.push(node);}var childCount=node.childNodes.length;for(var i=0;i<childCount;i++){stripOutOfRangeTextInElement(node.childNodes[i]);}}}};stripOutOfRangeTextInElement(element);var parentNodesToKeep=[];var markParentNodesToKeep=function(element){var keepNode=function(node){parentNodesToKeep.push(node);if(node.parentNode!=null){keepNode(node.parentNode);}};keepNode(element);};var nodesWithinRangeCount=nodesWithinRange.length;for(var t=0;t<nodesWithinRangeCount;t++){markParentNodesToKeep(nodesWithinRange[t]);}var removeUnusedNodes=function(node){var nodesToRemove=[];var childNodeCount=node.childNodes.length;for(var i=0;i<childNodeCount;i++){var childNode=node.childNodes[i];if(childNode.nodeType!=3){if($.inArray(childNode,parentNodesToKeep)==-1){nodesToRemove.push(childNode);}else{removeUnusedNodes(childNode);}}}for(var i=0;i<nodesToRemove.length;i++){var node=nodesToRemove[i];node.parentNode.removeChild(node);}};removeUnusedNodes(element);return $(element).html();}};return view;};var optimize=function(min,max,actionFunc,overflowFunc,extraOptimizeLimit){var currentMax=max;var currentMin=min;var currentValue=max;var lastResult=null;var mostOptimalResult=null;var mostOptimalValue=null;var sameResultCount=0;while(true){actionFunc(currentValue);var result=overflowFunc();if(result<=0){var moreOptimal=true;if(mostOptimalResult!=null){if(mostOptimalResult>result){moreOptimal=false;}else{if(result==mostOptimalResult){if(currentValue<=mostOptimalValue){moreOptimal=false;}}}}if(moreOptimal){mostOptimalResult=result;mostOptimalValue=currentValue;}}if(result==lastResult){sameResultCount++;if(extraOptimizeLimit==undefined||sameResultCount==extraOptimizeLimit){if(mostOptimalValue!=null){actionFunc(mostOptimalValue);}return;}}if(result>0){currentMax=currentValue;var difference=(currentValue-currentMin);currentValue-=(difference/2);}else{if(result<=0){currentMin=currentValue;currentValue=currentMax;}}lastResult=result;}};});\n\n","define('taoQtiTest/controller/runtime/testRunner',['jquery', 'lodash', 'spin', 'serviceApi/ServiceApi', 'serviceApi/UserInfoService', 'serviceApi/StateStorage', 'iframeResizer', 'iframeNotifier', 'i18n', 'mathJax', 'jquery.trunc', 'ui/progressbar'],\n    function($,  _, Spinner, ServiceApi, UserInfoService, StateStorage, iframeResizer, iframeNotifier, __, MathJax){\n\n\t    var timerIds = [];\n\t    var currentTimes = [];\n\t    var lastDates = [];\n\t\tvar timeDiffs = [];\n\t\tvar waitingTime = 0;\n\n\t    var TestRunner = {\n\t    // Constants\n\t    'TEST_STATE_INITIAL': 0,\n\t    'TEST_STATE_INTERACTING': 1,\n\t    'TEST_STATE_MODAL_FEEDBACK': 2,\n\t    'TEST_STATE_SUSPENDED': 3,\n\t    'TEST_STATE_CLOSED': 4,\n\t    'TEST_NAVIGATION_LINEAR': 0,\n\t    'TEST_NAVIGATION_NONLINEAR': 1,\n\t    'TEST_ITEM_STATE_INTERACTING': 1,\n\n\t\tbeforeTransition : function(callback) {\n\t\t    // Ask the top window to start the loader.\n            iframeNotifier.parent('loading');\n\n            // Disable buttons.\n\t\t    this.disableGui();\n\n\t        $('#qti-item, #qti-info, #qti-rubrics, #qti-timers').css('display', 'none');\n\n\t        // Wait at least waitingTime ms for a better user experience.\n\t        if(typeof callback === 'function'){\n\t            setTimeout(callback, waitingTime);\n\t        }\n\t\t},\n\n\t\tafterTransition : function() {\n\t\t    this.enableGui();\n\n    \t    //ask the top window to stop the loader\n    \t    iframeNotifier.parent('unloading');\n\t\t},\n\n\t\tmoveForward: function() {\n\t\t    this.disableGui();\n\n\t\t    var that = this;\n\t\t    this.itemServiceApi.kill(function(signal) {\n\t\t        that.actionCall('moveForward');\n\t\t    });\n\t\t},\n\n\t\tmoveBackward : function() {\n\t\t    this.disableGui();\n\n\t\t    var that = this;\n\t\t    this.itemServiceApi.kill(function(signal) {\n                that.actionCall('moveBackward');\n            });\n\t\t},\n\n\t\tskip : function() {\n\t\t    this.disableGui();\n\n\t\t\tthis.actionCall('skip');\n\t\t},\n\n\t\ttimeout: function() {\n\t\t    this.disableGui();\n\n\t\t\tthis.assessmentTestContext.isTimeout = true;\n\t\t\tthis.updateTimer();\n\t\t\tthis.actionCall('timeout');\n\t\t},\n\n\t\tcomment : function() {\n\t\t\t$('#qti-comment > textarea').val(__('Your comment...'));\n\t\t    $('#qti-comment').css('display', 'block');\n\t\t    $('#qti-comment > button').css('display', 'inline');\n\t\t},\n\n\t\tcloseComment : function() {\n\t\t    $('#qti-comment').css('display', 'none');\n\t\t},\n\n\t\temptyComment : function() {\n\t\t    $('#qti-comment > textarea').val('');\n\t\t},\n\n\t\tstoreComment: function() {\n\t\t    var self = this;\n\t\t    $.ajax({\n\t\t            url: self.assessmentTestContext.commentUrl,\n\t\t            cache: false,\n\t\t            async: true,\n\t\t            type: 'POST',\n\t\t            data: { comment: $('#qti-comment > textarea').val() },\n\t\t            success: function(assessmentTestContext, textStatus, jqXhr) {\n\t\t                self.closeComment();\n\t\t            }\n\t\t    });\n\t\t},\n\n\t\tupdate : function(assessmentTestContext) {\n\t\t\tvar self = this;\n\t\t\t$('#qti-item').remove();\n\n\t\t\tvar $runner = $('#runner');\n\t\t\t$runner.css('height', 'auto');\n\n\t\t\tthis.assessmentTestContext = assessmentTestContext;\n\t\t\tthis.itemServiceApi = eval(assessmentTestContext.itemServiceApiCall);\n\n\t\t\tthis.updateContext();\n\t\t\tthis.updateProgress();\n\t\t\tthis.updateNavigation();\n\t\t\tthis.updateInformation();\n\t\t\tthis.updateRubrics();\n\t\t\tthis.updateTools();\n\t\t\tthis.updateTimer();\n\n\t\t\t$itemFrame = $('<iframe id=\"qti-item\" frameborder=\"0\"/>');\n\t\t\t$itemFrame.appendTo('#qti-content');\n\t\t\tiframeResizer.autoHeight($itemFrame, 'body');\n\n\t\t\tif (navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false == true) {\n\t\t\t    $('#qti-content').css('overflow-y', 'scroll');\n\t\t\t}\n\n\t\t\tif (this.assessmentTestContext.itemSessionState === this.TEST_ITEM_STATE_INTERACTING && self.assessmentTestContext.isTimeout === false) {\n\t\t\t    $(document).on('serviceloaded', function() {\n\t\t\t        self.afterTransition();\n                    self.adjustFrame();\n                    $itemFrame.show();\n\t\t\t    });\n\n\t\t\t    // Inject API into the frame.\n\t\t\t    this.itemServiceApi.loadInto($itemFrame[0], function(){\n\t\t\t        // We now rely on the 'serviceloaded' event.\n\t\t\t    });\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// e.g. no more attempts or timeout! Simply consider the transition is finished,\n\t\t\t\t// but do not load the item.\n\t\t\t\tself.afterTransition();\n\t\t\t}\n\t\t},\n\n\t\tupdateInformation : function() {\n            $('#qti-info').remove();\n\n            if (this.assessmentTestContext.isTimeout === true) {\n            \t$('<div id=\"qti-info\" class=\"info\"></div>').prependTo('#qti-content');\n            \t$('#qti-info').html(__('Maximum time limit reached for item \"%s\".').replace('%s', this.assessmentTestContext.itemIdentifier));\n            }\n            else if (this.assessmentTestContext.itemSessionState !== this.TEST_ITEM_STATE_INTERACTING) {\n            \t$('<div id=\"qti-info\" class=\"info\"></div>').prependTo('#qti-content');\n            \t$('#qti-info').html(__('No more attempts allowed for item \"%s\".').replace('%s', this.assessmentTestContext.itemIdentifier));\n            }\n\t\t},\n\n\t\tupdateTools : function updateTools() {\n\t\t    if (this.assessmentTestContext.allowComment === true) {\n\t            $('#comment').css('display', 'inline');\n\t\t    }\n\t\t    else {\n\t            $('#comment').css('display', 'none');\n\t\t    }\n\n\t\t    if (this.assessmentTestContext.allowSkipping === true) {\n\t\t        if (this.assessmentTestContext.isLast === false) {\n\t\t            $('#skip').css('display', 'inline');\n\t\t            $('#skip-end').css('display', 'none');\n\t\t        }\n\t\t        else {\n\t\t            $('#skip-end').css('display', 'inline');\n\t\t            $('#skip').css('display', 'none');\n\t\t        }\n\t\t    }\n\t\t    else {\n\t\t    \t$('#skip').css('display', 'none');\n\t\t    \t$('#skip-end').css('display', 'none');\n\t\t    }\n\t\t},\n\n\t\tupdateTimer : function() {\n\t\t\tvar self = this;\n\t\t\t$('#qti-timers').remove();\n\n\t\t\tfor (var i = 0; i < timerIds.length; i++) {\n\t\t\t\tclearTimeout(timerIds[i]);\n\t\t\t}\n\n\t\t    timerIds = [];\n\t\t    currentTimes = [];\n\t\t    lastDates = [];\n\t\t\ttimeDiffs = [];\n\n\t\t\tif (self.assessmentTestContext.isTimeout == false && self.assessmentTestContext.itemSessionState == self.TEST_ITEM_STATE_INTERACTING) {\n\n\t\t\t    if (this.assessmentTestContext.timeConstraints.length > 0) {\n\n\t\t\t    \t// Insert QTI Timers container.\n\t\t\t    \t$('<div id=\"qti-timers\"></div>').prependTo('#qti-content');\n\t\t\t    \t// self.formatTime(cst.seconds)\n\t\t\t        for (var i = 0; i < this.assessmentTestContext.timeConstraints.length; i++) {\n\n\t\t\t        \tvar cst = this.assessmentTestContext.timeConstraints[i];\n\n\t\t\t        \tif (cst.allowLateSubmission == false) {\n\t\t\t        \t // Set up a timer for this constraint.\n\t                        $('<div class=\"qti-timer\"><span class=\"icon-time\"></span> ' + cst.source + ' - ' + self.formatTime(cst.seconds) + '</div>').appendTo('#qti-timers');\n\n\t                        // Set up a timer and update it with setInterval.\n\t                        currentTimes[i] = cst.seconds;\n\t                        lastDates[i] = new Date();\n\t                        timeDiffs[i] = 0;\n\t                        timerIndex = i;\n\t                        source = cst.source;\n\n\t                        // ~*~*~ ❙==[||||)0__    <----- SUPER CLOSURE !\n\t                        var superClosure = function(timerIndex, source) {\n\t                            timerIds[timerIndex] = setInterval(function() {\n\n\t                                timeDiffs[timerIndex] += (new Date()).getTime() - lastDates[timerIndex].getTime();\n\n\t                                if (timeDiffs[timerIndex] >= 1000) {\n\t                                    var seconds = timeDiffs[timerIndex] / 1000;\n\t                                    currentTimes[timerIndex] -= seconds;\n\t                                    timeDiffs[timerIndex] = 0;\n\t                                }\n\n\t                                if (currentTimes[timerIndex] <= 0) {\n\t                                    // The timer expired...\n\t                                    $('#qti-timers > .qti-timer').eq(timerIndex).html(self.formatTime(Math.round(currentTimes[timerIndex])));\n\t                                    currentTimes[timerIndex] = 0;\n\t                                    clearInterval(timerIds[timerIndex]);\n\n\t                                     // Hide item to prevent any further interaction with the candidate.\n                                        $('#qti-item').css('display', 'none');\n                                        self.timeout();\n\t                                }\n\t                                else {\n\t                                    // Not timed-out...\n\t                                    $('#qti-timers > .qti-timer').eq(timerIndex).html('<span class=\"icon-time\"></span> ' + source + ' - ' + self.formatTime(Math.round(currentTimes[timerIndex])));\n\t                                    lastDates[timerIndex] = new Date();\n\t                                }\n\n\t                            }, 1000);\n\t                        }\n\n\t                        superClosure(timerIndex, source);\n\t\t\t        \t}\n\t\t\t        }\n\n\t\t\t        $('#qti-timers').css('display', 'block');\n\t\t\t    }\n\t\t\t}\n\t\t},\n\n\t\tupdateRubrics : function() {\n\t\t    $('#qti-rubrics').remove();\n\n\t\t    if (this.assessmentTestContext.rubrics.length > 0) {\n\n                var $rubrics = $('<div id=\"qti-rubrics\"></div>');\n\n                for (var i = 0; i < this.assessmentTestContext.rubrics.length; i++) {\n                        $rubrics.append(this.assessmentTestContext.rubrics[i]);\n                }\n\n                // modify the <a> tags in order to be sure it\n                // opens in another window.\n                $rubrics.find('a').bind('click keypress', function() {\n                        window.open(this.href);\n                        return false;\n                });\n\n                $rubrics.prependTo('#qti-content');\n\n                if(MathJax){\n                    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $('#qti-rubrics')[0]);\n                }\n\n\t\t    }\n\t\t},\n\n\t\tupdateNavigation: function() {\n\t\t    if (this.assessmentTestContext.navigationMode === this.TEST_NAVIGATION_LINEAR) {\n\t\t    \t// LINEAR\n\t    \t\t$('#move-backward').css('display', 'none');\n\t    \t\t$('#move-forward').css('display', (this.assessmentTestContext.isLast === true) ? 'none' : 'inline');\n\t    \t\t$('#move-end').css('display', (this.assessmentTestContext.isLast === true) ? 'inline' : 'none');\n\t\t    }\n\t\t    else {\n\t\t    \t// NONLINEAR\n\t\t    \t$('#qti-actions').css('display', 'block');\n\t\t    \t$('#move-forward').css('display', (this.assessmentTestContext.isLast === true) ? 'none' : 'inline');\n\t\t    \t$('#move-end').css('display', (this.assessmentTestContext.isLast === true) ? 'inline' : 'none');\n\t\t    \t$('#move-backward').css('display', (this.assessmentTestContext.canMoveBackward === true) ? 'inline' : 'none');\n\t\t    }\n\t\t},\n\n\t\tupdateProgress: function() {\n\n\t\t    var considerProgress = this.assessmentTestContext.considerProgress;\n\n\t\t    $('#qti-test-progress').css('visibility', (considerProgress === true) ? 'visible' : 'hidden');\n\n\t\t    if (considerProgress === true) {\n\t\t        var ratio = Math.floor(this.assessmentTestContext['numberCompleted'] / this.assessmentTestContext['numberItems'] * 100);\n\t            var label = __('Test completed at %d%%').replace('%d', ratio).replace('%%', '%');\n\t            $('#qti-progress-label').text(label);\n\t            $('#qti-progressbar').progressbar('value', ratio);\n\t\t    }\n\t\t},\n\n\t\tupdateContext: function() {\n\n\t\t    var testTitle = this.assessmentTestContext.testTitle;\n\t\t    var testPartId = this.assessmentTestContext.testPartId;\n\t\t    var sectionTitle = this.assessmentTestContext.sectionTitle;\n\n\t\t    $('#qti-test-title').text(testTitle);\n\n\t\t    try {\n\t\t        $('#qti-test-title, #qti-test-position').badonkatrunc('destroy');\n\t\t    }\n\t\t    catch (e) {\n\t\t        // Very first call, the badonkatrunc wrapper was not there.\n\t\t        // Continue normally.\n\t\t    }\n\n\t\t    $('#qti-test-position').empty().append('<span id=\"qti-section-title\">' + sectionTitle + '</span>');\n\t\t    $('#qti-test-title, #qti-test-position').badonkatrunc().css('visibility', 'visible');\n\t\t},\n\n\t\tadjustFrame: function() {\n\n\t\t    var actionsHeight = $('#qti-actions').outerHeight();\n\t\t    var windowHeight = window.innerHeight ? window.innerHeight : $(window).height();\n\t\t    var navigationHeight = $('#qti-navigation').outerHeight();\n\t\t    var newContentHeight = windowHeight - actionsHeight - navigationHeight;\n\n\t\t    var $content = $('#qti-content');\n\t\t    $content.height(newContentHeight - parseInt($content.css('paddingTop')) - parseInt($content.css('paddingBottom')));\n\t\t},\n\n\t\tdisableGui: function() {\n\t\t    $('#qti-navigation button').addClass('disabled');\n\t\t},\n\n\t\tenableGui: function() {\n\t\t    $('#qti-navigation button').removeClass('disabled');\n\t\t},\n\n\t\tformatTime: function(totalSeconds) {\n\t\t    var sec_num = totalSeconds;\n\t\t    var hours   = Math.floor(sec_num / 3600);\n\t\t    var minutes = Math    .floor((sec_num - (hours * 3600)) / 60);\n\t\t    var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n\t\t    if (hours   < 10) {hours   = \"0\" + hours;}\n\t\t    if (minutes < 10) {minutes = \"0\" + minutes;}\n\t\t    if (seconds < 10) {seconds = \"0\" + seconds;}\n\n\t\t    var time    = hours + ':' + minutes + ':' + seconds;\n\n\t\t    return \"\\u00b1 \" + time;\n\t\t},\n\n\t\tactionCall: function(action) {\n\t\t\tvar self = this;\n\t\t\tthis.beforeTransition(function() {\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: self.assessmentTestContext[action + 'Url'],\n\t\t\t\t\tcache: false,\n\t\t\t\t\tasync: true,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tsuccess: function(assessmentTestContext, textStatus, jqXhr) {\n\t\t\t\t\t\tif (assessmentTestContext.state === self.TEST_STATE_CLOSED) {\n\t\t\t\t\t\t\tself.serviceApi.finish();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tself.update(assessmentTestContext);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t    start : function(assessmentTestContext){\n\t        \n\t        $(document).ajaxError(function(event, jqxhr) {\n                if (jqxhr.status == 403) {\n                    iframeNotifier.parent('serviceforbidden');\n                }\n            });\n\t        \n\t    \twindow.onServiceApiReady = function onServiceApiReady(serviceApi) {\n\t            TestRunner.serviceApi = serviceApi;\n\n\t           // If the assessment test session is in CLOSED state,\n\t           // we give the control to the delivery engine by calling\n\t           // finish.\n\t           if (assessmentTestContext.state === TestRunner.TEST_STATE_CLOSED) {\n                   serviceApi.finish();\n\t           }\n\t           else {\n                   TestRunner.update(assessmentTestContext);\n\t           }\n\t        };\n\n\t        TestRunner.beforeTransition();\n\t        TestRunner.assessmentTestContext = assessmentTestContext;\n\n\t        $('#skip, #skip-end').click(function(){\n\t            if (!$(this).hasClass('disabled')) {\n\t                TestRunner.skip();\n\t            }\n\t        });\n\n\t        $('#move-forward, #move-end').click(function(){\n\t            if (!$(this).hasClass('disabled')) {\n\t                TestRunner.moveForward();\n\t            }\n\t        });\n\n\t        $('#move-backward').click(function(){\n\t            if (!$(this).hasClass('disabled')) {\n\t                TestRunner.moveBackward();\n\t            }\n\t        });\n\n\t        $('#comment').click(function(){\n\t            if (!$(this).hasClass('disabled')) {\n\t                TestRunner.comment();\n\t            }\n\t        });\n\n\t        $('#qti-comment-cancel').click(function(){\n\t                TestRunner.closeComment();\n\t        });\n\n\t        $('#qti-comment-send').click(function(){\n\t            TestRunner.storeComment();\n\t        });\n\n\t        $('#qti-comment > textarea').click(function(){\n\t            TestRunner.emptyComment();\n\t        });\n\n\t        $(window).bind('resize', function() {\n\t            TestRunner.adjustFrame();\n\t            $('#qti-test-title, #qti-test-position').badonkatrunc();\n\t        });\n\n\t        $(document).bind('loading', function() {\n\t            iframeNotifier.parent('loading');\n\t        });\n\n\n\t        $(document).bind('unloading', function() {\n                iframeNotifier.parent('unloading');\n\t        });\n\n            $('#qti-progressbar').progressbar();\n\n\t        iframeNotifier.parent('serviceready');\n\t    }\n\t};\n});\n\n"]}